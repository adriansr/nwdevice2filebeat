<?xml version="1.0" encoding="ISO-8859-1" ?>
<DEVICEMESSAGES
	name="crossbeamc"
	displayname="Crossbeam C-Series"
	group="Unix">
<VERSION
	xml="6"
	checksum="c3a57c80fa571c21a1d25c2cd5927b8f"
	revision="0"
	device="2.0" />

 

<HEADER 
	id1="0001" 
	id2="0001" 
	content="&lt;messageid&gt;(&lt;hfld1&gt;)[&lt;data&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0002" 
	id2="0002" 
	content="&lt;messageid&gt;[&lt;data&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0003" 
	id2="0003" 
	content="&lt;messageid&gt;: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0004" 
	id2="0004" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;messageid&gt;(&lt;hfld1&gt;)[&lt;data&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0005" 
	id2="0005" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;hfld1&gt; &lt;messageid&gt;[&lt;data&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0006" 
	id2="0006" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;messageid&gt;[&lt;data&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0007" 
	id2="0007" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;messageid&gt;: &lt;!payload:messageid&gt;" />
		
<HEADER 
	id1="0009" 
	id2="0009" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;hfld1&gt; &lt;messageid&gt;: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0008" 
	id2="0008" 
	content="&lt;hmonth&gt; &lt;hday&gt; &lt;htime&gt; &lt;hhost&gt; &lt;messageid&gt; &lt;!payload:messageid&gt;" />
<MESSAGE 
	id1="000001" 
	id2="admin" 
	eventcategory="1401060000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:DIALUP&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: DIALUP AT &lt;interface&gt; BY &lt;username&gt;" />
<MESSAGE 
	id1="000002" 
	id2="admin" 
	eventcategory="1401060000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:LOGIN&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: LOGIN ON &lt;interface&gt; BY &lt;username&gt;" />
<MESSAGE 
	id1="000003" 
	id2="/etc/hotplug/net.agent" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;filename&gt;: invoke ifup &lt;interface&gt; for new macaddr" />
<MESSAGE 
	id1="000004" 
	id2="camd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: camd startup succeeded" />
<MESSAGE 
	id1="000005" 
	id2="camd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: camd shutdown succeeded" />
<MESSAGE 
	id1="000006" 
	id2="camd" 
	eventcategory="1605010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Platform does not support bypass&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;: Platform does not support bypass (&lt;info&gt;)" />
<MESSAGE 
	id1="000128" 
	id2="camd" 
	eventcategory="1601000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Failed to initialize plugin bypass&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: [&lt;fld2&gt;] Initialize Failed to initialize plugin bypass" />
<MESSAGE 
	id1="000129" 
	id2="camd" 
	eventcategory="1603110000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Could not initialize bypass driver&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: [&lt;fld2&gt;] Initialize Could not initialize bypass driver" />
<MESSAGE 
	id1="000007" 
	id2="camd" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000008" 
	id2="cbs_cavium" 
	eventcategory="1603010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000009" 
	id2="cbs_initconf" 
	eventcategory="1603010100"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:mount&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: mount: &lt;filename&gt; is not a valid block device" />
<MESSAGE 
	id1="000010" 
	id2="cbs_initconf" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000011" 
	id2="cbs_secureXLboot" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000012" 
	id2="cbs_securexld" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000013" 
	id2="cbsfam" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Stopping secureXL&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Stopping &lt;interface&gt;" />
<MESSAGE 
	id1="000014" 
	id2="cbsfam" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:cannot open shared object file&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;filename&gt;: error while loading shared libraries: &lt;fld2&gt;.so: cannot open shared object file: &lt;info&gt;" />
<MESSAGE 
	id1="000015" 
	id2="cbsfam" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000016" 
	id2="cbslpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cbslpd startup succeeded" />
<MESSAGE 
	id1="000017" 
	id2="cmgrd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cmgrd shutdown succeeded" />
<MESSAGE 
	id1="000018" 
	id2="cmgrd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cmgrd startup succeeded" />
<MESSAGE 
	id1="000019" 
	id2="cmgrd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000020" 
	id2="cnmsd" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup failed&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cnmsd startup failed" />
<MESSAGE 
	id1="000021" 
	id2="cnmsd" 
	eventcategory="1603110000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:failed open&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: [&lt;fld2&gt;]  failed to open &lt;filename&gt; (&lt;info&gt;)" />
<MESSAGE 
	id1="000022" 
	id2="cnmsd" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000023" 
	id2="cos_config" 
	eventcategory="1605010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Platform does not support bypass&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;: Platform does not support bypass (&lt;info&gt;)" />
<MESSAGE 
	id1="000024" 
	id2="cos_config" 
	eventcategory="1401070000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:User exited&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; { exited | exied } COS shell (pid &lt;process_id&gt;)" />
<MESSAGE 
	id1="000025" 
	id2="cos_config" 
	eventcategory="1401060000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:User entered&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; entered COS shell (pid &lt;process_id&gt;)" />
<MESSAGE 
	id1="000026" 
	id2="cos_config" 
	eventcategory="1701010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; requested  &lt;action&gt; of &lt;obj_type&gt; object: &lt;&lt;data   destination=&quot;&lt;daddr&gt;&quot;   mask=&quot;&lt;dmask&gt;&quot;   gateway=&quot;&lt;gateway&gt;&quot;   metric=&quot;&lt;fld3&gt;&quot; &gt;&lt;&lt;/data&gt; " />
<MESSAGE 
	id1="000027" 
	id2="cos_config" 
	eventcategory="1701010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:addition of object&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; requested  &lt;action&gt; of &lt;obj_type&gt; object: &lt;&lt;data   ifname=&quot;&lt;interface&gt;&quot;   vlan=&quot;&lt;vlan&gt;&quot;   enabled=&quot;&lt;fld3&gt;&quot;   address=&quot;&lt;daddr&gt;&quot;   mask=&quot;&lt;fld4&gt;&quot;   broadcast=&quot;&lt;fld5&gt;&quot;   mtu_configured=&quot;&lt;fld6&gt;&quot;   mtu=&quot;&lt;fld7&gt;&quot;   proxyarp=&quot;&lt;fld8&gt;&quot;   pppoeenabled=&quot;&lt;fld9&gt;&quot;   pppoeifname=&quot;&lt;fld10&gt;&quot;   authISP=&quot;&lt;fld11&gt;&quot;   username=&quot;&lt;fld18&gt;&quot;   password=&quot;&lt;fld12&gt;&quot;   alwaysOn=&quot;&lt;fld13&gt;&quot;   ispDNS=&quot;&lt;fld14&gt;&quot;   dns1=&quot;&lt;fld15&gt;&quot;   dns2=&quot;&lt;fld16&gt;&quot;   nonRoot=&quot;&lt;fld17&gt;&quot; &gt;&lt;&lt;/data&gt; " />
<MESSAGE 
	id1="000143" 
	id2="cos_config" 
	eventcategory="1701010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:addition of object&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; requested  &lt;action&gt; of &lt;obj_type&gt; object: &lt;&lt;data   ifname=&quot;&lt;interface&gt;&quot;   vlan=&quot;&lt;vlan&gt;&quot;   id=&quot;&lt;id&gt;&quot; &gt;&lt;&lt;/data&gt; " />
<MESSAGE 
	id1="000145" 
	id2="cos_config" 
	eventcategory="1701020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:modification of object&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; requested  &lt;action&gt; of &lt;obj_type&gt; object: &lt;&lt;data   ifname=&quot;&lt;interface&gt;&quot;   mac_configured=&quot;&lt;fld20&gt;&quot;   mac_addr=&quot;&lt;smacaddr&gt;&quot;   autoneg=&quot;&lt;fld22&gt;&quot;   duplex=&quot;&lt;fld23&gt;&quot;   speed=&quot;&lt;fld24&gt;&quot;   promiscuous=&quot;&lt;fld25&gt;&quot; &gt;&lt;&lt;/data&gt; " />
<MESSAGE 
	id1="000029" 
	id2="cos_config" 
	eventcategory="1701020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:modification of object&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: User &lt;username&gt; requested  &lt;action&gt; of &lt;obj_type&gt; object: &lt;&lt;data   hostname=&quot;&lt;shost&gt;&quot;   domainname=&quot;&lt;domain&gt;&quot;   timezone=&quot;&lt;timezone&gt;&quot;   telnet_server=&quot;&lt;fld2&gt;&quot;   ftp_server=&quot;&lt;fld3&gt;&quot;   web_server=&quot;&lt;fld4&gt;&quot;   web_timeout=&quot;&lt;fld6&gt;&quot;   gateway=&quot;&lt;gateway&gt;&quot;   dial_enabled=&quot;&lt;fld7&gt;&quot;   fam_enabled=&quot;&lt;fld8&gt;&quot; &gt;&lt;&lt;/data&gt; " />
<MESSAGE 
	id1="000031" 
	id2="cos_show_system" 
	eventcategory="1605010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Platform does not support bypass&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;: Platform does not support bypass (&lt;info&gt;)" />
<MESSAGE 
	id1="000130" 
	id2="cpboot" 
	eventcategory="1502030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Installing Security Policy&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Installing Security Policy &lt;policyname&gt; on &lt;fld2&gt;" />
<MESSAGE 
	id1="000131" 
	id2="cpboot" 
	eventcategory="1502040000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Uninstalling Security Policy&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Uninstalling Security Policy from &lt;fld2&gt;" />
<MESSAGE 
	id1="000132" 
	id2="cpboot" 
	eventcategory="1502030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Could not open VPN-1 device&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: VPN-1: Could not open VPN-1 device" />
<MESSAGE 
	id1="000133" 
	id2="cpboot" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Fetching Security Policy&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Fetching Security Policy From: &lt;fld2&gt;" />
<MESSAGE 
	id1="000134" 
	id2="cpboot" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Local Policy Up-To-Date&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }:  Local Policy is Up-To-Date." />
<MESSAGE 
	id1="000032" 
	id2="cpboot" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000033" 
	id2="cpri_d" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:cprid started&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cprid started..." />
<MESSAGE 
	id1="000034" 
	id2="cpri_d" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:cprid starting&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cpridstart: Starting cprid" />
<MESSAGE 
	id1="000035" 
	id2="cpri_d" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000036" 
	id2="crond" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: crond shutdown succeeded" />
<MESSAGE 
	id1="000037" 
	id2="crond" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: crond startup succeeded" />
<MESSAGE 
	id1="000038" 
	id2="crond" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:unable to dlopen&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: PAM unable to dlopen(&lt;filename&gt;)" />
<MESSAGE 
	id1="000039" 
	id2="crond" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:cannot open shared object file&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: PAM [dlerror: &lt;filename&gt;.so: cannot open shared object file: &lt;info&gt;" />
<MESSAGE 
	id1="000040" 
	id2="crond" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:adding faulty module&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: PAM adding faulty module: &lt;filename&gt;" />
<MESSAGE 
	id1="000041" 
	id2="crond" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000042" 
	id2="cstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cstatsd startup succeeded" />
<MESSAGE 
	id1="000043" 
	id2="cstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: cstatsd shutdown succeeded" />
<MESSAGE 
	id1="000044" 
	id2="cstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000045" 
	id2="date" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000046" 
	id2="dd" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000047" 
	id2="dhcpcd" 
	eventcategory="1603060000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000048" 
	id2="exiting" 
	eventcategory="1611000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:exiting on signal&gt;"
	content="exiting on signal &lt;data&gt;" />
<MESSAGE 
	id1="000049" 
	id2="fsck" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000050" 
	id2="fw1boot" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000051" 
	id2="httpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: httpd startup succeeded" />
<MESSAGE 
	id1="000052" 
	id2="httpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: httpd shutdown succeeded" />
<MESSAGE 
	id1="000053" 
	id2="ifup" 
	eventcategory="1605020000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Determining IP information&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Determining IP information for &lt;interface&gt; " />
<MESSAGE 
	id1="000054" 
	id2="ifup" 
	eventcategory="1601000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:failed&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }:  failed." />
<MESSAGE 
	id1="000055" 
	id2="ifup" 
	eventcategory="1605020000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Set name-type for VLAN subsystem&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Set name-type for VLAN subsystem. Should be visible in &lt;filename&gt;" />
<MESSAGE 
	id1="000056" 
	id2="ifup" 
	eventcategory="1605020000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Added VLAN&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Added VLAN with VID == &lt;vlan&gt; to IF &lt;interface&gt;" />
<MESSAGE 
	id1="000057" 
	id2="ifup-vlan" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="ifup-vlan: vconfig adding vlan &lt;vlan&gt; as &lt;fld1&gt; on dev &lt;interface&gt;" />
<MESSAGE 
	id1="000058" 
	id2="init" 
	eventcategory="1610000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000123" 
	id2="kernel" 
	eventcategory="1603010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;: &lt;interface&gt;: &lt;fld3&gt;: NIC Link is &lt;action&gt; &lt;info&gt;" />
<MESSAGE 
	id1="000124" 
	id2="kernel" 
	eventcategory="1603010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;:&lt;fld3&gt;: The &lt;interface&gt; &lt;info&gt;" />
<MESSAGE 
	id1="000059" 
	id2="kernel" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;fld2&gt;: &lt;fld3&gt;: &lt;interface&gt; NIM Link is &lt;action&gt;, &lt;info&gt;" />
<MESSAGE 
	id1="000060" 
	id2="last" 
	eventcategory="1605000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:message repeated&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000061" 
	id2="lcmd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: lcmd startup succeeded" />
<MESSAGE 
	id1="000062" 
	id2="lcmd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: lcmd shutdown succeeded" />
<MESSAGE 
	id1="000063" 
	id2="lcmd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000064" 
	id2="logger" 
	eventcategory="1610000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000065" 
	id2="login" 
	eventcategory="1401030000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:FAILED LOGIN&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: FAILED LOGIN &lt;fld2&gt; FROM (null) FOR &lt;username&gt;, &lt;info&gt;" />
<MESSAGE 
	id1="000066" 
	id2="login" 
	eventcategory="1401060000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:session opened&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: session opened for user &lt;username&gt; by &lt;fld2&gt;(uid=&lt;uid&gt;)" />
<MESSAGE 
	id1="000067" 
	id2="login" 
	eventcategory="1401070000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:session closed&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: session closed for user &lt;username&gt;" />
<MESSAGE 
	id1="000068" 
	id2="login" 
	eventcategory="1401030000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: authentication failure; logname=&lt;fld10&gt; uid=&lt;uid&gt; euid=&lt;fld2&gt; tty=&lt;interface&gt; ruser=&lt;fld6&gt; rhost=&lt;shost&gt; user=&lt;username&gt;" />
<MESSAGE 
	id1="000069" 
	id2="login" 
	eventcategory="1401070000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: bad username [&lt;username&gt;]" />
<MESSAGE 
	id1="000070" 
	id2="mdmonitor" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: mdadm startup succeeded" />
<MESSAGE 
	id1="000071" 
	id2="mdmonitor" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: mdadm shutdown succeeded" />
<MESSAGE 
	id1="000072" 
	id2="mdmonitor" 
	eventcategory="1605010000"
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: mdadm succeeded" />
<MESSAGE 
	id1="000073" 
	id2="modprobe" 
	eventcategory="1603110000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Can&apos;t locate module&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld2&gt;: Can&apos;t locate module &lt;product&gt;" />
<MESSAGE 
	id1="000074" 
	id2="net-snmpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: snmpd shutdown succeeded" />
<MESSAGE 
	id1="000075" 
	id2="net-snmpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: snmpd startup succeeded" />
<MESSAGE 
	id1="000076" 
	id2="network" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000077" 
	id2="nfslock" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: rpc.statd startup succeeded" />
<MESSAGE 
	id1="000078" 
	id2="nfslock" 
	eventcategory="1603110000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown failed&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: rpc.statd shutdown failed" />
<MESSAGE 
	id1="000079" 
	id2="ntop" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: ntop startup succeeded" />
<MESSAGE 
	id1="000080" 
	id2="ntop" 
	eventcategory="1603110000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Startup Failed&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: ntop startup failed" />
<MESSAGE 
	id1="000081" 
	id2="ntop" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: ntop shutdown succeeded" />
<MESSAGE 
	id1="000082" 
	id2="ntop" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000083" 
	id2="ntpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: ntpd startup succeeded" />
<MESSAGE 
	id1="000084" 
	id2="ntpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: ntpd shutdown succeeded" />
<MESSAGE 
	id1="000125" 
	id2="ntpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:synchronisation lost&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: synchronisation lost" />
<MESSAGE 
	id1="000126" 
	id2="ntpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:frequency initialized&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: frequency initialized &lt;fld2&gt; from &lt;filename&gt;" />
<MESSAGE 
	id1="000085" 
	id2="ntpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;result&gt;" />
<MESSAGE 
	id1="000127" 
	id2="ntpdate" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:no server suitable for synchronization&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: no server suitable for synchronization found" />
<MESSAGE 
	id1="000086" 
	id2="ntpdate" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: step time server &lt;saddr&gt; offset &lt;fld2&gt; sec" />
<MESSAGE 
	id1="000087" 
	id2="passwd" 
	eventcategory="1301010000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: authentication failure; logname=&lt;fld10&gt; uid=&lt;uid&gt; euid=&lt;fld2&gt; tty=&lt;fld5&gt; ruser=&lt;fld6&gt; rhost=&lt;shost&gt; user=&lt;username&gt;" />
<MESSAGE 
	id1="000088" 
	id2="passwd" 
	eventcategory="1402040100"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Modify&gt;&lt;@ec_theme:Password&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:password changed&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: password changed for &lt;username&gt;" />
<MESSAGE 
	id1="000089" 
	id2="pidof" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:can&apos;t read sid&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: can&apos;t read sid for pid &lt;fld2&gt;" />
<MESSAGE 
	id1="000090" 
	id2="random" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000091" 
	id2="rc" 
	eventcategory="1610000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000092" 
	id2="rc.sysinit" 
	eventcategory="1610000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000093" 
	id2="rpc.statd" 
	eventcategory="1603110000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000094" 
	id2="S97cbs_initconf" 
	eventcategory="1610000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000095" 
	id2="shutdown" 
	eventcategory="1611000000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutting down&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: shutting down &lt;info&gt;" />
<MESSAGE 
	id1="000096" 
	id2="smartctl" 
	eventcategory="1605020000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:selftest is scheduled&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: { long | short } selftest is now scheduled on &lt;interface&gt;" />
<MESSAGE 
	id1="000097" 
	id2="smartd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: smartd startup succeeded" />
<MESSAGE 
	id1="000098" 
	id2="smartd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: smartd shutdown succeeded" />
<MESSAGE 
	id1="000099" 
	id2="smartd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000100" 
	id2="snmpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: snmpd startup succeeded" />
<MESSAGE 
	id1="000101" 
	id2="snmpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: snmpd shutdown succeeded" />
<MESSAGE 
	id1="000102" 
	id2="snmpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000103" 
	id2="sshd" 
	eventcategory="1401030000"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &lt;fld3&gt; more authentication { failures | failure }; logname=&lt;fld10&gt; uid=&lt;uid&gt; euid=&lt;fld2&gt; tty=&lt;fld6&gt; ruser=&lt;fld7&gt; { rhost=&lt;shost&gt; user=&lt;username&gt; | rhost=&lt;saddr&gt; }" />
<MESSAGE 
	id1="000104" 
	id2="sshd" 
	eventcategory="1401070000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:session closed&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: session closed for user &lt;username&gt;" />
<MESSAGE 
	id1="000105" 
	id2="sshd" 
	eventcategory="1401030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:check password&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: check pass; user unknown" />
<MESSAGE 
	id1="000135" 
	id2="sshd" 
	eventcategory="1401050200"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: authentication failure; logname=&lt;fld10&gt; uid=&lt;uid&gt; euid=&lt;fld3&gt; tty=&lt;fld4&gt; ruser=&lt;fld2&gt; rhost=&lt;shost&gt; user=&lt;username&gt;" />
<MESSAGE 
	id1="000106" 
	id2="sshd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000107" 
	id2="su" 
	eventcategory="1401070000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:session closed&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: session closed for user &lt;username&gt;" />
<MESSAGE 
	id1="000108" 
	id2="su" 
	eventcategory="1401050100"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:session opened&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: session opened for user &lt;username&gt; by &lt;fld2&gt;(uid=&lt;uid&gt;)" />
<MESSAGE 
	id1="000109" 
	id2="su" 
	eventcategory="1401050200"
	functions="&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@action:authentication failure&gt;"
	content="{ &lt;agent&gt;(pam_unix)[&lt;fld1&gt;] | &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: authentication failure; logname=&lt;fld10&gt; uid=&lt;uid&gt; euid=&lt;fld3&gt; tty=&lt;interface&gt; ruser=&lt;fld2&gt; rhost=&lt;shost&gt; user=&lt;username&gt;" />
<MESSAGE 
	id1="000110" 
	id2="sysctl" 
	eventcategory="1605030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000111" 
	id2="syslog" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content=" { &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: { syslogd | klogd } startup succeeded" />
<MESSAGE 
	id1="000112" 
	id2="syslog" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content=" { &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: { syslogd | klogd } shutdown succeeded" />
<MESSAGE 
	id1="000113" 
	id2="syslogd" 
	eventcategory="1605010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:restart&gt;"
	content="&lt;agent&gt; &lt;version&gt;: { restart (&lt;info&gt;) | restart }." />
<MESSAGE 
	id1="000114" 
	id2="syslogd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
	
<MESSAGE 
	id1="sendmail" 
	id2="sendmail" 
	eventcategory="1703000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="sendmail[&lt;fld1&gt;]: My unqualified host name (&lt;shost&gt;) unknown; sleeping for retry " />
	
<MESSAGE 
	id1="sendmail01" 
	id2="sendmail" 
	eventcategory="1703000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="sendmail[&lt;fld1&gt;]: unable to qualify my own domain name (&lt;shost&gt;) -- using short name " />
<MESSAGE 
	id1="000115" 
	id2="ucd-snmp" 
	eventcategory="1605020000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@action:Received SNMP packet(s)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Received SNMP packet(s) from &lt;daddr&gt;" />
<MESSAGE 
	id1="000116" 
	id2="ucd-snmp" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000117" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: vrrpd startup succeeded" />
<MESSAGE 
	id1="000118" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: vrrpd shutdown succeeded" />
<MESSAGE 
	id1="000136" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:VRRP down&gt;&lt;@info:we are now the master router&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: VRRP ID &lt;fld3&gt; on &lt;interface&gt;: &lt;fld2&gt; is down, we are now the master router." />
<MESSAGE 
	id1="000137" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:VRRP down&gt;&lt;@info:we are now the master router&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: VRRP ID &lt;fld2&gt; on &lt;interface&gt;: we are now the master router." />
<MESSAGE 
	id1="000138" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:VRRP up&gt;&lt;@info:we are now a backup router&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: VRRP ID &lt;fld3&gt; on &lt;interface&gt;: &lt;fld2&gt; is up, we are now a backup router." />
<MESSAGE 
	id1="000139" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:VRRP up&gt;&lt;@info:we are now a backup router&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: VRRP ID &lt;fld2&gt; on &lt;interface&gt;: we are now a backup router." />
<MESSAGE 
	id1="000140" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:No such device&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: &quot;ioctl SIOCSIFHWADDR &lt;interface&gt; &lt;fld2&gt;&quot; error: No such device" />
<MESSAGE 
	id1="000141" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Removing VRRP&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: Removing VRRP from &lt;interface&gt;" />
<MESSAGE 
	id1="000142" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:Reacquiring interface states&gt;&lt;@info:No buffer space available&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: rtnetlink recvmsg: No buffer space available. Reacquiring interface states." />
<MESSAGE 
	id1="000119" 
	id2="vrrpd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;event_description&gt;" />
<MESSAGE 
	id1="000120" 
	id2="xinetd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Stop&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:shutdown succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: xinetd shutdown succeeded" />
<MESSAGE 
	id1="000121" 
	id2="xinetd" 
	eventcategory="1605010000" 
	functions="&lt;@ec_subject:Process&gt;&lt;@ec_activity:Start&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@action:startup succeeded&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: xinetd startup succeeded" />
<MESSAGE 
	id1="000122" 
	id2="xinetd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="{ &lt;agent&gt;[&lt;fld1&gt;] | &lt;agent&gt; }: xinetd Version &lt;version&gt; &lt;event_description&gt;" />
	
<MESSAGE 
	id1="100015" 
	id2="appmgr" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: &lt;fld11&gt; Found bundle &lt;fld1&gt;" />
<MESSAGE 
	id1="100016" 
	id2="appmgr" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: &lt;fld11&gt; Dispatch &lt;fld12&gt; with options [&lt;fld13&gt;]" />
<MESSAGE 
	id1="100017" 
	id2="cli" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: USER: &lt;username&gt;, COMMAND: &lt;action&gt;" />
<MESSAGE 
	id1="100018" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Health item &lt;fld12&gt; slot &lt;fld22&gt; not available status=&lt;info&gt;" />
<MESSAGE 
	id1="100019" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] No SDP path to &lt;fld26&gt;" />
	
<MESSAGE 
	id1="100020" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Failed to connect to nsm: &lt;info&gt;" />
<MESSAGE 
	id1="100021" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] daemon &apos;&lt;fld29&gt;&apos; pid &apos;&lt;fld39&gt;&apos; not running (&lt;info&gt;)" />
<MESSAGE 
	id1="100022" 
	id2="cbs_np6_flowd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] COD: deactivated conn &lt;fld26&gt; to slot &lt;fld27&gt;" />
<MESSAGE 
	id1="100023" 
	id2="cbs_np6_flowd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] COD: &lt;fld30&gt; activated conn &lt;fld26&gt; to slot &lt;fld27&gt;" />
<MESSAGE 
	id1="100024" 
	id2="cbs_np6_flowd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Finished clear flow-path-active (seq=&lt;fld27&gt;)" />
<MESSAGE 
	id1="100025" 
	id2="cbs_np6_flowd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Starting clear flow-path-active (seq=&lt;fld28&gt;) using &lt;fld29&gt; tags" />
<MESSAGE 
	id1="100026" 
	id2="cbshagentd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Child Health Agent has detected that its parent process has terminated. &lt;info&gt;" />
<MESSAGE 
	id1="100027" 
	id2="cbsflowcalcd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] ignoring data from &lt;daddr&gt; (status=&lt;info&gt;) because it is not in the database" />
<MESSAGE 
	id1="100028" 
	id2="cbsoopsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] check_symfiles [&lt;fld25&gt;] Updating &quot;&lt;fld22&gt;&quot; from &quot;&lt;fld28&gt;&quot;" />
<MESSAGE 
	id1="100029" 
	id2="cbsalarmlogrd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: AlarmID &lt;fld11&gt; | &lt;fld12&gt; | &lt;fld13&gt; | &lt;fld14&gt; | &lt;fld15&gt; | &lt;fld16&gt; " />
<MESSAGE 
	id1="100030" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Connected to nsm on port &lt;fld41&gt;" />
<MESSAGE 
	id1="100031" 
	id2="appmgr" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld11&gt;] &lt;space&gt; There are no CBI bundles installed on vapgroup ips. " />
<MESSAGE 
	id1="100032" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Starting slot &lt;fld22&gt;" />
<MESSAGE 
	id1="100033" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] ignoring signal &lt;fld29&gt;" />
<MESSAGE 
	id1="100034" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Connected to ospfd on port &lt;fld29&gt;" />
<MESSAGE 
	id1="100035" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Updating arp host table." />
<MESSAGE 
	id1="100036" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] Deleted &lt;fld36&gt; cct &lt;fld35&gt;" />
	
<MESSAGE 
	id1="100037" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: [&lt;fld2&gt;] [&lt;fld25&gt;] No CircuitEntry for cct &lt;fld35&gt;." />
<MESSAGE 
	id1="100038" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]:last message repeated &lt;fld33&gt; times" />
<MESSAGE 
	id1="100039" 
	id2="cbi" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Starting appagent with command: &lt;fld33&gt;" />
<MESSAGE 
	id1="100040" 
	id2="appmgr" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] cbsappagent exited with &lt;fld33&gt; exit status" />
<MESSAGE 
	id1="100041" 
	id2="cli" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] Got Hangup exiting" />
	
<MESSAGE 
	id1="100043" 
	id2="cbi" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Using plugin: &lt;fld34&gt;" />
<MESSAGE 
	id1="100044" 
	id2="cbsvapcfgd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] Registering with oid &lt;fld35&gt; seq# &lt;fld36&gt;" />
	
<MESSAGE 
	id1="100045" 
	id2="cbscfgmgrd" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] Connection to agent &lt;fld36&gt; timed out. Removing." />
<MESSAGE 
	id1="100046" 
	id2="cbshmonitord" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] chassis fault counters: &lt;fld34&gt;" />
<MESSAGE 
	id1="100047" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] { Added | Removed } alias &lt;interface&gt; for cct &lt;fld35&gt; - &lt;fld36&gt; &lt;fld37&gt;" />
<MESSAGE 
	id1="100048" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] calling &lt;action&gt; &lt;fld37&gt;" />
	
<MESSAGE 
	id1="100049" 
	id2="appmgr" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Calling rpm manager with command: &lt;action&gt; &lt;fld3&gt; ips" />
<MESSAGE 
	id1="100050" 
	id2="cbshmonitord" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld36&gt;]: [&lt;fld32&gt;] [&lt;fld37&gt;] NPM in slot &lt;fld38&gt; is now processing minimal levels of traffic (item: &lt;fld39&gt;, value: &lt;fld40&gt;)" />
<MESSAGE 
	id1="100051" 
	id2="cbi" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] stdout: &lt;fld34&gt;" />
	
<MESSAGE 
	id1="100052" 
	id2="cbi" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Successfully set &lt;fld34&gt; to &lt;fld35&gt;." />
<MESSAGE 
	id1="100053" 
	id2="cbi" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] command: &lt;action&gt;" />
	
<MESSAGE 
	id1="100054" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Violation (s=&lt;fld35&gt;, &lt;fld36&gt;) occurred &lt;fld37&gt; times: module:&lt;fld38&gt;, item:&lt;fld39&gt; (&lt;fld40&gt;), time:&quot;&lt;fld41&gt;&quot;, value: &lt;fld42&gt;, norm:&lt;fld43&gt;, minor:&lt;fld44&gt;, major:&lt;fld45&gt;" />
	
<MESSAGE 
	id1="100055" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Threshold violation is clear: module:&lt;fld46&gt;, item: &lt;fld45&gt; (&lt;fld40&gt;), alarm, value: &lt;fld39&gt;, bitmask: &lt;fld38&gt;, minutes: &lt;fld37&gt;, time:&quot;&lt;fld41&gt;&quot;" />
	
<MESSAGE 
	id1="100056" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] NPM in slot &lt;fld35&gt; is processing traffic at normal levels (item: &lt;fld36&gt;, value: &lt;fld37&gt;)" />
	
<MESSAGE 
	id1="100057" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: CBS: Slave trying to connect to Master: &lt;saddr&gt;" />
<MESSAGE 
	id1="100058" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: CBS: Connection to master..." />
<MESSAGE 
	id1="100059" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: { CBS: accept client connection | accept client connection }" />
<MESSAGE 
	id1="100060" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: CBS: Connected on socket &lt;fld34&gt; with addr = { &lt;saddr&gt;:&lt;sport&gt; | &lt;saddr&gt; }" />
<MESSAGE 
	id1="100061" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: CBS: Created socket &lt;fld34&gt; IP address&lt;saddr&gt;" />
<MESSAGE 
	id1="100062" 
	id2="cli" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] cli &lt;fld34&gt; [&lt;fld35&gt;] (&lt;fld36&gt;) starting for user &lt;username&gt;" />
<MESSAGE 
	id1="100063" 
	id2="cli" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] &lt;info&gt;" />
	
<MESSAGE 
	id1="100064" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Health poll received from slot &lt;fld33&gt;" />
<MESSAGE 
	id1="100065" 
	id2="cbsstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Connected to CM successfully!" />
<MESSAGE 
	id1="100066" 
	id2="WEB" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] GUI &lt;fld34&gt; [&lt;fld35&gt;] (&lt;fld36&gt;) starting for user &lt;username&gt;" />
<MESSAGE 
	id1="100067" 
	id2="WEB" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] &lt;fld35&gt; Status: &lt;fld36&gt;, Error: &lt;info&gt;, Detailed: &lt;fld37&gt;" />
<MESSAGE 
	id1="100068" 
	id2="WEB" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] GUI session closed for user &lt;username&gt;" />
<MESSAGE 
	id1="100069" 
	id2="WEB" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] [&lt;fld33&gt;] &lt;info&gt;" />
<MESSAGE 
	id1="100070" 
	id2="cbsstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Pulse &lt;fld12&gt; { Stomp Protocol Connected | Connected }" />
<MESSAGE 
	id1="100071" 
	id2="admin" 
	eventcategory="1401060000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: &lt;info&gt;" />
<MESSAGE 
	id1="100072" 
	id2="appmgr" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] Using bundle &lt;fld42&gt;" />
	
<MESSAGE 
	id1="100073" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] VPN1XPlugin: set_master" />
	
<MESSAGE 
	id1="100074" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] VPN1XPlugin: set_non_master" />
	
<MESSAGE 
	id1="100075" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] Successfully set &lt;fld42&gt; as master." />
	
<MESSAGE 
	id1="100076" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] { required | current } platform is &lt;fld43&gt;" />
	
<MESSAGE 
	id1="100077" 
	id2="/crossbeam/bin/cbsstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] cbsstatsd &lt;fld3&gt; [&lt;fld4&gt;] (&lt;fld13&gt;) starting" />
<MESSAGE 
	id1="100078" 
	id2="/crossbeam/bin/cbsstatsd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] &lt;info&gt;" />
<MESSAGE 
	id1="100079" 
	id2="syslog" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: last message repeated &lt;fld12&gt; times" />
<MESSAGE 
	id1="100081" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Stopping slot &lt;fld33&gt;" />
<MESSAGE 
	id1="100083" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Poll BTYPE from &lt;space&gt; slot &lt;fld33&gt;" />
	
<MESSAGE 
	id1="100084" 
	id2="cbssysctrld" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] BOOTREQUEST from slot &lt;fld33&gt;" />
<MESSAGE 
	id1="100085" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: Operation not supported" />
	
<MESSAGE 
	id1="100086" 
	id2="NSM" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld32&gt;]: &lt;fld33&gt;: Interface flag settings (&lt;fld35&gt;) unavailable for interface &lt;interface&gt;, error: &lt;fld34&gt;, errno: &lt;info&gt;" />
<MESSAGE 
	id1="100087" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] cbsinitd &lt;fld3&gt; [&lt;fld4&gt;] (&lt;fld13&gt;) starting" />
<MESSAGE 
	id1="100088" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] cold restart" />
<MESSAGE 
	id1="100089" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] entry for daemon &apos;&lt;fld23&gt;&apos; is ready" />
<MESSAGE 
	id1="100090" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] daemon &apos;&lt;fld23&gt;&apos; (&lt;fld33&gt;) is running with &lt;fld35&gt; pid(s)" />
	
<MESSAGE 
	id1="100091" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] Polling rate is &lt;fld21&gt; second(s)" />
	
<MESSAGE 
	id1="100092" 
	id2="cbsinitd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] &lt;fld21&gt;" />
<MESSAGE 
	id1="100093" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Violation (s=&lt;fld35&gt;, &lt;fld36&gt;) { occurred &lt;fld48&gt; times | occurred | cleared }: module:&lt;fld38&gt;, item:&lt;fld39&gt; (&lt;fld40&gt;), { time:[&lt;fld43&gt;]&quot;&lt;fld41&gt;&quot; | time:&quot;&lt;fld41&gt;&quot; }" />
	
<MESSAGE 
	id1="100094" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Threshold violation is clear: module:&lt;fld46&gt;, item: &lt;fld45&gt; (&lt;fld40&gt;), alarm, value: &lt;fld39&gt;, time:&quot;&lt;fld41&gt;&quot;" />
	
<MESSAGE 
	id1="100095" 
	id2="cbsflowagentd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] cbsflowagentd &lt;fld3&gt; [&lt;fld4&gt;] (&lt;fld13&gt;) starting" />
<MESSAGE 
	id1="100096" 
	id2="cbscfgmgrd" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld42&gt;]: [&lt;fld32&gt;] [&lt;fld33&gt;] Agent &lt;fld36&gt; &lt;saddr&gt;:&lt;sport&gt; registered for keep alive: interval=&lt;fld34&gt;, timeout=&lt;fld35&gt;" />
<MESSAGE 
	id1="100097" 
	id2="cbssysctrld" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Loading VAP &lt;fld38&gt; on APM slot &lt;fld35&gt;" />
<MESSAGE 
	id1="100098" 
	id2="cbssysctrld" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] APM slot &lt;fld39&gt; { (SN:&lt;fld38&gt;) (VAP &lt;fld37&gt;) | (VAP &lt;fld37&gt;) } state change: &lt;fld35&gt; -> &lt;fld36&gt;" />
<MESSAGE 
	id1="100099" 
	id2="cbssysctrld" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] BOOTREPLY to slot &lt;fld39&gt;: &quot;&lt;fld40&gt;&quot;" />
<MESSAGE 
	id1="100100" 
	id2="cbssysctrld" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Master for VAP group  &lt;fld41&gt;  changed to  &lt;fld40&gt;" />
	
<MESSAGE 
	id1="100101" 
	id2="cbsirmd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] VRRP: Relinquish Master for failover group &lt;fld40&gt;" />
<MESSAGE 
	id1="100102" 
	id2="cbsirmd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] VRRP: Group &lt;fld42&gt; state changed &lt;fld40&gt; -> &lt;fld41&gt;" />
<MESSAGE 
	id1="100103" 
	id2="cbsirmd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] PhysIntf slot:&lt;fld41&gt; port:&lt;fld40&gt;" />
<MESSAGE 
	id1="100104" 
	id2="cbshagentd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Shared memory segment opened: &lt;bytes&gt; bytes" />
<MESSAGE 
	id1="100105" 
	id2="cbshagentd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Health Agent started" />
<MESSAGE 
	id1="100106" 
	id2="cbsvrmd" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld2&gt;] cbsvrmd &lt;fld3&gt; [&lt;fld4&gt;] (&lt;fld13&gt;) &lt;fld16&gt;" />
<MESSAGE 
	id1="100107" 
	id2="cbsirmd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] Node state change: slot &lt;fld41&gt; state &lt;fld40&gt;" />
<MESSAGE 
	id1="100108" 
	id2="cbshmonitord" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld36&gt;]: [&lt;fld32&gt;] [&lt;fld37&gt;] NPM in slot &lt;fld38&gt; has no traffic to process (item: &lt;fld39&gt;, value: &lt;fld40&gt;)" />
<MESSAGE 
	id1="100109" 
	id2="cbshmonitord" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;[&lt;fld33&gt;]: [&lt;fld32&gt;] [&lt;fld34&gt;] Threshold violation (prev s=&lt;fld52&gt;): module:&lt;fld46&gt;, item: &lt;fld45&gt; (&lt;fld40&gt;), s=&lt;fld48&gt;, no alarm, value=&lt;fld49&gt;, time:&quot;&lt;fld41&gt;&quot;" />
<MESSAGE 
	id1="100110" 
	id2="vap_group_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: Search &lt;fld11&gt; packages for &lt;fld21&gt;" />
	
<MESSAGE 
	id1="100111" 
	id2="vap_group_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: Installing: &lt;fld21&gt;" />
	
<MESSAGE 
	id1="100112" 
	id2="vap_group_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: &lt;severity&gt;: &lt;fld21&gt;: Header &lt;fld22&gt; DSA signature: &lt;fld23&gt;, key ID &lt;fld24&gt;" />
	
<MESSAGE 
	id1="100113" 
	id2="vap_group_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: &lt;fld21&gt;: &lt;fld23&gt;" />
	
<MESSAGE 
	id1="100114" 
	id2="vap_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: Creating VAP &quot;&lt;fld21&gt;&quot;" />
	
	
<MESSAGE 
	id1="100115" 
	id2="vap_group_create" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: Creating VAP group &quot;&lt;fld21&gt;&quot;" />
	
<MESSAGE 
	id1="100116" 
	id2="cbsirmd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;agent&gt;: [&lt;fld32&gt;] VRRP: Group &lt;fld42&gt; state: &lt;fld40&gt; -> &lt;fld41&gt;" />
<MESSAGE 
	id1="100120" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] command: &lt;action&gt;" />
<MESSAGE 
	id1="100119" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] stdout: &lt;fld43&gt;" />
<MESSAGE 
	id1="100121" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Starting appagent with command: &lt;action&gt;" />
	
<MESSAGE 
	id1="100122" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Removing file &lt;filename&gt;" />
<MESSAGE 
	id1="100123" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Copying &lt;fld31&gt; to &lt;fld32&gt;" />
<MESSAGE 
	id1="100124" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Using plugin: &lt;fld45&gt;" />
	
<MESSAGE 
	id1="100125" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Linking kernel &lt;fld45&gt;" />
<MESSAGE 
	id1="100126" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] appagent chrooted to: &lt;fld45&gt;" />
	
<MESSAGE 
	id1="100117" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: [&lt;fld41&gt;] &lt;fld43&gt;" />
	
<MESSAGE 
	id1="100127" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] Writing the &lt;fld45&gt; configuration file." />
<MESSAGE 
	id1="100128" 
	id2="cbi" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: (&lt;fld42&gt;) [&lt;fld41&gt;] &lt;fld45&gt; pre-staged" />
<MESSAGE 
	id1="100129" 
	id2="cbsoopsd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld37&gt;] log_params [&lt;fld38&gt;] crash dir is cur relname=&lt;fld50&gt; sleep_time=&lt;fld51&gt; max_crashes=&lt;fld48&gt; max_log_lines=&lt;fld47&gt; next_crash_index=&lt;fld42&gt;" />
<MESSAGE 
	id1="100130" 
	id2="cbsflowcalcd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] clear flow-active: &lt;fld44&gt;" />
	
<MESSAGE 
	id1="100131" 
	id2="cbsflowcalcd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Updating &lt;fld46&gt; (&lt;fld44&gt;) in database" />
	
<MESSAGE 
	id1="100132" 
	id2="cbsflowcalcd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] vfp=&lt;fld46&gt;, indexInGroup=&lt;fld47&gt;, slot=&lt;fld48&gt; is now reachable via &lt;fld49&gt;" />
	
<MESSAGE 
	id1="100133" 
	id2="cbsflowcalcd" 
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] vfp=&lt;fld46&gt;, indexInGroup=&lt;fld47&gt;, slot=&lt;fld48&gt; is NOT reachable via &lt;fld49&gt;" />
	
<MESSAGE 
	id1="100134" 
	id2="guest" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;] SELECT: &lt;fld42&gt;" />
<MESSAGE 
	id1="100135" 
	id2="cbshagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Child (acquire) HA process - pid: &lt;fld44&gt;" />
	
<MESSAGE 
	id1="100136" 
	id2="cbshagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Receive &lt;fld44&gt; signal, turn on operational (active/standby) &lt;fld45&gt;" />
<MESSAGE 
	id1="100137" 
	id2="cbshagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] slotmask=&lt;fld44&gt; setting 1G ports" />
	
<MESSAGE 
	id1="100138" 
	id2="check_mgmt_intf" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: &lt;severity&gt; Verifying all management VNDs are UP" />
	
<MESSAGE 
	id1="100139" 
	id2="check_mgmt_intf" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: &lt;severity&gt; Found management VND(s): &lt;fld31&gt;" />
<MESSAGE 
	id1="100140" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] { old | new } CP: &lt;saddr&gt;:&lt;sport&gt; (ip:port)" />
	
<MESSAGE 
	id1="100141" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] outgoing messages will go to CP at &lt;saddr&gt;:&lt;sport&gt;" />
	
	
<MESSAGE 
	id1="100142" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Address and/or port of CP has changed" />
<MESSAGE 
	id1="100143" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] working dir set to &apos;&lt;fld44&gt;&apos;" />
	
<MESSAGE 
	id1="100144" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] using network device &apos;&lt;fld44&gt;&apos; for network statistics" />
<MESSAGE 
	id1="100145" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] data collection is &apos;&lt;fld44&gt;&apos;: &lt;info&gt;" />
	
<MESSAGE 
	id1="100146" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] listening on &lt;saddr&gt;:&lt;sport&gt; for messages from the flow calculator" />
<MESSAGE 
	id1="100147" 
	id2="cbsflowagentd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] &lt;info&gt;" />
<MESSAGE 
	id1="100148" 
	id2="check_mgmt_intf" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;: &lt;severity&gt;  Management VND(s): mgmt are UP" />
<MESSAGE 
	id1="sendmail02" 
	id2="sendmail" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: &lt;fld42&gt;: from=&lt;fld43&gt;, size=&lt;fld44&gt;, class=&lt;fld45&gt;, nrcpts=&lt;fld46&gt;, msgid=&lt;fld47&gt;, relay=&lt;fld48&gt;" />
<MESSAGE 
	id1="sendmail03" 
	id2="sendmail" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: &lt;fld42&gt;: to=&lt;fld38&gt;, ctladdr=&lt;fld37&gt;, delay=&lt;fld36&gt;, xdelay=&lt;fld35&gt;, mailer=&lt;fld34&gt;, pri=&lt;fld33&gt;, relay=[&lt;fld44&gt;] [&lt;fld43&gt;], dsn=&lt;fld45&gt;, stat=&lt;info&gt;" />
<MESSAGE 
	id1="100149" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Connection to CfgMgr &lt;saddr&gt;:&lt;sport&gt; timed out. Reconnecting. &lt;fld33&gt; err=&lt;info&gt;" />
<MESSAGE 
	id1="100150" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Connected to CfgMgr." />
<MESSAGE 
	id1="100151" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Setting &lt;fld38&gt; to &lt;fld39&gt;" />
	
<MESSAGE 
	id1="100152" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Written &lt;fld38&gt; after &lt;fld39&gt; attempt(s)" />
	
<MESSAGE 
	id1="100153" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Added device &lt;fld39&gt;" />
	
<MESSAGE 
	id1="100154" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] Brought up &lt;fld39&gt; after reconnect to CPM" />
	
<MESSAGE 
	id1="100155" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] HB free memory checking threshold is set to &lt;fld39&gt;" />
	
<MESSAGE 
	id1="100156" 
	id2="cbsvapcfgd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: [&lt;fld42&gt;] [&lt;fld43&gt;] &lt;info&gt;" />
	
<MESSAGE 
	id1="100157" 
	id2="mountd" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;]: authenticated mount request from &lt;shost&gt;:&lt;sport&gt; for &lt;fld33&gt; (&lt;fld34&gt;)" />
<MESSAGE 
	id1="100158" 
	id2="postgres" 
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@shost:*HDR(hhost)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;agent&gt;[&lt;fld41&gt;] COPY: &lt;info&gt;" />
</DEVICEMESSAGES>