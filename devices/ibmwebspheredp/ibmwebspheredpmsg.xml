<?xml version="1.0" encoding="ISO-8859-1" ?>
<DEVICEMESSAGES
	name="ibmwebspheredp"
	displayname="IBM WebSphere DataPower"
	group="System">
<VERSION
	xml="18"
	checksum="241e911bc7cadcc04765edad6ac87ca2"
	revision="112"
	device="2.0"/>


<HEADER
	id1="0001"
	id2="0001"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;] &lt;messageid&gt;(&lt;hfld5&gt;): trans(&lt;hfld6&gt;)[&lt;hfld7&gt;]: &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0002"
	id2="0002"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] &lt;messageid&gt;(&lt;hfld4&gt;): trans(&lt;hfld5&gt;)[&lt;hfld6&gt;]: &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0004"
	id2="0004"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] &lt;messageid&gt;(&lt;hfld4&gt;)[&lt;hfld5&gt;]: &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0005"
	id2="0005"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;] &lt;messageid&gt; &lt;hfld5&gt;(&lt;hfld6&gt;): trans(&lt;hfld7&gt;): &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0006"
	id2="0006"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;] &lt;messageid&gt;(&lt;hfld5&gt;): &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0007"
	id2="0007"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] &lt;messageid&gt; &lt;hfld4&gt;(&lt;hfld5&gt;): trans(&lt;hfld6&gt;): &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0008"
	id2="0008"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] &lt;messageid&gt;(&lt;hfld4&gt;): &lt;!payload:hfld1&gt;"/>

<HEADER
	id1="0009"
	id2="0009"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;] [&lt;hfld5&gt;]: &lt;messageid&gt; &lt;!payload:hfld1&gt;"/>

<HEADER
	id1="0010"
	id2="0010"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] [&lt;hfld4&gt;]: &lt;messageid&gt; &lt;!payload:hfld1&gt;"/>

<HEADER
	id1="0011"
	id2="0011"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;] &lt;messageid&gt; &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0012"
	id2="0012"
	messageid="STRCAT(msgIdPart1, &apos;-&apos;, msgIdPart2)" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;msgIdPart1&gt;][&lt;msgIdPart2&gt;] &lt;hfld41&gt; &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="00013"
	id2="00013"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;][&lt;hfld8&gt;] &lt;messageid&gt;(&lt;hfld5&gt;): trans(&lt;hfld6&gt;)[&lt;hfld7&gt;]: &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0014"
	id2="0014"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;][&lt;hfld5&gt;] &lt;messageid&gt;(&lt;hfld6&gt;): trans(&lt;hfld7&gt;): &lt;!payload:hfld1&gt;"/>
<HEADER
	id1="0015"
	id2="0015"
	messageid="STRCAT(msgIdPart1, &apos;_&apos;, msgIdPart2)" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; [&lt;hfld2&gt;][&lt;hfld3&gt;][&lt;hfld4&gt;][&lt;hfld5&gt;] &lt;msgIdPart1&gt; &lt;msgIdPart2&gt;(&lt;hfld6&gt;): &lt;!payload:hfld1&gt;"/>
	
	
	
<MESSAGE
	id1="aaapolicy"
	id2="aaapolicy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="action"
	id2="action"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Configured&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Configured." />
<MESSAGE
	id1="action:01"
	id2="action"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Deleted&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): action &lt;fld1&gt; - Configuration deleted." />
<MESSAGE
	id1="b2bgw"
	id2="b2bgw"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Connection timed out&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){[error]: | : | [&lt;hostip&gt;]: } Connect to URL '&lt;url&gt;' timed out" />
<MESSAGE
	id1="b2bgw:01"
	id2="b2bgw"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Backside header failed to parse&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){[error]: | : | [&lt;hostip&gt;]: } Backside header ('&lt;fld1&gt;') failed to parse due to: &lt;result&gt; URL: &lt;url&gt;" />
<MESSAGE
	id1="b2bgw:02"
	id2="b2bgw"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){[error]: | : | [&lt;hostip&gt;]: } &lt;event_description&gt;" />
<MESSAGE
	id1="certificate"
	id2="certificate"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Certificate configured&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Configured." />
<MESSAGE
	id1="certificate:01"
	id2="certificate"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Configuration deleted&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): certificate &lt;cert_subject&gt; - Configuration deleted." />
<MESSAGE
	id1="certificate:02"
	id2="certificate"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Certificate deleted&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &apos;&lt;cert_subject&gt;&apos; deleted, may be due to modification/update" />
	
<MESSAGE
	id1="certificate:03"
	id2="certificate"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Cannot be deleted. In use by:  &lt;fld1&gt;" />
<MESSAGE
	id1="CLI"
	id2="CLI"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt; &lt;event_description&gt;." />
<MESSAGE
	id1="domain"
	id2="domain"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Domain configuration changed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): Executing configuration for &apos;&lt;fld1&gt;&apos; " />
<MESSAGE
	id1="domain:01"
	id2="domain"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Domain configuration changed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): Domain configuration has been { saved | modified } " />
	
<MESSAGE
	id1="domain:02"
	id2="domain"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): Domain &apos;&lt;fld1&gt;&apos; is not visible - functionality may be restricted. " />
<MESSAGE
	id1="logging"
	id2="logging"
	eventcategory="1801030000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Logging target connection error&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] logging target(&lt;info&gt;): trans(&lt;operation_id&gt;): { Connection error(&lt;resultcode&gt;) at | Connect to URL | Error occurred (&lt;fld1&gt; when connecting to URL } &apos; { http | dpsmtp } ://&lt;daddr&gt;:&lt;dport&gt;/&lt;fld2&gt;&apos;" />
<MESSAGE
	id1="logging:01"
	id2="logging"
	eventcategory="1801030000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Logging target connection error&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] logging target(&lt;info&gt;): trans(&lt;operation_id&gt;): { Connection error(&lt;resultcode&gt;) at | Connect to URL | Error occurred (&lt;fld1&gt;) when connecting to URL } &apos; { http | dpsmtp } ://&lt;daddr&gt;:&lt;dport&gt;/&lt;fld2&gt;&apos;" />
<MESSAGE
	id1="logging:02"
	id2="logging"
	eventcategory="1801030000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } logging target(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="logging:03"
	id2="logging"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } logging category(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="matching"
	id2="matching"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="metadata"
	id2="metadata"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="mpgw"
	id2="mpgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){ [error]: | : } &lt;event_description&gt;" />
		
<MESSAGE
	id1="mpgw:01"
	id2="mpgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description: Multistep Probe enabled&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): Multistep Probe enabled" />
<MESSAGE
	id1="mpgw:04"
	id2="mpgw"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_subject:User&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: ldap authentication succeeded with (&lt;authmethod&gt;, username='&lt;fld3&gt;' password='&lt;fld4&gt;'policy-name=&apos;&lt;policyname&gt;&apos; mAdminState=&apos;&lt;fld5&gt;&apos; LoginForm=&apos;&lt;fld6&gt;&apos; UseSSLForLogin='&lt;fld8&gt;' EnableMigration='&lt;fld9&gt;' SSLPort='&lt;sport&gt;' ErrorPage='&lt;fld10&gt;' LogoutPage='&lt;fld11&gt;' DefaultURL='&lt;fld12&gt;' FormsLocation='&lt;fld13&gt;' LocalLoginForm='store:///LoginPage.htm' LocalErrorPage='&lt;fld14&gt;' LocalLogoutPage='&lt;fld15&gt;' UsernameField='&lt;username&gt;' PasswordField='&lt;fld16&gt;' RedirectField='&lt;fld17&gt;' FormProcessingURL='&lt;fld18&gt;' InactivityTimeout='&lt;fld19&gt;' SessionLifetime='&lt;fld20&gt;' RedirectURLType='&lt;fld21&gt;' CustomURL='&lt;fld22&gt;' FormSupportType='&lt;fld23&gt;' FormSupportScript='&lt;fld24&gt;' target='&lt;url&gt;' )" />
<MESSAGE
	id1="mpgw:05"
	id2="mpgw"
	eventcategory="1301000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication failed&gt;&lt;@ec_subject:User&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: ldap authentication failed with (&lt;authmethod&gt;, policy-name=&apos;&lt;policyname&gt;&apos; mAdminState=&apos;&lt;fld5&gt;&apos; LoginForm=&apos;&lt;fld6&gt;&apos; UseSSLForLogin='&lt;fld8&gt;' EnableMigration='&lt;fld9&gt;' SSLPort='&lt;sport&gt;' ErrorPage='&lt;fld10&gt;' LogoutPage='&lt;fld11&gt;' DefaultURL='&lt;fld12&gt;' FormsLocation='&lt;fld13&gt;' LocalLoginForm='store:///LoginPage.htm' LocalErrorPage='&lt;fld14&gt;' LocalLogoutPage='&lt;fld15&gt;' UsernameField='&lt;username&gt;' PasswordField='&lt;fld16&gt;' RedirectField='&lt;fld17&gt;' FormProcessingURL='&lt;fld18&gt;' InactivityTimeout='&lt;fld19&gt;' SessionLifetime='&lt;fld20&gt;' RedirectURLType='&lt;fld21&gt;' CustomURL='&lt;fld22&gt;' FormSupportType='&lt;fld23&gt;' FormSupportScript='&lt;fld24&gt;' )" />
<MESSAGE
	id1="mpgw:06"
	id2="mpgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:Latency statistics&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Latency: &lt;fld1&gt; [&lt;url&gt;]" />
<MESSAGE
	id1="mpgw:07"
	id2="mpgw"
	eventcategory="1603040000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: &lt;event_description&gt;" />
<MESSAGE
	id1="mpgw:02"
	id2="mpgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: &lt;event_description&gt;" />
	
<MESSAGE
	id1="mpgw:03"
	id2="mpgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;daddr&gt;] gtid(&lt;fld1&gt;): &lt;event_description&gt;" />
		
	
	
<MESSAGE
	id1="mq-qm"
	id2="mq-qm"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="nfs-dynamic-mounts"
	id2="nfs-dynamic-mounts"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="ntp-service"
	id2="ntp-service"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="profile"
	id2="profile"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="rbm"
	id2="rbm"
	eventcategory="1401030000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[request]: RBM: { &lt;event_description&gt; - &lt;result&gt; | &lt;result&gt; }" />
<MESSAGE
	id1="rule"
	id2="rule"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="slm-action"
	id2="slm-action"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="slm-policy"
	id2="slm-policy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="smtp-server-connection"
	id2="smtp-server-connection"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-as2"
	id2="source-as2"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){[error]: | : | [&lt;hostip&gt;]: } &lt;event_description&gt;" />
<MESSAGE
	id1="source-ftp-poller"
	id2="source-ftp-poller"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-http"
	id2="source-http"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:No WS-Proxy service endpoints match request&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: No WS-Proxy service endpoints { matched | match } request { , &lt;result&gt;. | . }" />
<MESSAGE
	id1="source-http:01"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:WS-Proxy selected&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: WS-Proxy selected: &apos;&lt;fld1&gt;&apos;. Operation &apos;&lt;action&gt;&apos; matches all criteria." />
<MESSAGE
	id1="source-http:02"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Received HTTP GET&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Received &lt;protocol&gt;/&lt;version&gt; GET for &lt;fld1&gt; from &lt;saddr&gt;" />
<MESSAGE
	id1="source-http:03"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Received HTTP POST&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Received &lt;protocol&gt;/&lt;version&gt; { POST for | postfor } &lt;web_root&gt; from &lt;saddr&gt;" />
<MESSAGE
	id1="source-http:04"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-https:02"
	id2="source-https"
	eventcategory="1204000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:Received HTTP&gt;&lt;@ec_activity:Receive&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Received &lt;protocol&gt;/&lt;version&gt; &lt;web_method&gt; for &lt;web_root&gt; from &lt;saddr&gt;" />
<MESSAGE
	id1="source-https"
	id2="source-https"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: &lt;event_description&gt;" />
<MESSAGE
	id1="source-https:01"
	id2="source-https"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-mq"
	id2="source-mq"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Request processing failed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Request processing failed: &lt;result&gt;, from URL: &lt;saddr&gt;:&lt;sport&gt;." />
<MESSAGE
	id1="source-mq:01"
	id2="source-mq"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-sftp-poller"
	id2="source-sftp-poller"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Could not allocate polling event&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Could not allocate polling event for URL '&lt;url&gt;'" />
<MESSAGE
	id1="source-sftp-poller:01"
	id2="source-sftp-poller"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Open failed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Open failed for URL '&lt;url&gt;' file '&lt;filename&gt;'" />
<MESSAGE
	id1="source-sftp-poller:02"
	id2="source-sftp-poller"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="source-ssh-server"
	id2="source-ssh-server"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="sslproxy"
	id2="sslproxy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="statistics"
	id2="statistics"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="stylepolicy"
	id2="stylepolicy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="trans"
	id2="trans"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Cannot establish connection to host&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): Host connection { failed to establish: &lt;daddr&gt;: tcp port &lt;dport&gt; | could not be established }" />
<MESSAGE
	id1="trans:01"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Created directory&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): Created directory '&lt;directory&gt;'" />
<MESSAGE
	id1="trans:02"
	id2="trans"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Installed battery nearing end of life&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): Installed battery is nearing end of life." />
<MESSAGE
	id1="trans:03"
	id2="trans"
	eventcategory="1801030000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Request processing failed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Request processing failed: &lt;result&gt;" />
<MESSAGE
	id1="trans:04"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Response code to HTTP request&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: HTTP response code &lt;resultcode&gt; for &apos;&lt;url&gt;&apos;" />
<MESSAGE
	id1="trans:05"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): certificate &lt;cert_subject&gt; - &lt;event_description&gt;" />
<MESSAGE
	id1="trans:06"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Statistics disabled&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): Statistics disabled" />
<MESSAGE
	id1="trans:07"
	id2="trans"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:TCP connection refused&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): TCP connection attempt refused from &lt;saddr&gt; to &lt;daddr&gt; port &lt;dport&gt;" />
<MESSAGE
	id1="trans:08"
	id2="trans"
	eventcategory="1801010000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:SFTP Client request failed&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): SFTP Client request failed for URL '&lt;url&gt;'. Reason: &lt;result&gt;" />
<MESSAGE
	id1="trans:12"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): (&lt;username&gt;:&lt;fld1&gt;): (&lt;action&gt;)# &lt;event_description&gt;" />
<MESSAGE
	id1="trans:13"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): (&lt;username&gt;:&lt;fld1&gt;): &lt;event_description&gt;" />
	
<MESSAGE
	id1="trans:09"
	id2="trans"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
	
<MESSAGE
	id1="trans:10"
	id2="trans"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:error writing to connection&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: error writing to connection: system error (&lt;resultcode&gt;)" />
<MESSAGE
	id1="trans:11"
	id2="trans"
	eventcategory="1801030000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Error occured while writing to next processing stage.&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Error occured while writing to next processing stage." />
<MESSAGE
	id1="urlrewrite"
	id2="urlrewrite"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Url match&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: &apos;&lt;url&gt;&apos; did match &apos;&lt;fld1&gt;&apos;" />
<MESSAGE
	id1="User_Logout"
	id2="User"
	eventcategory="1401070000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logoff&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:User Logout&gt;"
	content=" { &lt;hostname&gt; [&lt;shost&gt;][&lt;event_type&gt;][&lt;severity&gt;] [&lt;daddr&gt;]: | &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] [&lt;daddr&gt;]: } User &apos;&lt;username&gt;&apos; logged out from &apos;&lt;dhost&gt;&apos; " />
	
<MESSAGE
	id1="User_Login"
	id2="User"
	eventcategory="1401030000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:User Logout&gt;"
	content="&lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] User &apos;&lt;username&gt;&apos; failed to log in. " />
<MESSAGE
	id1="user"
	id2="user"
	eventcategory="1401060000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:User login&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;username&gt;): [&lt;daddr&gt;]: User logged into &apos;&lt;dhost&gt;&apos;" />
<MESSAGE
	id1="user:01"
	id2="user"
	eventcategory="1401070000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logoff&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:User log out&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;username&gt;): [&lt;daddr&gt;]: User logged out from &apos;&lt;dhost&gt;&apos;" />
<MESSAGE
	id1="user:02"
	id2="user"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;username&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="user:03"
	id2="user"
	eventcategory="1401030000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;username&gt;): trans(&lt;operation_id&gt;)[&lt;daddr&gt;]: &lt;event_description&gt;" />

	
<MESSAGE
	id1="valcred:04"
	id2="valcred"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;fld3&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: certificate validation succeeded for &apos;&lt;fld1&gt;&apos; against &apos;&lt;fld2&gt;&apos;" />
<MESSAGE
	id1="valcred:03"
	id2="valcred"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: error writing to connection: system error (&lt;resultcode&gt;)" />
<MESSAGE
	id1="valcred:02"
	id2="valcred"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: certificate validation failed for &apos;&lt;fld1&gt;&apos;: &lt;result&gt;" />
<MESSAGE
	id1="valcred:01"
	id2="valcred"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@ec_subject:Certificate&gt;&lt;@ec_activity:Send&gt;&lt;@ec_outcome:Error&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: { SSLProxyProfile | SSL Proxy Profile } &apos;&lt;fld1&gt;&apos;: connection error: &lt;result&gt;" />
<MESSAGE
	id1="xmlfirewall:01"
	id2="xmlfirewall"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Service removed from port" />
<MESSAGE
	id1="xmlfirewall:03"
	id2="xmlfirewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[request]: Rejected by filter &lt;fld1&gt; of rule &lt;fld2&gt;." />
<MESSAGE
	id1="xmlfirewall:02"
	id2="xmlfirewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[request]: Data encryption succeeded" />
<MESSAGE
	id1="xmlfirewall"
	id2="xmlfirewall"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld1&gt;][&lt;hostip&gt;]: Missing or incomplete user credentials." />
<MESSAGE
	id1="xmlfirewall:04"
	id2="xmlfirewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_subject:Certificate&gt;&lt;@ec_activity:Permit&gt;&lt;@ec_outcome:Success&gt;&lt;@event_description:certificate validation succeeded&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: certificate validation succeeded for &apos;&lt;username&gt;&apos; against &apos;&lt;fld3&gt;&apos;" />
<MESSAGE
	id1="xmlfirewall:05"
	id2="xmlfirewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:Latency statistics&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Latency: &lt;fld1&gt; [&lt;url&gt;]" />
<MESSAGE
	id1="xmlfirewall:06"
	id2="xmlfirewall"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: saml-signature authentication succeeded with (&lt;authmethod&gt;, username=&apos;&lt;fld3&gt;&apos; { saml2 | saml }:Issuer='&lt;cert_issuer&gt;' ds:DigestValue=&apos;&lt;fld4&gt;&apos; ds:SignatureValue=&apos;&lt;fld5&gt;&apos; { ds:X509IssuerName=&apos;&lt;username&gt;&apos; ds:X509Certificate=&apos;&lt;fld6&gt; | ds:X509Certificate=&apos;&lt;fld6&gt; }" />
<MESSAGE
	id1="xmlfirewall:07"
	id2="xmlfirewall"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: saml-signature authentication succeeded with (&lt;authmethod&gt;, username=&apos;&lt;fld3&gt;&apos; { saml2 | saml }:Issuer='&lt;cert_issuer&gt;' DigestValue=&apos;&lt;fld4&gt;&apos; SignatureValue=&apos;&lt;fld5&gt;&apos; { X509IssuerName=&apos;&lt;username&gt;&apos; X509Certificate=&apos;&lt;fld6&gt; | X509Certificate=&apos;&lt;fld6&gt; }" />
<MESSAGE
	id1="xmlfirewall:08"
	id2="xmlfirewall"
	eventcategory="1603040000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){ [&lt;fld7&gt;][&lt;hostip&gt;] | [&lt;hostip&gt;] }: &lt;event_description&gt;" />
<MESSAGE
	id1="valcred"
	id2="valcred"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
	
<MESSAGE
	id1="cert-monitor"
	id2="cert-monitor"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): { trans(&lt;operation_id&gt;)[&lt;hostip&gt;] | trans(&lt;operation_id&gt;) }: Certificate { &apos;&lt;cert_subject&gt;&apos; | &lt;cert_subject&gt; } { is about to expire | is expired }" />
<MESSAGE
	id1="web-application-firewall"
	id2="web-application-firewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Response code to HTTP request&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: HTTP response code &lt;resultcode&gt; for &apos;&lt;url&gt;&apos;" />
<MESSAGE
	id1="web-application-firewall:01"
	id2="web-application-firewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:The one way exchange pattern will bypass the execution of the selected request rule&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: The one way exchange pattern will bypass the execution of the selected request rule" />
<MESSAGE
	id1="web-application-firewall:02"
	id2="web-application-firewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Latency statistics&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Latency: &lt;fld1&gt; [&lt;url&gt;]" />
<MESSAGE
	id1="web-application-firewall:03"
	id2="web-application-firewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Using Backside Server&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Using Backside Server: &lt;url&gt;" />
<MESSAGE
	id1="web-application-firewall:04"
	id2="web-application-firewall"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Application Firewall Processing Request&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Application Firewall Processing Request/Response Profile &lt;fld1&gt;" />
<MESSAGE
	id1="web-application-firewall:05"
	id2="web-application-firewall"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Policy Mismatch&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[error][&lt;hostip&gt;]: No match from processing policy &apos;&lt;policyname&gt;&apos; for code &apos;&lt;resultcode&gt;&apos;" />
<MESSAGE
	id1="web-application-firewall:06"
	id2="web-application-firewall"
	eventcategory="1303000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:AAA Authorization failure&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){ [error][&lt;hostip&gt;]: | [&lt;hostip&gt;]: } { Request validation failed: &lt;event_description&gt; | &lt;event_description&gt; }" />
<MESSAGE
	id1="wsgw"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:HTTP response code&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: HTTP response code &lt;resultcode&gt; for &apos;&lt;url&gt;&apos;" />
<MESSAGE
	id1="wsgw:01"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Rule Selected via match&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){ [request] | [response] } [&lt;hostip&gt;]: rule (&lt;rulename&gt;): selected via match &apos;&lt;fld1&gt;&apos; from processing policy &apos;&lt;policyname&gt;&apos;" />
<MESSAGE
	id1="wsgw:02"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Rule Results completed ok&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;){ [request] | [response] }[&lt;hostip&gt;]: rule (&lt;rulename&gt;): #&lt;listnum&gt; { results: | validate: | xform: | header-rewrite: } &lt;result&gt;" />
<MESSAGE
	id1="wsgw:03"
	id2="wsgw"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:No match from processing policy&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[error][&lt;hostip&gt;]: No match from processing policy &apos;&lt;policyname&gt;&apos; for code &apos;&lt;resultcode&gt;&apos;" />
<MESSAGE
	id1="wsgw:04"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Latency statistics&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Latency: &lt;fld1&gt; [&lt;url&gt;]" />
<MESSAGE
	id1="wsgw:05"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Using Backside Server&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Using Backside Server: &lt;url&gt;" />
<MESSAGE
	id1="wsgw:06"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Adding new wsdl&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Adding new wsdl &apos;&lt;filename&gt;&apos;" />
	
<MESSAGE
	id1="wsgw:08"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Multistep Probe enabled&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): Multistep Probe enabled" />
<MESSAGE
	id1="wsgw:09"
	id2="wsgw"
	eventcategory="1401060000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;&lt;@event_description:authentication succeeded&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): {trans(&lt;operation_id&gt;): | trans(&lt;operation_id&gt;)[&lt;fld3&gt;][&lt;hostip&gt;]: | trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: } &lt;fld9&gt; authentication succeeded with (&lt;authmethod&gt;, username='&lt;username&gt;' password='&lt;fld4&gt;'{ configured-realm='&lt;action&gt;' | nonce='&lt;fld10&gt;' } )" />
<MESSAGE
	id1="wsgw:10"
	id2="wsgw"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: saml-signature authentication succeeded with (&lt;authmethod&gt;, username=&apos;&lt;fld3&gt;&apos; { saml2 | saml }:Issuer='&lt;cert_issuer&gt;' { ds:DigestValue | DigestValue }=&apos;&lt;fld4&gt;&apos; { ds:SignatureValue | SignatureValue }=&apos;&lt;fld5&gt;&apos; { ds:X509Certificate | X509Certificate }=&apos;&lt;fld6&gt;" />
<MESSAGE
	id1="wsgw:11"
	id2="wsgw"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_subject:Certificate&gt;&lt;@ec_activity:Permit&gt;&lt;@ec_outcome:Success&gt;&lt;@event_description:certificate validation succeeded&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld1&gt;][&lt;hostip&gt;]: certificate validation succeeded for &apos;&lt;username&gt;&apos; against &apos;&lt;fld3&gt;&apos;" />
<MESSAGE
	id1="wsgw:12"
	id2="wsgw"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: saml-signature authentication succeeded with (&lt;authmethod&gt;, username=&apos;&lt;fld3&gt;&apos; { saml2 | saml }:Issuer='&lt;cert_issuer&gt;' ds:XPath='&lt;fld8&gt;' { ds:DigestValue | DigestValue }=&apos;&lt;fld4&gt;&apos; { ds:SignatureValue | SignatureValue }=&apos;&lt;fld5&gt;&apos; { ds:X509Certificate | X509Certificate }=&apos;&lt;fld6&gt;" />
<MESSAGE
	id1="wsgw:13"
	id2="wsgw"
	eventcategory="1301000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@event_description:authentication failed&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): {trans(&lt;operation_id&gt;): | trans(&lt;operation_id&gt;)[&lt;fld3&gt;][&lt;hostip&gt;]: | trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: } custom authentication failed with (&lt;authmethod&gt;, serial='&lt;cert_error&gt;' )" />
<MESSAGE
	id1="wsgw:14"
	id2="wsgw"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: client-ssl authentication succeeded with (&lt;authmethod&gt;, dn='&lt;fld3&gt;' issuer='&lt;cert_issuer&gt;'" />
<MESSAGE
	id1="wsgw:15"
	id2="wsgw"
	eventcategory="1302000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@event_description:authentication succeeded&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;"
	content="&lt;hostname&gt; [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld7&gt;][&lt;hostip&gt;]: validate-signer authentication succeeded with (&lt;authmethod&gt;, dn='&lt;fld3&gt;' )" />
<MESSAGE
	id1="wsgw:16"
	id2="wsgw"
	eventcategory="1401060000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;&lt;@event_description:authentication succeeded&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): {trans(&lt;operation_id&gt;): | trans(&lt;operation_id&gt;)[&lt;fld3&gt;][&lt;hostip&gt;]: | trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: } custom authentication succeeded with (&lt;authmethod&gt;, dn='&lt;cert_hostname&gt;' issuer='&lt;cert_issuer&gt;' serial='&lt;fld8&gt; )" />
<MESSAGE
	id1="wsgw:17"
	id2="wsgw"
	eventcategory="1301000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@event_description:authentication failed&gt;"
	content="&lt;hostname&gt; { [&lt;domain&gt;][&lt;fld2&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): {trans(&lt;operation_id&gt;): | trans(&lt;operation_id&gt;)[&lt;fld3&gt;][&lt;hostip&gt;]: | trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: } custom authentication failed with (&lt;authmethod&gt;, username=&apos;&lt;username&gt;&apos; password=&apos;&lt;fld8&gt;&apos;configured-realm=&apos;&lt;action&gt;&apos; )" />
<MESSAGE
	id1="wsgw:07"
	id2="wsgw"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): {trans(&lt;operation_id&gt;): | trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: } &lt;event_description&gt;" />
<MESSAGE
	id1="wsm-agent"
	id2="wsm-agent"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="wsm-endpointrewrite"
	id2="wsm-endpointrewrite"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="wsm-rule"
	id2="wsm-rule"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="wsm-stylepolicy"
	id2="wsm-stylepolicy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Rule Selected via match&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;) {[request] | [response] } [&lt;hostip&gt;]: rule (&lt;rulename&gt;): selected via match &apos;&lt;fld1&gt;&apos; from processing policy &apos;&lt;policyname&gt;&apos;" />
<MESSAGE
	id1="wsm-stylepolicy:01"
	id2="wsm-stylepolicy"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="xml-mgmt"
	id2="xml-mgmt"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="xmlmgr"
	id2="xmlmgr"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Compilation Request&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): { trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: | trans(&lt;operation_id&gt;): } &lt;fld1&gt; Compilation Request: &lt;result&gt;" />
<MESSAGE
	id1="xmlmgr:02"
	id2="xmlmgr"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;hostname&gt; [&lt;fld12&gt;][&lt;resultcode&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): { &lt;event_description&gt;: &lt;daddr&gt; : tcp port &lt;dport&gt; | &lt;event_description&gt; }" />
<MESSAGE
	id1="xmlmgr:01"
	id2="xmlmgr"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
<MESSAGE
	id1="xmlmgr:03"
	id2="xmlmgr"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;hostname&gt; [&lt;fld12&gt;][&lt;resultcode&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;result&gt;]: illegal character &lt;fld13&gt; at offset &lt;fld14&gt; of &lt;url&gt;" />
	
<MESSAGE
	id1="xmlmgr:04"
	id2="xmlmgr"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;hostname&gt; [&lt;fld12&gt;][&lt;resultcode&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;result&gt;]: &lt;action&gt;: Error parsing response from &lt;url&gt;" />
	
	
<MESSAGE
	id1="cli-debug"
	id2="cli-debug"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } (&lt;service&gt;:&lt;hostip&gt;): &lt;action&gt;" />
	
<MESSAGE
	id1="cli-error"
	id2="cli-error"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_description:Encountered an unexpected exit directive while processing the startup configuration script.&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } Encountered an unexpected exit directive while processing the startup configuration script." />
<MESSAGE
	id1="loadbalancer-group"
	id2="loadbalancer-group"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;result&gt;" />
<MESSAGE
	id1="loadbalancer-group:01"
	id2="loadbalancer-group"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;fld1&gt;]: External URL: &apos;&lt;url&gt;&apos; unreachable." />
<MESSAGE
	id1="http-error"
	id2="http-error"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Ajax is not supported" />
	
<MESSAGE
	id1="policy-attachments"
	id2="policy-attachments"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): Configured." />
<MESSAGE
	id1="PartnerGW_TST-network"
	id2="PartnerGW_TST-network"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: HTTP invalid response returned &lt;resultcode&gt; Internal Server Error, from URL &apos;&lt;url&gt;&apos; (Method: &lt;web_method&gt; , URI: &lt;fld2&gt;)" />
<MESSAGE
	id1="PartnerGW_TST-network:01"
	id2="PartnerGW_TST-network"
	eventcategory="1603000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Error occurred when connecting to URL &apos;&lt;url&gt;&apos;" />
<MESSAGE
	id1="source-http:06"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Request processing failed: &lt;result&gt;, from URL: &lt;saddr&gt;:&lt;sport&gt;." />
<MESSAGE
	id1="source-http:05"
	id2="source-http"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;)[&lt;hostip&gt;]: Request processing failed: &lt;result&gt;, from URL: &lt;saddr&gt;:&lt;sport&gt;" />
<MESSAGE
	id1="dns"
	id2="dns"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; { [&lt;domain&gt;][&lt;event_type&gt;][&lt;severity&gt;] | [&lt;event_type&gt;][&lt;severity&gt;] } &lt;service&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
		
	
<MESSAGE
	id1="logging_target"
	id2="logging_target"
	eventcategory="1605000000"
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;"
	content=" &lt;hostname&gt; [&lt;domain&gt;][&lt;fld1&gt;][&lt;event_type&gt;][&lt;severity&gt;] &lt;action&gt;(&lt;info&gt;): trans(&lt;operation_id&gt;): &lt;event_description&gt;" />
		
	
</DEVICEMESSAGES>
  
