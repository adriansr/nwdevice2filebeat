<?xml version="1.0" encoding="ISO-8859-1"?>
<DEVICEMESSAGES
	name="junosrouter"
	displayname="Juniper JUNOS"
	group="Router">
<VERSION
	xml="60"
	checksum="2d84a536fbf8bf21f6184c859d876a81"
	revision="134"
    device="2.0" />


<HEADER 
	id1="0001" 
	id2="0001" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;messageid&gt;: restart &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0002" 
	id2="0002" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;messageid&gt; message repeated &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0003" 
	id2="0003" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; ssb &lt;messageid&gt;(&lt;hfld1&gt;): &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0004" 
	id2="0004" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; { fpc0 | fpc1 | fpc2 | fpc3 | fpc4 | fpc5 | fpc6 | fpc7 | fpc8 | fpc9 | cfeb | ssb } &lt;messageid&gt;: &lt;!payload:messageid&gt;" />


<HEADER 
	id1="0005" 
	id2="0005" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; { fpc0 | fpc1 | fpc2 | fpc3 | fpc4 | fpc5 | ssb } &lt;messageid&gt; &lt;!payload:messageid&gt;" />
		

<HEADER 
	id1="0007" 
	id2="0007" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhost&gt;: &lt;hfld2&gt;[&lt;hpid&gt;]: &lt;messageid&gt;: &lt;!payload:hfld2&gt;" />

<HEADER 
	id1="0008" 
	id2="0008" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhost&gt;: &lt;messageid&gt;[&lt;hpid&gt;]: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0009" 
	id2="0009" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhost&gt;: &lt;hfld2&gt; IFP trace&gt; &lt;messageid&gt;: &lt;!payload:hfld2&gt;" />

<HEADER 
	id1="0010" 
	id2="0010" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhost&gt;: &lt;hfld2&gt; &lt;messageid&gt;: &lt;!payload:hfld2&gt;" />

<HEADER 
	id1="0029" 
	id2="0029" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hostip&gt; &lt;hfld1&gt;[&lt;pid&gt;]: &lt;messageid&gt;: &lt;!payload:hfld1&gt;" />

<HEADER 
	id1="0015" 
	id2="0015" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt;[&lt;pid&gt;]: &lt;messageid&gt;: &lt;!payload:hfld1&gt;" />

<HEADER 
	id1="0011" 
	id2="0011" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld2&gt; &lt;messageid&gt;: &lt;!payload:hfld2&gt;" />

		

<HEADER 
	id1="0027" 
	id2="0027" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhostname&gt; RT_FLOW: &lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0012" 
	id2="0012" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhost&gt;: &lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0013" 
	id2="0013" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hfld32&gt; &lt;hhostname&gt; RT_FLOW - &lt;messageid&gt; [  &lt;!payload:messageid&gt;" />

		
<HEADER 
	id1="0026" 
	id2="0026" 
	content="&lt;hfld1&gt; &lt;hfld32&gt; &lt;hhostname&gt; {RT_FLOW | junos-ssl-proxy | RT_APPQOS | &lt;hfld33&gt;} - &lt;messageid&gt; [  &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0014" 
	id2="0014" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt;[&lt;pid&gt;]: &lt;messageid&gt;[&lt;hpid&gt;]: &lt;!payload:hfld1&gt;" />

<HEADER 
	id1="0016" 
	id2="0016" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt;: &lt;messageid&gt;: &lt;!payload:hfld1&gt;" />

<HEADER 
	id1="0017" 
	id2="0017" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt;[&lt;pid&gt;]: &lt;messageid&gt; &lt;!payload:hfld1&gt;" />

<HEADER 
	id1="0018" 
	id2="0018" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt;: &lt;messageid&gt;[&lt;pid&gt;]:  &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0028" 
	id2="0028" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;messageid&gt;[&lt;pid&gt;]: &lt;!payload:messageid&gt;" />
		
<HEADER 
	id1="0019" 
	id2="0019" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt;: &lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0020" 
	id2="0020" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;messageid&gt;[&lt;pid&gt;]: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0021" 
	id2="0021" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; /&lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0022" 
	id2="0022" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0023" 
	id2="0023" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhostname&gt;: &lt;messageid&gt;[&lt;pid&gt;]:  &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0024" 
	id2="0024" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhostname&gt;: &lt;messageid&gt;: &lt;!payload:messageid&gt;" />

<HEADER 
	id1="0025" 
	id2="0025" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhostname&gt;: &lt;hfld2&gt; &lt;messageid&gt; &lt;!payload:hfld2&gt;" />
<HEADER 
	id1="0031" 
	id2="0031" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhostname&gt;: &lt;messageid&gt; &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0032" 
	id2="0032" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hostip&gt; (&lt;hfld1&gt;) &lt;hfld2&gt; &lt;messageid&gt;[&lt;pid&gt;]: &lt;!payload:messageid&gt;" />
<HEADER 
	id1="0033" 
	id2="0033" 
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld1&gt; &lt;hhostname&gt; &lt;messageid&gt;: &lt;!payload:hfld1&gt;" />
<HEADER
	id1="3336"
	id2="3336"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;process&gt;[&lt;process_id&gt;]: &lt;messageid&gt;: &lt;!payload&gt;" />

<HEADER
	id1="3339"
	id2="3339"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;process&gt;[&lt;process_id&gt;]: &lt;messageid&gt; &lt;!payload&gt;" />
<HEADER
	id1="3337"
	id2="3337"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;messageid&gt;: &lt;!payload&gt;" />

<HEADER
	id1="3341"
	id2="3341"
	content="&lt;hfld1&gt; &lt;hfld6&gt; &lt;hhostname&gt; &lt;hfld2&gt; &lt;hfld3&gt; &lt;messageid&gt; &lt;!payload:hfld2&gt;" />
<HEADER
	id1="3338"
	id2="3338"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;messageid&gt; &lt;!payload&gt;" />
	
<HEADER
	id1="3340"
	id2="3340"
	messageid="STRCAT('node')"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; { node&lt;hfld1&gt;.fpc&lt;hfld2&gt;.pic&lt;hfld3&gt; | node&lt;hfld1&gt;.fpc&lt;hfld2&gt; } &lt;!payload:hhost&gt;" />

<HEADER 
	id1="9997" 
	id2="9997" 
	messageid="STRCAT('JUNOSROUTER','_','GENERIC')"
	content="{mgd[|rpd[|dcd[}&lt;process_id&gt;]:&lt;!payload&gt;" />

<HEADER
	id1="9995"
	id2="9995"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;hfld1&gt; &lt;hfld2&gt; &lt;messageid&gt;[&lt;hfld3&gt;]:&lt;!payload:messageid&gt;" />

<HEADER 
	id1="9994" 
	id2="9994" 
	messageid="STRCAT('qsfp')"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld2&gt; &lt;hfld1&gt; qsfp &lt;!payload:hfld2&gt;" />
<HEADER
	id1="9999"
	id2="9999"
	messageid="STRCAT('JUNOSROUTER','_','GENERIC')"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hhost&gt; &lt;process&gt;[&lt;process_id&gt;]: &lt;hevent_type&gt;: &lt;!payload:hevent_type&gt;" />

	 
<HEADER 
	id1="9998" 
	id2="9998" 
	messageid="STRCAT('JUNOSROUTER','_','GENERIC')"
	content="&lt;month&gt; &lt;day&gt; &lt;time&gt; &lt;hfld2&gt; &lt;process&gt;: &lt;!payload:hfld2&gt;" />

<MESSAGE 
	id1="/usr/sbin/sshd" 
	id2="/usr/sbin/sshd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:sshd exit status&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;agent&gt;[&lt;id&gt;]: exit status &lt;result&gt;" />

<MESSAGE 
	id1="/usr/libexec/telnetd" 
	id2="/usr/libexec/telnetd" 
	eventcategory="1605000000" 
functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:telnetd exit status&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;agent&gt;[&lt;id&gt;]: exit status &lt;result&gt;" />

<MESSAGE
	id1="alarmd"
	id2="alarmd"
	eventcategory="1605000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Alarm Set or Cleared&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: License color=&lt;severity&gt;, class=&lt;device&gt;, reason=&lt;result&gt;" />

<MESSAGE 
	id1="bigd" 
	id2="bigd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Node detected UP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: Node detected UP for &lt;node&gt;" />

<MESSAGE 
	id1="bigd:01" 
	id2="bigd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Monitor template id&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Monitor template id is &lt;id&gt;" />

<MESSAGE 
	id1="bigpipe" 
	id2="bigpipe" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Loading configuration file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: Loading the configuration file &lt;filename&gt;" />

<MESSAGE 
	id1="bigpipe:01" 
	id2="bigpipe" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Begin config install operation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Begin config install operation &lt;action&gt;" />

<MESSAGE 
	id1="bigpipe:02" 
	id2="bigpipe" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Audit&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: AUDIT -- Action &lt;action&gt; User: &lt;username&gt;" />

<MESSAGE 
	id1="bigstart" 
	id2="bigstart" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:portal shutdown&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: shutdown &lt;service&gt;" />

<MESSAGE 
	id1="cgatool" 
	id2="cgatool" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:cga address genration&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: generated address is &lt;result&gt;" />

<MESSAGE
	 id1="chassisd:01"
	 id2="chassisd"
	 eventcategory="1605000000"
	 functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	 content="&lt;process&gt;[&lt;process_id&gt;]:&lt;fld12&gt;"/>

<MESSAGE 
	id1="checkd" 
	id2="checkd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:AUDIT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: AUDIT -- Action &lt;action&gt; User: &lt;username&gt;" />

<MESSAGE 
	id1="checkd:01" 
	id2="checkd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:checkd exiting&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: exiting" />

<MESSAGE 
	id1="cosd" 
	id2="cosd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:link protection for interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: link protection &lt;dclass_counter1&gt; for intf &lt;interface&gt;" />

<MESSAGE
	id1="craftd"
	id2="craftd"
	eventcategory="1605000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:License expiration warning&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="CRON" 
	id2="CRON" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CRON command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: (&lt;username&gt;) { CMD (&lt;result&gt;) | cmd=&apos;&lt;result&gt;&apos; }" />

<MESSAGE
	 id1="Cmerror"
	 id2="Cmerror"
	 eventcategory="1605000000" 
	 functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	 content="{&lt;hostname&gt;&lt;node&gt;Cmerror: Level&lt;level&gt;count increment &lt;dclass_counter1&gt;&lt;fld1&gt;|&lt;fld2&gt;}"/>

<MESSAGE 
	id1="cron" 
	id2="cron" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:cron RELOAD&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: (&lt;username&gt;) &lt;action&gt; (&lt;filename&gt;)" />

<MESSAGE
	id1="CROND"
	id2="CROND"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: (&lt;username&gt;) CMD (&lt;action&gt;)"/>

<MESSAGE
	id1="crond:01"
	id2="crond"
	eventcategory="1801020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: pam_unix(crond:session): session opened for user &lt;username&gt; by (uid=&lt;uid&gt;)"/>

<MESSAGE
	id1="CROND:02"
	id2="CROND"
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: pam_unix(crond:session): session closed for user &lt;username&gt;"/>

<MESSAGE 
	id1="dcd" 
	id2="dcd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Setting ignored&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;result&gt; Setting ignored,  &lt;info&gt;" />

<MESSAGE 
	id1="EVENT" 
	id2="EVENT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:EVENT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: EVENT &lt;event_type&gt; &lt;interface&gt; index &lt;resultcode&gt; { &lt;saddr&gt; -&gt; &lt;daddr&gt; &lt;&lt;&lt;result&gt;&gt; | &lt;&lt;&lt;result&gt;&gt; }" />

<MESSAGE 
	id1="ftpd" 
	id2="ftpd" 
	eventcategory="1802000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ftpd connection&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: connection from &lt;saddr&gt; (&lt;shost&gt;)" />

<MESSAGE
	id1="ha_rto_stats_handler"
	id2="ha_rto_stats_handler"
	eventcategory="1605010000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt;&lt;node&gt;ha_rto_stats_handler:&lt;fld12&gt;"/>

<MESSAGE 
	id1="hostinit" 
	id2="hostinit" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDAP Connection not bound correctly&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;obj_name&gt; -- LDAP Connection not bound correctly. &lt;info&gt;" />

<MESSAGE 
	id1="ifinfo" 
	id2="ifinfo" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PIC_INFO debug - Added entry&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: PIC_INFO debug&gt; Added entry - &lt;info&gt;" />

<MESSAGE 
	id1="ifinfo:01" 
	id2="ifinfo" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PIC_INFO debug Initializing spu&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: PIC_INFO debug&gt; Initializing spu listtype &lt;resultcode&gt;" />

<MESSAGE 
	id1="ifinfo:02" 
	id2="ifinfo" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PIC_INFO debug delete from list&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: PIC_INFO debug&gt; &lt;info&gt;" />

<MESSAGE 
	id1="ifp_ifl_anydown_change_event" 
	id2="ifp_ifl_anydown_change_event" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IFL anydown change event&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;action&gt;&gt; &lt;process&gt;: IFL anydown change event: &quot;&lt;event_type&gt;&quot;" />

<MESSAGE 
	id1="ifp_ifl_config_event" 
	id2="ifp_ifl_config_event" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifp ifl config_event&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;action&gt;&gt; &lt;process&gt;: IFL config: &quot;&lt;filename&gt;&quot;" />

<MESSAGE 
	id1="ifp_ifl_ext_chg" 
	id2="ifp_ifl_ext_chg" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifp_ifl_ext_chg&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: ifp ext piid &lt;parent_pid&gt; zone_id &lt;zone&gt;" />

<MESSAGE 
	id1="inetd" 
	id2="inetd" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:connection exceeded count limit&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;protocol&gt; from &lt;saddr&gt; exceeded counts/min (&lt;result&gt;)" />

<MESSAGE 
	id1="inetd:01" 
	id2="inetd" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:exited&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;agent&gt;[&lt;id&gt;]: exited, status &lt;result&gt;" />

<MESSAGE 
	id1="init:04" 
	id2="init" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt; current_mode=&lt;protocol&gt;, requested_mode=&lt;result&gt;, cmd=&lt;action&gt;" />

<MESSAGE 
	id1="init" 
	id2="init" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: &lt;event_type&gt; mode=&lt;protocol&gt; cmd=&lt;action&gt; master_mode=&lt;result&gt;" />

<MESSAGE 
	id1="init:01" 
	id2="init" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:failure target for routing set&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: failure target for routing set to &lt;result&gt;" />

<MESSAGE 
	id1="init:02" 
	id2="init" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ntp started&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: ntp (PID &lt;child_pid&gt;) started" />

<MESSAGE 
	id1="init:03" 
	id2="init" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:product mask and model info&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: product mask &lt;info&gt; model &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="ipc_msg_write" 
	id2="ipc_msg_write" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IPC message exceeds MTU&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: IPC message type: &lt;event_type&gt;, subtype: &lt;resultcode&gt; exceeds MTU, mtu &lt;dclass_counter1&gt;, length &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="connection_established" 
	id2="kernel" 
	eventcategory="1801020000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:listener connection established&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;:  &lt;service&gt;: conn established: listener idx=&lt;dclass_counter1&gt; tnpaddr=&lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="connection_dropped" 
	id2="kernel" 
	eventcategory="1801030000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:connection dropped&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: { &lt;result&gt;, connection dropped - src &lt;saddr&gt;:&lt;sport&gt; dest &lt;daddr&gt;:&lt;dport&gt; | &lt;result&gt;: conn dropped: listener idx=&lt;dclass_counter1&gt; tnpaddr=&lt;dclass_counter2&gt; }" />

<MESSAGE 
	id1="kernel" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Asserting SONET alarm(s)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;interface&gt;: Asserting SONET alarm(s) &lt;info&gt;" />

<MESSAGE 
	id1="kernel:01" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:interface down&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: &lt;interface&gt; down: &lt;result&gt;." />

<MESSAGE 
	id1="kernel:02" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:loopback suspected om interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;interface&gt;: loopback suspected; &lt;result&gt;" />

<MESSAGE 
	id1="kernel:03" 
	id2="kernel" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:soreceive error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: soreceive() error &lt;resultcode&gt;" />

<MESSAGE 
	id1="kernel:04" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:pfe_peer_alloc state 4&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt; !VALID(state 4)-&gt;&lt;result&gt;" />

<MESSAGE 
	id1="kernel:05" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NTP Server Unreachable&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;fld1&gt; &lt;hostip&gt; (&lt;fld2&gt;) &lt;fld3&gt; &lt;process&gt;[&lt;process_id&gt;]: NTP Server &lt;result&gt;" />
<MESSAGE 
	id1="kernel:06" 
	id2="kernel" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NTP Server Unreachable&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;fld1&gt; &lt;hostip&gt; &lt;process&gt;[&lt;process_id&gt;]: NTP Server &lt;result&gt;" />
<MESSAGE 
	id1="successful_login" 
	id2="login" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:successful user login&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: login from &lt;saddr&gt; on &lt;interface&gt; as &lt;username&gt;" />

<MESSAGE 
	id1="login_attempt" 
	id2="login" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user login attempt&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: Login attempt for user &lt;username&gt; from host &lt;hostip&gt;" />

<MESSAGE 
	id1="login" 
	id2="login" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PAM module return from login&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: PAM module &lt;dclass_counter1&gt; returned: &lt;space&gt;[&lt;resultcode&gt;]&lt;result&gt;" />

<MESSAGE 
	id1="lsys_ssam_handler" 
	id2="lsys_ssam_handler" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:processing lsys root-logical-system&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: processing lsys root-logical-system &lt;info&gt;" />

<MESSAGE 
	id1="mcsn" 
	id2="mcsn" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Removing mif  from group&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: Removing mif  from group [&lt;group&gt;] &lt;space&gt; &lt;result&gt;" />

<MESSAGE 
	id1="mrvl_dfw_log_effuse_status" 
	id2="mrvl_dfw_log_effuse_status" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Firewall rows could not be redirected on device&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Firewall rows could not be redirected on device &lt;device&gt;." />

<MESSAGE 
	id1="MRVL-L2" 
	id2="MRVL-L2" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:mfilter already exists for add&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;:&lt;action&gt;(),&lt;process_id&gt;:MFilter (&lt;filter&gt;) already exists" />

<MESSAGE 
	id1="profile_ssam_handler" 
	id2="profile_ssam_handler" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:processing profile SP-root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: processing profile SP-root &lt;info&gt;" />

<MESSAGE 
	id1="pst_nat_binding_set_profile" 
	id2="pst_nat_binding_set_profile" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:can't get resource bucket&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: &lt;event_source&gt;: can&apos;t get resource bucket &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="task_reconfigure" 
	id2="task_reconfigure" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:reinitializing done&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: task_reconfigure &lt;action&gt;" />

<MESSAGE
	 id1="tnetd"
	 id2="tnetd"
	 eventcategory="1605000000" 
	 functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	 content="{&lt;process&gt;[&lt;process_id&gt;]:&lt;service&gt;[&lt;fld1&gt;]: exit status&lt;resultcode&gt; |&lt;fld3&gt;}"/>

<MESSAGE 
	id1="PFEMAN" 
	id2="PFEMAN" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Session manager active&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Session manager active" />

<MESSAGE 
	id1="mgd" 
	id2="mgd" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Could not send message to service&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Could not send message to &lt;service&gt;" />

<MESSAGE 
	id1="Resolve" 
	id2="Resolve" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Resolve request came for an address matching on Wrong nh&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" Resolve request came for an address matching on Wrong nh nh:&lt;result&gt;, &lt;info&gt;" />

<MESSAGE 
	id1="respawn" 
	id2="respawn" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:service exited with status&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt; exited with status = &lt;resultcode&gt;" />

<MESSAGE 
	id1="root" 
	id2="root" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:system does not have 3-DNS or Link Controller enabled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;node&gt;: This system does not have 3-DNS or Link Controller enabled" />

<MESSAGE 
	id1="rpd" 
	id2="rpd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received data for interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Received &lt;result&gt; for intf device &lt;interface&gt;; mc_ae_id &lt;dclass_counter1&gt;, status &lt;resultcode&gt;" />

<MESSAGE 
	id1="rpd:01"
	id2="rpd"
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RSVP neighbor up on interface &gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: RSVP neighbor &lt;daddr&gt; up on interface &lt;interface&gt;" />

<MESSAGE 
	id1="rpd:02" 
	id2="rpd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:reseting pending active connection&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;saddr&gt; (&lt;shost&gt;): reseting pending active connection" />

<MESSAGE 
	id1="rpd_proceeding" 
	id2="rpd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rpd proceeding&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: proceeding. &lt;param&gt;" />

<MESSAGE 
	id1="rshd" 
	id2="rshd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user issuing command as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;username&gt; as root: cmd=&apos;&lt;action&gt;&apos; " />

<MESSAGE 
	id1="sfd" 
	id2="sfd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:sfd waiting on accept&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Waiting on accept" />

<MESSAGE 
	id1="sshd" 
	id2="sshd" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Accepted password&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Accepted password for &lt;username&gt; from &lt;saddr&gt; port &lt;sport&gt; &lt;protocol&gt;" />

<MESSAGE 
	id1="Failed:05" 
	id2="Failed" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:authentication failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Failed password { for illegal user | for invalid user | for } &lt;username&gt; from &lt;saddr&gt; port &lt;sport&gt; &lt;protocol&gt;" />

<MESSAGE 
	id1="sshd:02" 
	id2="sshd" 
	eventcategory="1801030000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received disconnect&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Received disconnect from &lt;shost&gt;: &lt;fld1&gt;: &lt;result&gt; " />

<MESSAGE 
	id1="sshd:03" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@result:no identification string&gt;&lt;@event_description:Did not receive identification string from peer&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Did not receive identification string from &lt;saddr&gt; " />

<MESSAGE 
	id1="sshd:04" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Could not write ident string&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Could not write ident string to &lt;dhost&gt;" />

<MESSAGE 
	id1="sshd:05" 
	id2="sshd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:subsystem request for netconf&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: subsystem request for netconf" />

<MESSAGE 
	id1="sshd:06" 
	id2="sshd" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:send message stats&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" { &lt;process&gt;[&lt;process_id&gt;]: | &lt;process&gt;: } sendmsg to &lt;saddr&gt;(&lt;shost&gt;).&lt;sport&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="sshd:07" 
	id2="sshd" 
	eventcategory="1701010000" 
	functions="&lt;@ec_theme:Configuration&gt;&lt;@ec_activity:Modify&gt;&lt;@ec_outcome:Success&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Added radius server&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" { &lt;process&gt;[&lt;process_id&gt;]: | &lt;process&gt;: } Added radius server &lt;saddr&gt;(&lt;shost&gt;)" />

<MESSAGE 
	id1="sshd:08" 
	id2="sshd" 
	eventcategory="1301020000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:authentication error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;result&gt;: &lt;space&gt; [&lt;resultcode&gt;]authentication error" />

<MESSAGE 
	id1="sshd:09" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unrecognized attribute in policy&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: unrecognized attribute in &lt;policyname&gt;: &lt;change_attribute&gt; " />

<MESSAGE 
	id1="sshd:10" 
	id2="sshd" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PAM module return from sshd&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: PAM module &lt;dclass_counter1&gt; returned: &lt;space&gt;[&lt;resultcode&gt;]&lt;result&gt;" />

<MESSAGE 
	id1="sshd:11" 
	id2="sshd" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PAM authentication chain return&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;: PAM authentication chain returned: &lt;space&gt;[&lt;resultcode&gt;]&lt;result&gt;" />

<MESSAGE 
	id1="sshd:12" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:can't get client address&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;severity&gt;: can&apos;t get client address: &lt;result&gt;" />

<MESSAGE 
	id1="sshd:13" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:auth server unresponsive&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: auth server unresponsive" />

<MESSAGE 
	id1="sshd:14" 
	id2="sshd" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No valid RADIUS responses received&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: No valid RADIUS responses received" />

<MESSAGE 
	id1="sshd:15" 
	id2="sshd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Moving to next server&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Moving to next server: &lt;saddr&gt;(&lt;shost&gt;).&lt;sport&gt;" />

<MESSAGE 
	id1="sshd:16" 
	id2="sshd" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failed for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;fld1&gt; sshd: SSHD_LOGIN_FAILED: Login failed for user &apos;&lt;username&gt;&apos; from host &apos;&lt;hostip&gt;&apos;." />

<MESSAGE 
	id1="syslogd" 
	id2="syslogd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:syslog daemon restart&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: restart" />

<MESSAGE 
	id1="ucd-snmp" 
	id2="ucd-snmp" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:AUDIT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: AUDIT -- Action &lt;action&gt; User: &lt;username&gt;" />

<MESSAGE 
	id1="ucd-snmp:01" 
	id2="ucd-snmp" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received TERM or STOP signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Received TERM or STOP signal &lt;space&gt; &lt;result&gt;." />

<MESSAGE 
	id1="usp_ipc_client_reconnect" 
	id2="usp_ipc_client_reconnect" 
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:failed to connect to the server&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;: failed to connect to the server: &lt;result&gt; (&lt;resultcode&gt;)" />

<MESSAGE 
	id1="usp_trace_ipc_disconnect" 
	id2="usp_trace_ipc_disconnect" 
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Trace client disconnected&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;:Trace client disconnected. &lt;result&gt;" />

<MESSAGE 
	id1="usp_trace_ipc_reconnect" 
	id2="usp_trace_ipc_reconnect" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:USP trace client cannot reconnect to server&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;node&gt; &lt;process&gt;:USP trace client cannot reconnect to server" />

<MESSAGE 
	id1="uspinfo" 
	id2="uspinfo" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:flow_print_session_summary_output received&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: flow_print_session_summary_output received &lt;info&gt;" />

<MESSAGE 
	id1="Version" 
	id2="Version" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Version build date&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" Version &lt;version&gt; by builder on &lt;event_time_string&gt;" />

<MESSAGE 
	id1="xntpd" 
	id2="xntpd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:frequency initialized from file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: frequency initialized &lt;result&gt; from &lt;filename&gt;" />

<MESSAGE 
	id1="xntpd:01" 
	id2="xntpd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:nptd version build&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: ntpd &lt;version&gt; &lt;event_time_string&gt; (&lt;resultcode&gt;)" />

<MESSAGE 
	id1="xntpd:02" 
	id2="xntpd" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:kernel time sync enabled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: kernel time sync enabled &lt;result&gt;" />
<MESSAGE 
	id1="xntpd:03" 
	id2="xntpd" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NTP Server Unreachable&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: NTP Server &lt;result&gt;" />

<MESSAGE 
	id1="last" 
	id2="last" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:last message repeated&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" last message repeated &lt;dclass_counter1&gt; times" />

<MESSAGE 
	id1="BCHIP" 
	id2="BCHIP" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:cannot write ucode mask reg&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt; &lt;device&gt;: cannot write ucode mask reg" />

<MESSAGE 
	id1="CM" 
	id2="CM" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Slot on-line&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;(&lt;fld1&gt;): Slot &lt;device&gt;: On-line" />

<MESSAGE 
	id1="COS" 
	id2="COS" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received FC Q map&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Received FC-&gt;Q map, &lt;info&gt;" />

<MESSAGE 
	id1="COSFPC" 
	id2="COSFPC" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifd error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: ifd &lt;resultcode&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="COSMAN" 
	id2="COSMAN" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:delete class to ifl link&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;service&gt;: delete class_to_ifl table &lt;dclass_counter1&gt;, ifl &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="RDP" 
	id2="RDP" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Keepalive timeout&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Keepalive timeout for rdp.(&lt;interface&gt;).(&lt;device&gt;) (&lt;result&gt;)" />

<MESSAGE 
	id1="SNTPD" 
	id2="SNTPD"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Initial time of day set&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: Initial time of day set" />

<MESSAGE 
	id1="SSB" 
	id2="SSB" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Slot serial number&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;(&lt;fld1&gt;): Slot &lt;device&gt;, serial number S/N &lt;serial_number&gt;." />

<MESSAGE 
	id1="ACCT_ACCOUNTING_FERROR" 
	id2="ACCT_ACCOUNTING_FERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unexpected error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unexpected error &lt;result&gt; from file &lt;filename&gt;" />

<MESSAGE 
	id1="ACCT_ACCOUNTING_FOPEN_ERROR" 
	id2="ACCT_ACCOUNTING_FOPEN_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to open file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to open file &lt;filename&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="ACCT_ACCOUNTING_SMALL_FILE_SIZE" 
	id2="ACCT_ACCOUNTING_SMALL_FILE_SIZE" 
	eventcategory="1602020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:File size mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: File &lt;filename&gt; size (&lt;dclass_counter1&gt;) is smaller than record size (&lt;dclass_counter2&gt;)" />

<MESSAGE 
	id1="ACCT_BAD_RECORD_FORMAT" 
	id2="ACCT_BAD_RECORD_FORMAT" 
	eventcategory="1602020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Invalid statistics record&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Invalid statistics record: &lt;result&gt;" />

<MESSAGE 
	id1="ACCT_CU_RTSLIB_error" 
	id2="ACCT_CU_RTSLIB_error" 
	eventcategory="1602020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Class usage statistics error for interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;filename&gt; getting class usage statistics for interface &lt;interface&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="ACCT_GETHOSTNAME_error" 
	id2="ACCT_GETHOSTNAME_error" 
	eventcategory="1602020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:error trying to get hostname&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { Error &lt;resultcode&gt; trying | trying } to get hostname" />

<MESSAGE 
	id1="ACCT_MALLOC_FAILURE" 
	id2="ACCT_MALLOC_FAILURE" 
	eventcategory="1603020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Memory allocation failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Memory allocation failed while reallocating &lt;obj_name&gt;" />

<MESSAGE 
	id1="ACCT_UNDEFINED_COUNTER_NAME" 
	id2="ACCT_UNDEFINED_COUNTER_NAME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Accounting profile counter not defined in firewall&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;filename&gt; in accounting profile &lt;dclass_counter1&gt; is not defined in a firewall using this filter profile" />

<MESSAGE 
	id1="ACCT_XFER_FAILED" 
	id2="ACCT_XFER_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ACCT_XFER_FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt; &lt;result&gt;: &lt;disposition&gt;" />

<MESSAGE 
	id1="ACCT_XFER_POPEN_FAIL" 
	id2="ACCT_XFER_POPEN_FAIL" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:POPEN FAIL invoking command command to transfer file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt; &lt;result&gt;: in invoking command command to transfer file &lt;filename&gt;" />

<MESSAGE 
	id1="APPQOS_LOG_EVENT"
	id2="APPQOS_LOG_EVENT"
	eventcategory="1801020000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; timestamp=&quot;&lt;result&gt;&quot; message-type=&quot;&lt;info&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-name=&quot;&lt;protocol&gt;&quot; application-name=&quot;&lt;application&gt;&quot; rule-set-name=&quot;&lt;rule_group&gt;&quot; rule-name=&quot;&lt;rulename&gt;&quot; action=&quot;&lt;action&gt;&quot; argument=&quot;&lt;fld2&gt;&quot; argument1=&quot;&lt;fld3&gt;&quot;]" />

<MESSAGE 
	id1="APPTRACK_SESSION_CREATE"
	id2="APPTRACK_SESSION_CREATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Create&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@result:AppTrack session created&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	 content="&lt;event_type&gt;: AppTrack session created &lt;saddr&gt;/&lt;sport&gt;->&lt;daddr&gt;/&lt;dport&gt; &lt;service&gt; &lt;protocol&gt; &lt;fld11&gt; &lt;hostip&gt;/&lt;network_port&gt;->&lt;dtransaddr&gt;/&lt;dtransport&gt; &lt;rulename&gt; &lt;rule_template&gt; &lt;fld12&gt; &lt;policyname&gt; &lt;src_zone&gt; &lt;dst_zone&gt; &lt;sessionid&gt; &lt;username&gt; &lt;fld10&gt;"/>

<MESSAGE 
	id1="APPTRACK_SESSION_CLOSE"
	id2="APPTRACK_SESSION_CLOSE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; reason=&quot;&lt;result&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; service-name=&quot;&lt;service&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; src-nat-rule-name=&quot;&lt;rulename&gt;&quot; dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; packets-from-client=&quot;&lt;packets&gt;&quot; bytes-from-client=&quot;&lt;rbytes&gt;&quot; packets-from-server=&quot;&lt;dclass_counter1&gt;&quot; bytes-from-server=&quot;&lt;sbytes&gt;&quot; elapsed-time=&quot;&lt;duration&gt;&quot;]" />

<MESSAGE 
	id1="APPTRACK_SESSION_CLOSE:01"
	id2="APPTRACK_SESSION_CLOSE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;event_type&gt;: &lt;result&gt;: &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;service&gt; &lt;protocol&gt; &lt;fld11&gt; &lt;hostip&gt;/&lt;network_port&gt;-&gt;&lt;dtransaddr&gt;/&lt;dtransport&gt; &lt;rulename&gt; &lt;rule_template&gt; &lt;fld12&gt; &lt;policyname&gt; &lt;src_zone&gt; &lt;dst_zone&gt; &lt;sessionid&gt; &lt;packets&gt;(&lt;rbytes&gt;) &lt;dclass_counter1&gt;(&lt;sbytes&gt;) &lt;duration&gt; &lt;username&gt; &lt;fld10&gt;" />

<MESSAGE 
	id1="APPTRACK_SESSION_VOL_UPDATE"
	id2="APPTRACK_SESSION_VOL_UPDATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; service-name=&quot;&lt;service&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; src-nat-rule-name=&quot;&lt;rulename&gt;&quot; dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; packets-from-client=&quot;&lt;packets&gt;&quot; bytes-from-client=&quot;&lt;rbytes&gt;&quot; packets-from-server=&quot;&lt;dclass_counter1&gt;&quot; bytes-from-server=&quot;&lt;sbytes&gt;&quot; elapsed-time=&quot;&lt;duration&gt;&quot;]" />

<MESSAGE 
	id1="APPTRACK_SESSION_VOL_UPDATE:01"
	id2="APPTRACK_SESSION_VOL_UPDATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;event_type&gt;: &lt;result&gt;: &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;service&gt; &lt;protocol&gt; &lt;fld11&gt; &lt;hostip&gt;/&lt;network_port&gt;-&gt;&lt;dtransaddr&gt;/&lt;dtransport&gt; &lt;rulename&gt; &lt;rule_template&gt; &lt;fld12&gt; &lt;policyname&gt; &lt;src_zone&gt; &lt;dst_zone&gt; &lt;sessionid&gt; &lt;packets&gt;(&lt;rbytes&gt;) &lt;dclass_counter1&gt;(&lt;sbytes&gt;) &lt;duration&gt; &lt;username&gt; &lt;fld10&gt;" />

<MESSAGE 
	id1="BFDD_TRAP_STATE_DOWN" 
	id2="BFDD_TRAP_STATE_DOWN" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Trap state change&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: local discriminator: &lt;resultcode&gt;, new state: &lt;result&gt;" />

<MESSAGE 
	id1="BFDD_TRAP_STATE_UP" 
	id2="BFDD_TRAP_STATE_UP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Trap state change&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: local discriminator: &lt;resultcode&gt;, new state: &lt;result&gt;" />

<MESSAGE 
	id1="bgp_connect_start"
	id2="bgp_connect_start"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:bgp connect error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: connect &lt;saddr&gt; (&lt;shost&gt;): &lt;result&gt; " />

<MESSAGE 
	id1="bgp_event" 
	id2="bgp_event" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:bgp peer state change&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: peer &lt;daddr&gt; (&lt;dhost&gt;) old state &lt;change_old&gt; event &lt;action&gt; new state &lt;change_new&gt; " />

<MESSAGE 
	id1="bgp_listen_accept" 
	id2="bgp_listen_accept" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Connection attempt from unconfigured neighbor&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Connection attempt from unconfigured neighbor: &lt;result&gt; " />

<MESSAGE 
	id1="bgp_listen_reset" 
	id2="bgp_listen_reset" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:bgp reset&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;:  &lt;action&gt;" />

<MESSAGE 
	id1="bgp_nexthop_sanity"
	id2="bgp_nexthop_sanity"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:peer next hop local&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: peer &lt;daddr&gt; (&lt;dhost&gt;) next hop &lt;saddr&gt; local, &lt;result&gt;" />

<MESSAGE 
	id1="bgp_process_caps" 
	id2="bgp_process_caps" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:code RED error NOTIFICATION sent&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: NOTIFICATION sent to &lt;daddr&gt; (&lt;dhost&gt;): code &lt;severity&gt; (&lt;action&gt;) subcode &lt;version&gt; (&lt;result&gt;) value &lt;disposition&gt;" />

<MESSAGE 
	id1="bgp_process_caps:01" 
	id2="bgp_process_caps" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:peer NLRI mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: mismatch NLRI with &lt;hostip&gt; (&lt;hostname&gt;): peer: &lt;daddr&gt; us: &lt;saddr&gt;" />

<MESSAGE 
	id1="bgp_pp_recv" 
	id2="bgp_pp_recv" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:connection collision&gt;&lt;@result:dropping connection to peer&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: dropping &lt;daddr&gt; (&lt;dhost&gt;), &lt;info&gt; (&lt;protocol&gt;)" />

<MESSAGE 
	id1="bgp_pp_recv:01" 
	id2="bgp_pp_recv" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:peer received unexpected EOF&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: peer &lt;daddr&gt; (&lt;dhost&gt;): received unexpected EOF" />

<MESSAGE 
	id1="bgp_send" 
	id2="bgp_send" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:bgp send blocked error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: sending &lt;sbytes&gt; bytes to &lt;daddr&gt; (&lt;dhost&gt;) blocked (&lt;disposition&gt;): &lt;result&gt; " />

<MESSAGE 
	id1="bgp_traffic_timeout" 
	id2="bgp_traffic_timeout" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:bgp timeout NOTIFICATION sent&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: NOTIFICATION sent to &lt;daddr&gt; (&lt;dhost&gt;): code &lt;resultcode&gt; (&lt;action&gt;), Reason: &lt;result&gt; " />

<MESSAGE 
	id1="BOOTPD_ARG_ERR" 
	id2="BOOTPD_ARG_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:boot argument error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Ignoring unknown option &lt;resultcode&gt;" />

<MESSAGE 
	id1="BOOTPD_BAD_ID" 
	id2="BOOTPD_BAD_ID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:boot unexpected Id value&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unexpected ID &lt;resultcode&gt;" />

<MESSAGE 
	id1="BOOTPD_BOOTSTRING" 
	id2="BOOTPD_BOOTSTRING" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Invalid boot string&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Boot string: &lt;filename&gt;" />

<MESSAGE 
	id1="BOOTPD_CONFIG_ERR" 
	id2="BOOTPD_CONFIG_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:configuration file error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Problems with configuration file &apos;&lt;filename&gt;&apos;, &lt;result&gt;" />

<MESSAGE 
	id1="BOOTPD_CONF_OPEN" 
	id2="BOOTPD_CONF_OPEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to open configuration file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to open configuration file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="BOOTPD_DUP_REV" 
	id2="BOOTPD_DUP_REV" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:boot - Duplicate revision&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Duplicate revision: &lt;version&gt;" />

<MESSAGE 
	id1="BOOTPD_DUP_SLOT" 
	id2="BOOTPD_DUP_SLOT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:boot - duplicate slot&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Duplicate slot default: &lt;ssid&gt;" />

<MESSAGE 
	id1="BOOTPD_MODEL_CHK" 
	id2="BOOTPD_MODEL_CHK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unexpected ID for model&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unexpected ID &lt;id&gt; for model &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="BOOTPD_MODEL_ERR" 
	id2="BOOTPD_MODEL_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unsupported model&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unsupported model &lt;dclass_counter1&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="BOOTPD_NEW_CONF" 
	id2="BOOTPD_NEW_CONF" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:New configuration installed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: New configuration installed " />

<MESSAGE 
	id1="BOOTPD_NO_BOOTSTRING" 
	id2="BOOTPD_NO_BOOTSTRING" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No boot string found&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No boot string found for type &lt;filename&gt;" />

<MESSAGE 
	id1="BOOTPD_NO_CONFIG" 
	id2="BOOTPD_NO_CONFIG" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No configuration file found&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No configuration file &apos;&lt;filename&gt;&apos;, &lt;result&gt;" />

<MESSAGE 
	id1="BOOTPD_PARSE_ERR" 
	id2="BOOTPD_PARSE_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:parse errors on SIGHUP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;filename&gt;: number parse errors on SIGHUP" />

<MESSAGE 
	id1="BOOTPD_REPARSE" 
	id2="BOOTPD_REPARSE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Reparsing configuration file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reparsing configuration file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="BOOTPD_SELECT_ERR" 
	id2="BOOTPD_SELECT_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:select error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: select: &lt;result&gt;" />

<MESSAGE 
	id1="BOOTPD_TIMEOUT" 
	id2="BOOTPD_TIMEOUT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:timeout unreasonable&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Timeout &lt;result&gt; unreasonable" />

<MESSAGE 
	id1="BOOTPD_VERSION"
	id2="BOOTPD_VERSION"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:boot version built&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Version: &lt;version&gt; built by builder on &lt;event_time_string&gt; " />

<MESSAGE 
	id1="CHASSISD" 
	id2="CHASSISD" 
	eventcategory="1605030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD release built&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt; &lt;version&gt; built by builder on &lt;event_time_string&gt;" />

<MESSAGE 
	id1="CHASSISD_ARGUMENT_ERROR" 
	id2="CHASSISD_ARGUMENT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD Unknown option&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unknown option &lt;result&gt; " />

<MESSAGE 
	id1="CHASSISD_BLOWERS_SPEED" 
	id2="CHASSISD_BLOWERS_SPEED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Fans and impellers are now running at normal speed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Fans and impellers are now running at normal speed" />

<MESSAGE 
	id1="CHASSISD_BLOWERS_SPEED_FULL" 
	id2="CHASSISD_BLOWERS_SPEED_FULL" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Fans and impellers being set to full speed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Fans and impellers being set to full speed [&lt;result&gt;]" />

<MESSAGE 
	id1="CHASSISD_CB_READ" 
	id2="CHASSISD_CB_READ" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:reading midplane ID EEPROM&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt; reading midplane ID EEPROM, &lt;dclass_counter1&gt; &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_COMMAND_ACK_ERROR" 
	id2="CHASSISD_COMMAND_ACK_ERROR"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD COMMAND ACK ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;device&gt; online ack code &lt;dclass_counter1&gt; - - &lt;result&gt;, &lt;interface&gt;" />

<MESSAGE 
	id1="CHASSISD_COMMAND_ACK_SF_ERROR" 
	id2="CHASSISD_COMMAND_ACK_SF_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD COMMAND ACK SF ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;disposition&gt; - &lt;result&gt;, code &lt;resultcode&gt;, SFM &lt;dclass_counter1&gt;, FPC &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_CONCAT_MODE_ERROR" 
	id2="CHASSISD_CONCAT_MODE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Cannot set no-concatenated mode for FPC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Cannot set no-concatenated mode for FPC &lt;dclass_counter2&gt; PIC &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_CONFIG_INIT_ERROR" 
	id2="CHASSISD_CONFIG_INIT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CONFIG File Problem&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Problems with configuration file &lt;filename&gt;; &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_CONFIG_WARNING" 
	id2="CHASSISD_CONFIG_WARNING" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD CONFIG WARNING&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;filename&gt;: &lt;result&gt;, FPC &lt;dclass_counter2&gt; &lt;resultcode&gt;" />

<MESSAGE 
	id1="CHASSISD_EXISTS" 
	id2="CHASSISD_EXISTS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:chassisd already running&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: chassisd already running; &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_EXISTS_TERM_OTHER" 
	id2="CHASSISD_EXISTS_TERM_OTHER" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Killing existing chassisd and exiting&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Killing existing chassisd and exiting" />

<MESSAGE 
	id1="CHASSISD_FILE_OPEN" 
	id2="CHASSISD_FILE_OPEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:file open error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: File open: &lt;filename&gt;, error: &lt;resultcode&gt; - - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_FILE_STAT" 
	id2="CHASSISD_FILE_STAT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD file statistics error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: File stat: &lt;filename&gt;, error: &lt;resultcode&gt; - - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_FRU_EVENT"
	id2="CHASSISD_FRU_EVENT"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD received restart EVENT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_FRU_IPC_WRITE_ERROR_EXT" 
	id2="CHASSISD_FRU_IPC_WRITE_ERROR_EXT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD restart WRITE_ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; FRU &lt;filename&gt;#&lt;resultcode&gt;, &lt;result&gt; &lt;dclass_counter1&gt;, &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_FRU_STEP_ERROR" 
	id2="CHASSISD_FRU_STEP_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD FRU STEP ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;filename&gt; &lt;resultcode&gt; at step &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_GETTIMEOFDAY" 
	id2="CHASSISD_GETTIMEOFDAY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unexpected error from gettimeofday&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unexpected error from gettimeofday: &lt;resultcode&gt; - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_HOST_TEMP_READ" 
	id2="CHASSISD_HOST_TEMP_READ" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:reading host temperature sensor&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt; reading host temperature sensor" />

<MESSAGE 
	id1="CHASSISD_IFDEV_DETACH_ALL_PSEUDO" 
	id2="CHASSISD_IFDEV_DETACH_ALL_PSEUDO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:detaching all pseudo devices&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;(&lt;disposition&gt;)" />

<MESSAGE 
	id1="CHASSISD_IFDEV_DETACH_FPC" 
	id2="CHASSISD_IFDEV_DETACH_FPC" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD IFDEV DETACH FPC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;(&lt;resultcode&gt;)" />

<MESSAGE 
	id1="CHASSISD_IFDEV_DETACH_PIC" 
	id2="CHASSISD_IFDEV_DETACH_PIC" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD IFDEV DETACH PIC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;(&lt;resultcode&gt;)" />

<MESSAGE 
	id1="CHASSISD_IFDEV_DETACH_PSEUDO" 
	id2="CHASSISD_IFDEV_DETACH_PSEUDO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD IFDEV DETACH PSEUDO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;(&lt;disposition&gt;)" />

<MESSAGE 
	id1="CHASSISD_IFDEV_DETACH_TLV_ERROR" 
	id2="CHASSISD_IFDEV_DETACH_TLV_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD IFDEV DETACH TLV ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_IFDEV_GET_BY_INDEX_FAIL" 
	id2="CHASSISD_IFDEV_GET_BY_INDEX_FAIL" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rtslib_ifdm_get_by_index failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: rtslib_ifdm_get_by_index failed: &lt;resultcode&gt; - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_IPC_MSG_QFULL_ERROR" 
	id2="CHASSISD_IPC_MSG_QFULL_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Message Queue full&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;: type = &lt;dclass_counter1&gt;, subtype = &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_IPC_UNEXPECTED_RECV" 
	id2="CHASSISD_IPC_UNEXPECTED_RECV" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received unexpected message&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Received unexpected message from &lt;service&gt;: type = &lt;dclass_counter1&gt;, subtype = &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_IPC_WRITE_ERR_NO_PIPE" 
	id2="CHASSISD_IPC_WRITE_ERR_NO_PIPE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FRU has no connection pipe&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: FRU has no connection pipe &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_IPC_WRITE_ERR_NULL_ARGS" 
	id2="CHASSISD_IPC_WRITE_ERR_NULL_ARGS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FRU has no connection arguments&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: FRU has no connection arguments &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_MAC_ADDRESS_ERROR" 
	id2="CHASSISD_MAC_ADDRESS_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:chassisd MAC address allocation error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: chassisd MAC address allocation error" />

<MESSAGE 
	id1="CHASSISD_MAC_DEFAULT" 
	id2="CHASSISD_MAC_DEFAULT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Using default MAC address base&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Using default MAC address base" />

<MESSAGE 
	id1="CHASSISD_MBUS_ERROR" 
	id2="CHASSISD_MBUS_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:management bus failed sanity test&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; &lt;resultcode&gt;: management bus failed sanity test" />

<MESSAGE 
	id1="CHASSISD_PARSE_COMPLETE" 
	id2="CHASSISD_PARSE_COMPLETE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Using new configuration&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Using new configuration" />

<MESSAGE 
	id1="CHASSISD_PARSE_ERROR" 
	id2="CHASSISD_PARSE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD PARSE ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;resultcode&gt; &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_PARSE_INIT" 
	id2="CHASSISD_PARSE_INIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Parsing configuration file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Parsing configuration file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="CHASSISD_PIDFILE_OPEN" 
	id2="CHASSISD_PIDFILE_OPEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to open PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to open PID file &apos;&lt;filename&gt;&apos;: &lt;result&gt; &lt;resultcode&gt;" />

<MESSAGE 
	id1="CHASSISD_PIPE_WRITE_ERROR" 
	id2="CHASSISD_PIPE_WRITE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Pipe error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Pipe error: &lt;resultcode&gt;" />

<MESSAGE 
	id1="CHASSISD_POWER_CHECK" 
	id2="CHASSISD_POWER_CHECK" 
	eventcategory="1603010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:device not powering up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;device&gt; &lt;dclass_counter1&gt; not powering up" />

<MESSAGE 
	id1="CHASSISD_RECONNECT_SUCCESSFUL" 
	id2="CHASSISD_RECONNECT_SUCCESSFUL" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Successful reconnect on soft restart&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Successfully reconnected on soft restart" />

<MESSAGE 
	id1="CHASSISD_RELEASE_MASTERSHIP" 
	id2="CHASSISD_RELEASE_MASTERSHIP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Release mastership notification&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Release mastership notification" />

<MESSAGE 
	id1="CHASSISD_RE_INIT_INVALID_RE_SLOT" 
	id2="CHASSISD_RE_INIT_INVALID_RE_SLOT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:re_init Invalid RE slot&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: re_init: re &lt;resultcode&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_ROOT_MOUNT_ERROR" 
	id2="CHASSISD_ROOT_MOUNT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to determine mount point for root directory&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to determine the mount point for root directory: &lt;resultcode&gt;" />

<MESSAGE 
	id1="CHASSISD_RTS_SEQ_ERROR" 
	id2="CHASSISD_RTS_SEQ_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifmsg sequence gap&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifmsg sequence gap &lt;resultcode&gt; - - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_SBOARD_VERSION_MISMATCH" 
	id2="CHASSISD_SBOARD_VERSION_MISMATCH" 
	eventcategory="1603040000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Version mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Version mismatch: &lt;info&gt;" />

<MESSAGE 
	id1="CHASSISD_SERIAL_ID" 
	id2="CHASSISD_SERIAL_ID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Serial ID read error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Serial ID read error: &lt;resultcode&gt; - - &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_SMB_ERROR" 
	id2="CHASSISD_SMB_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:fpga download not complete&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: fpga download not complete: val &lt;resultcode&gt;, &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_SNMP_TRAP6" 
	id2="CHASSISD_SNMP_TRAP6" 
	eventcategory="1605030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP Trap6 generated&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: SNMP trap generated: &lt;result&gt; (&lt;info&gt;)" />

<MESSAGE 
	id1="CHASSISD_SNMP_TRAP7" 
	id2="CHASSISD_SNMP_TRAP7" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP Trap7 generated&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: SNMP trap: &lt;result&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="CHASSISD_SNMP_TRAP10" 
	id2="CHASSISD_SNMP_TRAP10" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP trap - FRU power on&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: SNMP trap: &lt;result&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="CHASSISD_TERM_SIGNAL" 
	id2="CHASSISD_TERM_SIGNAL" 
	eventcategory="1606000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received SIGTERM request&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Received SIGTERM request, &lt;result&gt;" />

<MESSAGE 
	id1="CHASSISD_TRACE_PIC_OFFLINE" 
	id2="CHASSISD_TRACE_PIC_OFFLINE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Taking PIC offline&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Taking PIC offline - - FPC slot &lt;dclass_counter1&gt;, PIC slot &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="CHASSISD_UNEXPECTED_EXIT" 
	id2="CHASSISD_UNEXPECTED_EXIT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:UNEXPECTED EXIT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; returned &lt;resultcode&gt;: &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="CHASSISD_UNSUPPORTED_MODEL" 
	id2="CHASSISD_UNSUPPORTED_MODEL" 
	eventcategory="1603010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Model number unsupported with this version of chassisd&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Model &lt;dclass_counter1&gt; unsupported with this version of chassisd" />

<MESSAGE 
	id1="CHASSISD_VERSION_MISMATCH" 
	id2="CHASSISD_VERSION_MISMATCH" 
	eventcategory="1603010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Chassisd Version mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Version mismatch: &lt;info&gt;" />

<MESSAGE 
	id1="CHASSISD_HIGH_TEMP_CONDITION" 
	id2="CHASSISD_HIGH_TEMP_CONDITION" 
	eventcategory="1603010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHASSISD HIGH TEMP CONDITION&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld6)&gt;"
	content="&lt;process&gt; &lt;process_id&gt; &lt;event_type&gt; [junos@&lt;obj_name&gt; temperature=&quot;&lt;fld2&gt;&quot; message=&quot;&lt;info&gt;&quot;]"/>

<MESSAGE 
	id1="clean_process" 
	id2="clean_process" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:process RESTART mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: process &lt;agent&gt; RESTART mode &lt;event_state&gt; new master=&lt;obj_name&gt; old failover=&lt;change_old&gt; new failover = &lt;change_new&gt;" />

<MESSAGE 
	id1="CM_JAVA" 
	id2="CM_JAVA" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Chassis Linklocal to MAC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Chassis &lt;group&gt; Linklocal MAC:&lt;macaddr&gt;" />

<MESSAGE 
	id1="DCD_AS_ROOT" 
	id2="DCD_AS_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DCD must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root" />

<MESSAGE 
	id1="DCD_FILTER_LIB_ERROR" 
	id2="DCD_FILTER_LIB_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Filter library initialization failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Filter library initialization failed" />

<MESSAGE 
	id1="DCD_MALLOC_FAILED_INIT" 
	id2="DCD_MALLOC_FAILED_INIT" 
	eventcategory="1603020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Memory allocation failed during initialization for configuration load&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Memory allocation failed during initialization for configuration load" />

<MESSAGE 
	id1="DCD_PARSE_EMERGENCY" 
	id2="DCD_PARSE_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:errors while parsing configuration file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: errors while parsing configuration file" />

<MESSAGE 
	id1="DCD_PARSE_FILTER_EMERGENCY" 
	id2="DCD_PARSE_FILTER_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:errors while parsing filter index file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: errors while parsing filter index file" />

<MESSAGE 
	id1="DCD_PARSE_MINI_EMERGENCY" 
	id2="DCD_PARSE_MINI_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:errors while parsing configuration overlay&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: errors while parsing configuration overlay" />

<MESSAGE 
	id1="DCD_PARSE_STATE_EMERGENCY" 
	id2="DCD_PARSE_STATE_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unhandled state was encountered during interface parsing&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: An unhandled state was encountered during interface parsing" />

<MESSAGE 
	id1="DCD_POLICER_PARSE_EMERGENCY" 
	id2="DCD_POLICER_PARSE_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:errors while parsing policer indexfile&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: errors while parsing policer indexfile" />

<MESSAGE 
	id1="DCD_PULL_LOG_FAILURE" 
	id2="DCD_PULL_LOG_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to pull file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to pull file &lt;filename&gt; after &lt;dclass_counter1&gt; retries last error=&lt;resultcode&gt;" />

<MESSAGE 
	id1="DFWD_ARGUMENT_ERROR" 
	id2="DFWD_ARGUMENT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DFWD ARGUMENT ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="DFWD_MALLOC_FAILED_INIT" 
	id2="DFWD_MALLOC_FAILED_INIT" 
	eventcategory="1603020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Memory allocation failed during initialization for configuration load&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Memory allocation failed during initialization for configuration load" />

<MESSAGE 
	id1="DFWD_PARSE_FILTER_EMERGENCY" 
	id2="DFWD_PARSE_FILTER_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:errors encountered while parsing filter index file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; encountered errors while parsing filter index file" />

<MESSAGE 
	id1="DFWD_PARSE_STATE_EMERGENCY" 
	id2="DFWD_PARSE_STATE_EMERGENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:encountered unhandled state while parsing interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; encountered unhandled state while parsing interface" />

<MESSAGE 
	id1="ECCD_DAEMONIZE_FAILED" 
	id2="ECCD_DAEMONIZE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unable to run in the background as a daemon&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;, unable to run in the background as a daemon: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_DUPLICATE" 
	id2="ECCD_DUPLICATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Another copy of this program is running&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Another copy of this program is running" />

<MESSAGE 
	id1="ECCD_LOOP_EXIT_FAILURE" 
	id2="ECCD_LOOP_EXIT_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ECCD LOOP EXIT FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MainLoop return value: &lt;disposition&gt;, error: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_NOT_ROOT" 
	id2="ECCD_NOT_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ECCD Must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root " />

<MESSAGE 
	id1="ECCD_PCI_FILE_OPEN_FAILED" 
	id2="ECCD_PCI_FILE_OPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ECCD PCI FILE OPEN FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: open() failed: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_PCI_READ_FAILED" 
	id2="ECCD_PCI_READ_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PCI read failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_PCI_WRITE_FAILED" 
	id2="ECCD_PCI_WRITE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PCI write failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_PID_FILE_LOCK" 
	id2="ECCD_PID_FILE_LOCK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to lock PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to lock PID file: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_PID_FILE_UPDATE" 
	id2="ECCD_PID_FILE_UPDATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to update process PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to update process PID file: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_TRACE_FILE_OPEN_FAILED" 
	id2="ECCD_TRACE_FILE_OPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ECCD TRACE FILE OPEN FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="ECCD_usage" 
	id2="ECCD_usage" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ECCD Usage&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="EVENTD_AUDIT_SHOW"
	id2="EVENTD_AUDIT_SHOW"
	eventcategory="1605000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User viewed security audit log with arguments&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &lt;username&gt; viewed security audit log with arguments: &lt;param&gt;" />

<MESSAGE 
	id1="FLOW_REASSEMBLE_SUCCEED"
	id2="FLOW_REASSEMBLE_SUCCEED"
	eventcategory="1605000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;event_type&gt;: Packet merged source &lt;saddr&gt; destination &lt;daddr&gt; ipid &lt;fld11&gt; succeed" />

<MESSAGE 
	id1="FSAD_CHANGE_FILE_OWNER" 
	id2="FSAD_CHANGE_FILE_OWNER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to change owner of file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to change owner of file `&lt;filename&gt;&apos; to user &lt;username&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_CONFIG_ERROR" 
	id2="FSAD_CONFIG_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FSAD CONFIG ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_CONNTIMEDOUT" 
	id2="FSAD_CONNTIMEDOUT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Connection timed out to client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Connection timed out to the client (&lt;shost&gt;, &lt;saddr&gt;) having request type &lt;obj_type&gt;" />

<MESSAGE 
	id1="FSAD_FAILED" 
	id2="FSAD_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FSAD_FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_FETCHTIMEDOUT" 
	id2="FSAD_FETCHTIMEDOUT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Fetch to server to get file timed out&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Fetch to server &lt;hostname&gt; for file `&lt;filename&gt;&apos; timed out" />

<MESSAGE 
	id1="FSAD_FILE_FAILED" 
	id2="FSAD_FILE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:fn failed for file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: fn failed for file `&lt;filename&gt;&apos; with error message &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_FILE_REMOVE" 
	id2="FSAD_FILE_REMOVE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to remove file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to remove file `&lt;filename&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_FILE_RENAME" 
	id2="FSAD_FILE_RENAME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to rename file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to rename file `&lt;filename&gt;&apos; to `&lt;resultcode&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_FILE_STAT" 
	id2="FSAD_FILE_STAT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:stat failed for file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; failed for file pathname &lt;filename&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_FILE_SYNC" 
	id2="FSAD_FILE_SYNC" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to sync file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to sync file &lt;filename&gt;&apos;: &lt;result&gt;" />
<MESSAGE 
	id1="FSAD_MAXCONN" 
	id2="FSAD_MAXCONN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Upper limit reached in fsad&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Upper limit reached in fsad for handling connections" />

<MESSAGE 
	id1="FSAD_MEMORYALLOC_FAILED" 
	id2="FSAD_MEMORYALLOC_FAILED" 
	eventcategory="1603020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FSAD MEMORYALLOC FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt; failed in the function &lt;action&gt; (&lt;resultcode&gt;)" />

<MESSAGE 
	id1="FSAD_NOT_ROOT" 
	id2="FSAD_NOT_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FSAD must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root " />

<MESSAGE 
	id1="FSAD_PARENT_DIRECTORY" 
	id2="FSAD_PARENT_DIRECTORY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:invalid directory&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: invalid directory: &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_PATH_IS_DIRECTORY" 
	id2="FSAD_PATH_IS_DIRECTORY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:File path cannot be a directory&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: File path cannot be a directory (&lt;filename&gt;)" />

<MESSAGE 
	id1="FSAD_PATH_IS_SPECIAL" 
	id2="FSAD_PATH_IS_SPECIAL" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Not a regular file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Not a regular file (&lt;filename&gt;)" />

<MESSAGE 
	id1="FSAD_RECVERROR" 
	id2="FSAD_RECVERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:fsad received error message from client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: fsad received error message from client having request type &lt;obj_type&gt; at (&lt;saddr&gt;, &lt;sport&gt;)" />

<MESSAGE 
	id1="FSAD_TERMINATED_CONNECTION" 
	id2="FSAD_TERMINATED_CONNECTION" 
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:FSAD TERMINATED CONNECTION&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Open file &lt;filename&gt;` closed due to &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_TERMINATING_SIGNAL" 
	id2="FSAD_TERMINATING_SIGNAL" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received terminating signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Received terminating &lt;resultcode&gt;; &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_TRACEOPEN_FAILED" 
	id2="FSAD_TRACEOPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Open operation on trace file failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Open operation on trace file `&lt;filename&gt;&apos; returned error &lt;result&gt;" />

<MESSAGE 
	id1="FSAD_USAGE" 
	id2="FSAD_USAGE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Incorrect FSAD usage&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Incorrect usage, &lt;info&gt;" />

<MESSAGE 
	id1="GGSN_ALARM_TRAP_FAILED" 
	id2="GGSN_ALARM_TRAP_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:GGSN ALARM TRAP FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="GGSN_ALARM_TRAP_SEND" 
	id2="GGSN_ALARM_TRAP_SEND" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:GGSN ALARM TRAP SEND FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="GGSN_TRAP_SEND" 
	id2="GGSN_TRAP_SEND" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unknown trap request type&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unknown trap request type &lt;obj_type&gt;" />

<MESSAGE 
	id1="JADE_AUTH_ERROR" 
	id2="JADE_AUTH_ERROR" 
	eventcategory="1301000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:Service&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Authorization failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Authorization failed: &lt;result&gt;" />

<MESSAGE 
	id1="JADE_EXEC_ERROR" 
	id2="JADE_EXEC_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:JADE EXEC ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: CLI &lt;resultcode&gt; &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="JADE_NO_LOCAL_USER" 
	id2="JADE_NO_LOCAL_USER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Local user does not exist&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Local user &lt;username&gt; does not exist" />

<MESSAGE 
	id1="JADE_PAM_ERROR" 
	id2="JADE_PAM_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:JADE PAM error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="JADE_PAM_NO_LOCAL_USER" 
	id2="JADE_PAM_NO_LOCAL_USER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to get local username from PAM&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to get local username from PAM: &lt;result&gt;" />

<MESSAGE 
	id1="KERN_ARP_ADDR_CHANGE"
	id2="KERN_ARP_ADDR_CHANGE"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:arp info overwritten&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: arp info overwritten for &lt;saddr&gt; from &lt;smacaddr&gt; to &lt;dmacaddr&gt;" />

<MESSAGE 
	id1="KMD_PM_SA_ESTABLISHED"
	id2="KMD_PM_SA_ESTABLISHED"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:security association has been established&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Local gateway: &lt;gateway&gt;, Remote gateway: &lt;fld1&gt;, Local ID:&lt;fld2&gt;, Remote ID:&lt;fld3&gt;, Direction:&lt;fld4&gt;, SPI:&lt;fld5&gt; " />

<MESSAGE 
	id1="L2CPD_TASK_REINIT" 
	id2="L2CPD_TASK_REINIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Task Reinitialized&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reinitialized" />

<MESSAGE 
	id1="LIBJNX_EXEC_EXITED" 
	id2="LIBJNX_EXEC_EXITED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command stopped&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command stopped: PID &lt;child_pid&gt;, signal=&apos;&lt;obj_type&gt;&apos; &lt;result&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="LIBJNX_EXEC_FAILED" 
	id2="LIBJNX_EXEC_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Child exec failed for command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child exec failed for command &apos;&lt;action&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="LIBJNX_EXEC_PIPE" 
	id2="LIBJNX_EXEC_PIPE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to create pipes for command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to create pipes for command &apos;&lt;action&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="LIBJNX_EXEC_SIGNALED" 
	id2="LIBJNX_EXEC_SIGNALED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command received signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command received signal: PID &lt;child_pid&gt;, signal &lt;result&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="LIBJNX_EXEC_WEXIT" 
	id2="LIBJNX_EXEC_WEXIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command exited&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command exited: PID &lt;child_pid&gt;, status &lt;result&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="LIBJNX_FILE_COPY_FAILED" 
	id2="LIBJNX_FILE_COPY_FAILED" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:copy_file_to_transfer_dir failed to copy&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: copy_file_to_transfer_dir failed to copy from source to destination" />

<MESSAGE 
	id1="LIBJNX_PRIV_LOWER_FAILED" 
	id2="LIBJNX_PRIV_LOWER_FAILED" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to lower privilege level&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to lower privilege level: &lt;result&gt;" />

<MESSAGE 
	id1="LIBJNX_PRIV_RAISE_FAILED" 
	id2="LIBJNX_PRIV_RAISE_FAILED" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to raise privilege level&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to raise privilege level: &lt;result&gt;" />

<MESSAGE 
	id1="LIBJNX_REPLICATE_RCP_EXEC_FAILED" 
	id2="LIBJNX_REPLICATE_RCP_EXEC_FAILED" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rcp failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="LIBJNX_ROTATE_COMPRESS_EXEC_FAILED" 
	id2="LIBJNX_ROTATE_COMPRESS_EXEC_FAILED" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ROTATE COMPRESS EXEC FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;resultcode&gt; &lt;dclass_counter1&gt; -f &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="LIBSERVICED_CLIENT_CONNECTION" 
	id2="LIBSERVICED_CLIENT_CONNECTION" 
	eventcategory="1801010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Client connection error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Client connection error: &lt;result&gt;" />

<MESSAGE 
	id1="LIBSERVICED_OUTBOUND_REQUEST" 
	id2="LIBSERVICED_OUTBOUND_REQUEST" 
	eventcategory="1603050000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Outbound request failed for command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Outbound request failed for command [&lt;action&gt;]: &lt;result&gt;" />

<MESSAGE 
	id1="LIBSERVICED_SNMP_LOST_CONNECTION" 
	id2="LIBSERVICED_SNMP_LOST_CONNECTION" 
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Connection closed while receiving from client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Connection closed while receiving from client &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="LIBSERVICED_SOCKET_BIND" 
	id2="LIBSERVICED_SOCKET_BIND" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unable to bind socket&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;resultcode&gt;: unable to bind socket &lt;ssid&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="LIBSERVICED_SOCKET_PRIVATIZE" 
	id2="LIBSERVICED_SOCKET_PRIVATIZE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to attach socket to management routing instance&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to attach socket &lt;ssid&gt; to management routing instance: &lt;result&gt;" />

<MESSAGE 
	id1="LICENSE_EXPIRED"
	id2="LICENSE_EXPIRED"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LICENSE EXPIRED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="LICENSE_EXPIRED_KEY_DELETED"
	id2="LICENSE_EXPIRED_KEY_DELETED"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:License key has expired&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: License key &quot;&lt;filename&gt;&quot; has expired." />

<MESSAGE 
	id1="LICENSE_NEARING_EXPIRY"
	id2="LICENSE_NEARING_EXPIRY"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:License key expiration soon&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: License for feature &lt;disposition&gt; &lt;result&gt;" />

<MESSAGE 
	id1="LOGIN_ABORTED" 
	id2="LOGIN_ABORTED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:client aborted login&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Client aborted login" />

<MESSAGE 
	id1="LOGIN_FAILED" 
	id2="LOGIN_FAILED" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Login failed for user &lt;username&gt; from host &lt;dhost&gt;" />

<MESSAGE 
	id1="LOGIN_FAILED_INCORRECT_PASSWORD" 
	id2="LOGIN_FAILED_INCORRECT_PASSWORD" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Incorrect password for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Incorrect password for user &lt;username&gt;" />

<MESSAGE 
	id1="LOGIN_FAILED_SET_CONTEXT" 
	id2="LOGIN_FAILED_SET_CONTEXT" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Failed to set context for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to set context for user &lt;username&gt;" />

<MESSAGE 
	id1="LOGIN_FAILED_SET_LOGIN" 
	id2="LOGIN_FAILED_SET_LOGIN" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Failed to set login ID for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to set login ID for user &lt;username&gt;: &lt;dhost&gt;" />

<MESSAGE 
	id1="LOGIN_HOSTNAME_UNRESOLVED" 
	id2="LOGIN_HOSTNAME_UNRESOLVED" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Unable to resolve hostname&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to resolve hostname &lt;dhost&gt;: &lt;info&gt; " />

<MESSAGE 
	id1="LOGIN_INFORMATION" 
	id2="LOGIN_INFORMATION" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Successful Login&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" { &lt;process&gt;[&lt;process_id&gt;]: | &lt;process&gt;: } &lt;event_type&gt;:  { User | user } &lt;username&gt; logged in from host &lt;dhost&gt; { on device | on } &lt;terminal&gt; " />

<MESSAGE 
	id1="LOGIN_INVALID_LOCAL_USER" 
	id2="LOGIN_INVALID_LOCAL_USER" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:No entry in local password file for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No entry in local password file for user &lt;username&gt; " />

<MESSAGE 
	id1="LOGIN_MALFORMED_USER" 
	id2="LOGIN_MALFORMED_USER" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Invalid username&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Invalid username: &lt;username&gt; " />

<MESSAGE 
	id1="LOGIN_PAM_AUTHENTICATION_ERROR" 
	id2="LOGIN_PAM_AUTHENTICATION_ERROR" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:PAM authentication error for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { PAM authentication error for user | Failed password for user } &lt;username&gt; " />

<MESSAGE 
	id1="LOGIN_PAM_ERROR" 
	id2="LOGIN_PAM_ERROR" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PAM authentication failure&gt;&lt;@result:Failure while authenticating user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failure while authenticating user &lt;username&gt;: &lt;dhost&gt;" />

<MESSAGE 
	id1="LOGIN_PAM_MAX_RETRIES" 
	id2="LOGIN_PAM_MAX_RETRIES" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Too many retries while authenticating user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Too many retries while authenticating user &lt;username&gt; " />

<MESSAGE 
	id1="LOGIN_PAM_NONLOCAL_USER" 
	id2="LOGIN_PAM_NONLOCAL_USER" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:User authenticated but has no local login ID&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &lt;username&gt; authenticated but has no local login ID" />

<MESSAGE 
	id1="LOGIN_PAM_STOP" 
	id2="LOGIN_PAM_STOP" 
	eventcategory="1303000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to end PAM session&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to end PAM session: &lt;info&gt;" />

<MESSAGE 
	id1="LOGIN_PAM_USER_UNKNOWN" 
	id2="LOGIN_PAM_USER_UNKNOWN" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Attempt to authenticate unknown user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Attempt to authenticate unknown user &lt;username&gt;" />

<MESSAGE 
	id1="LOGIN_PASSWORD_EXPIRED" 
	id2="LOGIN_PASSWORD_EXPIRED" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Forcing change of expired password for user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Forcing change of expired password for user &lt;username&gt;&gt;" />

<MESSAGE 
	id1="LOGIN_REFUSED" 
	id2="LOGIN_REFUSED" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Login of user refused&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Login of user &lt;username&gt; from host &lt;shost&gt; on &lt;terminal&gt; was refused: &lt;info&gt;" />

<MESSAGE 
	id1="LOGIN_ROOT" 
	id2="LOGIN_ROOT" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:successful login as root&gt;&lt;@result:User logged in as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &lt;username&gt; logged in as root from host &lt;shost&gt; on &lt;terminal&gt;" />

<MESSAGE 
	id1="LOGIN_TIMED_OUT" 
	id2="LOGIN_TIMED_OUT" 
	eventcategory="1401030000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login failure&gt;&lt;@result:Login attempt timed out&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Login attempt timed out after &lt;dclass_counter1&gt; seconds" />

<MESSAGE 
	id1="MIB2D_ATM_ERROR" 
	id2="MIB2D_ATM_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MIB2D ATM ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;:  &lt;service&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_CONFIG_CHECK_FAILED" 
	id2="MIB2D_CONFIG_CHECK_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CONFIG CHECK FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_FILE_OPEN_FAILURE" 
	id2="MIB2D_FILE_OPEN_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to open file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to open file &apos;&lt;filename&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_IFD_IFINDEX_FAILURE" 
	id2="MIB2D_IFD_IFINDEX_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP index assigned changed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: SNMP index assigned to &lt;uid&gt; changed from &lt;dclass_counter1&gt; to &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_IFL_IFINDEX_FAILURE" 
	id2="MIB2D_IFL_IFINDEX_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP index assigned changed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: SNMP index assigned to &lt;uid&gt; changed from &lt;dclass_counter1&gt; to &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_INIT_FAILURE" 
	id2="MIB2D_INIT_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:mib2d initialization failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: mib2d initialization failure: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_KVM_FAILURE" 
	id2="MIB2D_KVM_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MIB2D KVM FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_RTSLIB_READ_FAILURE" 
	id2="MIB2D_RTSLIB_READ_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MIB2D RTSLIB READ FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: failed in &lt;dclass_counter1&gt; &lt;dclass_counter2&gt; index (&lt;result&gt;)" />

<MESSAGE 
	id1="MIB2D_RTSLIB_SEQ_MISMATCH" 
	id2="MIB2D_RTSLIB_SEQ_MISMATCH" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RTSLIB sequence mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: sequence mismatch (&lt;result&gt;), &lt;action&gt;" />

<MESSAGE 
	id1="MIB2D_SYSCTL_FAILURE" 
	id2="MIB2D_SYSCTL_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MIB2D SYSCTL FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="MIB2D_TRAP_HEADER_FAILURE" 
	id2="MIB2D_TRAP_HEADER_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:trap_request_header failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: trap_request_header failed" />

<MESSAGE 
	id1="MIB2D_TRAP_SEND_FAILURE" 
	id2="MIB2D_TRAP_SEND_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MIB2D TRAP SEND FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;service&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="Multiuser" 
	id2="Multiuser" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user sighupped&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: old requested_transition==&lt;change_new&gt; sighupped=&lt;result&gt;" />

<MESSAGE 
	id1="NASD_AUTHENTICATION_CREATE_FAILED" 
	id2="NASD_AUTHENTICATION_CREATE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to allocate authentication handle&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to allocate authentication handle: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_CHAP_AUTHENTICATION_IN_PROGRESS" 
	id2="NASD_CHAP_AUTHENTICATION_IN_PROGRESS" 
	eventcategory="1302000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:authentication already in progress&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;interface&gt;: received &lt;filename&gt;, authentication already in progress" />

<MESSAGE 
	id1="NASD_CHAP_GETHOSTNAME_FAILED" 
	id2="NASD_CHAP_GETHOSTNAME_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unable to obtain hostname for outgoing CHAP message&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;interface&gt;: unable to obtain hostname for outgoing CHAP message: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_CHAP_INVALID_CHAP_IDENTIFIER" 
	id2="NASD_CHAP_INVALID_CHAP_IDENTIFIER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHAP INVALID_CHAP IDENTIFIER&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;interface&gt;: received &lt;filename&gt; expected CHAP ID: &lt;resultcode&gt;" />

<MESSAGE 
	id1="NASD_CHAP_INVALID_OPCODE" 
	id2="NASD_CHAP_INVALID_OPCODE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHAP INVALID OPCODE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;interface&gt;.&lt;dclass_counter1&gt;: invalid operation code received &lt;filename&gt;, CHAP ID: &lt;resultcode&gt;" />

<MESSAGE 
	id1="NASD_CHAP_LOCAL_NAME_UNAVAILABLE" 
	id2="NASD_CHAP_LOCAL_NAME_UNAVAILABLE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to determine value for username in outgoing CHAP packet&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to determine value for &apos;&lt;username&gt;&apos; in outgoing CHAP packet" />

<MESSAGE 
	id1="NASD_CHAP_MESSAGE_UNEXPECTED" 
	id2="NASD_CHAP_MESSAGE_UNEXPECTED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHAP MESSAGE UNEXPECTED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;interface&gt;: received &lt;filename&gt;" />


 
<MESSAGE 
	id1="NASD_CHAP_REPLAY_ATTACK_DETECTED" 
	id2="NASD_CHAP_REPLAY_ATTACK_DETECTED" 
	eventcategory="1001020300" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHAP REPLAY ATTACK DETECTED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;ssid&gt;]: &lt;event_type&gt;: &lt;interface&gt;.&lt;dclass_counter1&gt;: received &lt;filename&gt; &lt;result&gt;.&lt;info&gt;" />

<MESSAGE 
	id1="NASD_CONFIG_GET_LAST_MODIFIED_FAILED" 
	id2="NASD_CONFIG_GET_LAST_MODIFIED_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to determine last modified time of JUNOS configuration database&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to determine last modified time of JUNOS configuration database: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_DAEMONIZE_FAILED" 
	id2="NASD_DAEMONIZE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unable to run in the background as a daemon&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;, unable to run in the background as a daemon: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_DB_ALLOC_FAILURE" 
	id2="NASD_DB_ALLOC_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to allocate database object&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to allocate database object: &lt;filename&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="NASD_DB_TABLE_CREATE_FAILURE" 
	id2="NASD_DB_TABLE_CREATE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DB TABLE CREATE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;filename&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="NASD_DUPLICATE" 
	id2="NASD_DUPLICATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Another copy of this program is running&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Another copy of this program is running" />

<MESSAGE 
	id1="NASD_EVLIB_CREATE_FAILURE" 
	id2="NASD_EVLIB_CREATE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:EVLIB CREATE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; with: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_EVLIB_EXIT_FAILURE" 
	id2="NASD_EVLIB_EXIT_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:EVLIB EXIT FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; value: &lt;result&gt;, error: &lt;resultcode&gt;" />

<MESSAGE 
	id1="NASD_LOCAL_CREATE_FAILED" 
	id2="NASD_LOCAL_CREATE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to allocate LOCAL module handle&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to allocate LOCAL module handle: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_NOT_ROOT" 
	id2="NASD_NOT_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NASD must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root " />

<MESSAGE 
	id1="NASD_PID_FILE_LOCK" 
	id2="NASD_PID_FILE_LOCK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to lock PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to lock PID file: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_PID_FILE_UPDATE" 
	id2="NASD_PID_FILE_UPDATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to update process PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to update process PID file: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_POST_CONFIGURE_EVENT_FAILED" 
	id2="NASD_POST_CONFIGURE_EVENT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:POST CONFIGURE EVENT FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_PPP_READ_FAILURE" 
	id2="NASD_PPP_READ_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PPP READ FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_PPP_SEND_FAILURE" 
	id2="NASD_PPP_SEND_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to send message&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to send message: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_PPP_SEND_PARTIAL" 
	id2="NASD_PPP_SEND_PARTIAL" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to send all of message&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to send all of message: &lt;resultcode&gt;" />

<MESSAGE 
	id1="NASD_PPP_UNRECOGNIZED" 
	id2="NASD_PPP_UNRECOGNIZED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unrecognized authentication protocol&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unrecognized authentication protocol: &lt;protocol&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_ALLOCATE_PASSWORD_FAILED" 
	id2="NASD_RADIUS_ALLOCATE_PASSWORD_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS password allocation failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; when allocating password for RADIUS: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_CONFIG_FAILED" 
	id2="NASD_RADIUS_CONFIG_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS CONFIG FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_CREATE_FAILED" 
	id2="NASD_RADIUS_CREATE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to allocate RADIUS module handle&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to allocate RADIUS module handle: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_CREATE_REQUEST_FAILED" 
	id2="NASD_RADIUS_CREATE_REQUEST_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS CREATE REQUEST FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_GETHOSTNAME_FAILED" 
	id2="NASD_RADIUS_GETHOSTNAME_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to obtain hostname for outgoing RADIUS message&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to obtain hostname for outgoing RADIUS message: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_MESSAGE_UNEXPECTED" 
	id2="NASD_RADIUS_MESSAGE_UNEXPECTED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unknown response from RADIUS server&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unknown response from RADIUS server: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_OPEN_FAILED" 
	id2="NASD_RADIUS_OPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS OPEN FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_SELECT_FAILED" 
	id2="NASD_RADIUS_SELECT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS SELECT FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_RADIUS_SET_TIMER_FAILED" 
	id2="NASD_RADIUS_SET_TIMER_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RADIUS SET TIMER FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_TRACE_FILE_OPEN_FAILED" 
	id2="NASD_TRACE_FILE_OPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TRACE FILE OPEN FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="NASD_usage" 
	id2="NASD_usage" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NASD Usage&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="NOTICE" 
	id2="NOTICE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;agent&gt;: &lt;event_type&gt;:&lt;action&gt;: &lt;event_description&gt;: The &lt;result&gt;" />

<MESSAGE 
	id1="PFE_FW_SYSLOG_IP"
	id2="PFE_FW_SYSLOG_IP"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PFE FW SYSLOG_IP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: FW: &lt;smacaddr&gt;   &lt;fld10&gt;  &lt;protocol&gt; &lt;saddr&gt; &lt;daddr&gt; &lt;sport&gt;    &lt;dport&gt; (&lt;packets&gt; packets) " />

<MESSAGE 
	id1="PFE_FW_SYSLOG_IP:01"
	id2="PFE_FW_SYSLOG_IP"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PFE FW SYSLOG_IP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;hostip&gt; &lt;hostname&gt;&lt;event_type&gt;: FW: &lt;smacaddr&gt;   &lt;fld10&gt;  &lt;protocol&gt; &lt;saddr&gt; &lt;daddr&gt; &lt;sport&gt;    &lt;dport&gt; (&lt;packets&gt; packets) " />
<MESSAGE 
	id1="PFE_NH_RESOLVE_THROTTLED"
	id2="PFE_NH_RESOLVE_THROTTLED"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Next-hop resolution requests throttled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Next-hop resolution requests from interface &lt;interface&gt; throttled" />

<MESSAGE 
	id1="PING_TEST_COMPLETED" 
	id2="PING_TEST_COMPLETED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PING TEST COMPLETED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pingCtlOwnerIndex = &lt;dclass_counter1&gt;, pingCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="PING_TEST_FAILED" 
	id2="PING_TEST_FAILED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PING TEST FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pingCtlOwnerIndex = &lt;dclass_counter1&gt;, pingCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="process_mode" 
	id2="process_mode" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:process_mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" { &lt;process&gt;[&lt;process_id&gt;]: | &lt;process&gt;: } { &lt;event_type&gt;: | &lt;event_type&gt; }  mode=&lt;protocol&gt; cmd=&lt;action&gt; master_mode=&lt;result&gt;" />

<MESSAGE 
	id1="process_mode:01" 
	id2="process_mode" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:process_mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: current_mode=&lt;protocol&gt;, requested_mode=&lt;result&gt;, cmd=&lt;action&gt;" />

<MESSAGE 
	id1="PWC_EXIT" 
	id2="PWC_EXIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:process exit with status&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; exiting with status &lt;result&gt;" />

<MESSAGE 
	id1="PWC_HOLD_RELEASE" 
	id2="PWC_HOLD_RELEASE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process released child from state&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; released child &lt;child_pid&gt; from &lt;dclass_counter1&gt; state" />

<MESSAGE 
	id1="PWC_INVALID_RUNS_ARGUMENT" 
	id2="PWC_INVALID_RUNS_ARGUMENT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:invalid runs argument&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt;, not &lt;resultcode&gt;" />

<MESSAGE 
	id1="PWC_INVALID_TIMEOUT_ARGUMENT" 
	id2="PWC_INVALID_TIMEOUT_ARGUMENT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:INVALID TIMEOUT ARGUMENT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_KILLED_BY_SIGNAL" 
	id2="PWC_KILLED_BY_SIGNAL" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:pwc process received terminating signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pwc process &lt;agent&gt; received terminating signal" />

<MESSAGE 
	id1="PWC_KILL_EVENT" 
	id2="PWC_KILL_EVENT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:pwc is sending kill event to child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pwc is sending &lt;resultcode&gt; to child &lt;child_pid&gt;" />

<MESSAGE 
	id1="PWC_KILL_FAILED" 
	id2="PWC_KILL_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to kill process&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to kill process &lt;child_pid&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_KQUEUE_ERROR" 
	id2="PWC_KQUEUE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:kevent failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: kevent failed: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_KQUEUE_INIT" 
	id2="PWC_KQUEUE_INIT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to create kqueue&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to create kqueue: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_KQUEUE_REGISTER_FILTER" 
	id2="PWC_KQUEUE_REGISTER_FILTER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to register kqueue filter&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to register kqueue filter: &lt;agent&gt; for purpose: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_LOCKFILE_BAD_FORMAT" 
	id2="PWC_LOCKFILE_BAD_FORMAT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PID lock file has bad format&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PID lock file has bad format: &lt;agent&gt;" />

<MESSAGE 
	id1="PWC_LOCKFILE_ERROR" 
	id2="PWC_LOCKFILE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PID lock file error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PID lock file had error: &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_LOCKFILE_MISSING" 
	id2="PWC_LOCKFILE_MISSING" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PID lock file not found&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PID lock file not found: &lt;agent&gt;" />

<MESSAGE 
	id1="PWC_LOCKFILE_NOT_LOCKED" 
	id2="PWC_LOCKFILE_NOT_LOCKED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PID lock file not locked&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PID lock file not locked: &lt;agent&gt;" />

<MESSAGE 
	id1="PWC_NO_PROCESS" 
	id2="PWC_NO_PROCESS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No process specified for PWC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No process specified" />

<MESSAGE 
	id1="PWC_PROCESS_EXIT" 
	id2="PWC_PROCESS_EXIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:pwc process exited with status&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pwc process &lt;agent&gt; child &lt;child_pid&gt; exited with status &lt;result&gt;" />

<MESSAGE 
	id1="PWC_PROCESS_FORCED_HOLD" 
	id2="PWC_PROCESS_FORCED_HOLD" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process forcing hold down of child until signalled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; forcing hold down of child &lt;child_pid&gt; until signal" />

<MESSAGE 
	id1="PWC_PROCESS_HOLD" 
	id2="PWC_PROCESS_HOLD" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process holding down child until signalled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; holding down child &lt;child_pid&gt; until signal" />

<MESSAGE 
	id1="PWC_PROCESS_HOLD_SKIPPED" 
	id2="PWC_PROCESS_HOLD_SKIPPED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process not holding down child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; will not down child &lt;child_pid&gt; because of &lt;result&gt;" />

<MESSAGE 
	id1="PWC_PROCESS_OPEN" 
	id2="PWC_PROCESS_OPEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to create child process with pidpopen&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to create child process with pidpopen: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_PROCESS_TIMED_HOLD" 
	id2="PWC_PROCESS_TIMED_HOLD" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Process holding down child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process &lt;agent&gt; holding down child &lt;child_pid&gt; &lt;result&gt;" />

<MESSAGE 
	id1="PWC_PROCESS_TIMEOUT" 
	id2="PWC_PROCESS_TIMEOUT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Child process timed out&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child timed out &lt;result&gt;" />

<MESSAGE 
	id1="PWC_SIGNAL_INIT" 
	id2="PWC_SIGNAL_INIT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:signal failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: signal(&lt;agent&gt;) failed: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_SOCKET_CONNECT" 
	id2="PWC_SOCKET_CONNECT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to connect socket to service&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to connect socket to &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_SOCKET_CREATE" 
	id2="PWC_SOCKET_CREATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Failed to create socket&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Failed to create socket: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_SOCKET_OPTION" 
	id2="PWC_SOCKET_OPTION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to set socket option&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to set socket option &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_STDOUT_WRITE" 
	id2="PWC_STDOUT_WRITE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Write to stdout failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Write to stdout failed: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_SYSTEM_CALL" 
	id2="PWC_SYSTEM_CALL" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PWC SYSTEM CALL&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="PWC_UNKNOWN_KILL_OPTION" 
	id2="PWC_UNKNOWN_KILL_OPTION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unknown kill option&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unknown kill option [&lt;agent&gt;]" />

<MESSAGE 
	id1="RMOPD_ADDRESS_MULTICAST_INVALID" 
	id2="RMOPD_ADDRESS_MULTICAST_INVALID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Multicast address not allowed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Multicast address is not allowed " />

<MESSAGE 
	id1="RMOPD_ADDRESS_SOURCE_INVALID" 
	id2="RMOPD_ADDRESS_SOURCE_INVALID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMOPD ADDRESS SOURCE INVALID&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Source address invalid: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_ADDRESS_STRING_FAILURE" 
	id2="RMOPD_ADDRESS_STRING_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to convert numeric address to string&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to convert numeric address to string: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_ADDRESS_TARGET_INVALID" 
	id2="RMOPD_ADDRESS_TARGET_INVALID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rmop_util_set_address status message invalid&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: rmop_util_set_address status message: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_DUPLICATE" 
	id2="RMOPD_DUPLICATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Another copy of this program is running&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Another copy of this program is running" />

<MESSAGE 
	id1="RMOPD_ICMP_ADDRESS_TYPE_UNSUPPORTED" 
	id2="RMOPD_ICMP_ADDRESS_TYPE_UNSUPPORTED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Only IPv4 source address is supported&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Only IPv4 source address is supported" />

<MESSAGE 
	id1="RMOPD_ICMP_SENDMSG_FAILURE" 
	id2="RMOPD_ICMP_SENDMSG_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No route to host&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;fld1&gt;: No route to host" />

<MESSAGE 
	id1="RMOPD_IFINDEX_NOT_ACTIVE" 
	id2="RMOPD_IFINDEX_NOT_ACTIVE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IFINDEX NOT ACTIVE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifindex: &lt;interface&gt;" />

<MESSAGE 
	id1="RMOPD_IFINDEX_NO_INFO" 
	id2="RMOPD_IFINDEX_NO_INFO" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IFINDEX NO INFO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No information for &lt;interface&gt;, message: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_IFNAME_NOT_ACTIVE" 
	id2="RMOPD_IFNAME_NOT_ACTIVE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMOPD IFNAME NOT ACTIVE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifname: &lt;interface&gt;" />

<MESSAGE 
	id1="RMOPD_IFNAME_NO_INFO" 
	id2="RMOPD_IFNAME_NO_INFO" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IFNAME NO INFO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No information for &lt;interface&gt;, message: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_NOT_ROOT" 
	id2="RMOPD_NOT_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMOPD Must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root " />

<MESSAGE 
	id1="RMOPD_ROUTING_INSTANCE_NO_INFO" 
	id2="RMOPD_ROUTING_INSTANCE_NO_INFO" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No information for routing instance&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No information for routing instance &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_TRACEROUTE_ERROR" 
	id2="RMOPD_TRACEROUTE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TRACEROUTE ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RMOPD_usage" 
	id2="RMOPD_usage" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMOPD usage&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="RPD_ABORT" 
	id2="RPD_ABORT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD ABORT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; version built by builder on &lt;dclass_counter1&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RPD_ACTIVE_TERMINATE" 
	id2="RPD_ACTIVE_TERMINATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD exiting with active tasks&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Exiting with active tasks: &lt;agent&gt;" />

<MESSAGE 
	id1="RPD_ASSERT" 
	id2="RPD_ASSERT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD Assertion failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Assertion failed &lt;resultcode&gt;: file &quot;&lt;filename&gt;&quot;, line &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="RPD_ASSERT_SOFT" 
	id2="RPD_ASSERT_SOFT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD Soft assertion failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Soft assertion failed &lt;resultcode&gt;: file &quot;&lt;filename&gt;&quot;, line &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="RPD_EXIT" 
	id2="RPD_EXIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD EXIT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; version built by builder on &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="RPD_IFL_INDEXCOLLISION" 
	id2="RPD_IFL_INDEXCOLLISION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Logical interface collision&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Logical interface collision -- &lt;result&gt;, &lt;info&gt;" />

<MESSAGE 
	id1="RPD_IFL_NAMECOLLISION" 
	id2="RPD_IFL_NAMECOLLISION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Logical interface collision&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Logical interface collision -- &lt;result&gt;, &lt;info&gt;" />

<MESSAGE 
	id1="RPD_ISIS_ADJDOWN" 
	id2="RPD_ISIS_ADJDOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IS-IS lost adjacency&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: IS-IS lost &lt;dclass_counter1&gt; adjacency to &lt;dclass_counter2&gt; on &lt;interface&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_ISIS_ADJUP" 
	id2="RPD_ISIS_ADJUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IS-IS new adjacency&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: IS-IS new &lt;dclass_counter1&gt; adjacency to &lt;dclass_counter2&gt; &lt;interface&gt;" />

<MESSAGE 
	id1="RPD_ISIS_ADJUPNOIP" 
	id2="RPD_ISIS_ADJUPNOIP" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IS-IS new adjacency without an address&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: IS-IS new &lt;dclass_counter1&gt; adjacency to &lt;dclass_counter2&gt; &lt;interface&gt; without an address" />

<MESSAGE 
	id1="RPD_ISIS_LSPCKSUM" 
	id2="RPD_ISIS_LSPCKSUM" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IS-IS LSP checksum error on iterface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: IS-IS &lt;dclass_counter1&gt; LSP checksum error, interface &lt;interface&gt;, LSP id &lt;id&gt;, sequence &lt;dclass_counter2&gt;, checksum &lt;resultcode&gt;, lifetime &lt;fld2&gt;" />

<MESSAGE 
	id1="RPD_ISIS_OVERLOAD" 
	id2="RPD_ISIS_OVERLOAD" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IS-IS database overload&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: IS-IS database overload" />

<MESSAGE 
	id1="RPD_KRT_AFUNSUPRT" 
	id2="RPD_KRT_AFUNSUPRT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:message with unsupported address family received&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;resultcode&gt;: received &lt;agent&gt; message with unsupported address family &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="RPD_KRT_CCC_IFL_MODIFY" 
	id2="RPD_KRT_CCC_IFL_MODIFY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD KRT CCC IFL MODIFY&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;, error" />

<MESSAGE 
	id1="RPD_KRT_DELETED_RTT" 
	id2="RPD_KRT_DELETED_RTT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:received deleted routing table from kernel&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: received deleted routing table from the kernel for family &lt;dclass_counter1&gt; table ID &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="RPD_KRT_IFA_GENERATION" 
	id2="RPD_KRT_IFA_GENERATION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifa generation mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifa generation mismatch -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_IFDCHANGE" 
	id2="RPD_KRT_IFDCHANGE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CHANGE for ifd failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; CHANGE for ifd &lt;interface&gt; failed, error &quot;&lt;result&gt;&quot;" />

<MESSAGE 
	id1="RPD_KRT_IFDEST_GET" 
	id2="RPD_KRT_IFDEST_GET" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:GET SERVICE failure on interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt; SERVICE: &lt;service&gt; for ifd &lt;interface&gt; failed, error &quot;&lt;result&gt;&quot;" />

<MESSAGE 
	id1="RPD_KRT_IFDGET" 
	id2="RPD_KRT_IFDGET" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:GET index for ifd interface failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; GET index for ifd interface failed, error &quot;&lt;result&gt;&quot;" />

<MESSAGE 
	id1="RPD_KRT_IFD_GENERATION" 
	id2="RPD_KRT_IFD_GENERATION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifd generation mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifd &lt;dclass_counter1&gt; generation mismatch -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_IFL_CELL_RELAY_MODE_INVALID" 
	id2="RPD_KRT_IFL_CELL_RELAY_MODE_INVALID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:KRT IFL CELL RELAY MODE INVALID&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifl : &lt;agent&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_IFL_CELL_RELAY_MODE_UNSPECIFIED" 
	id2="RPD_KRT_IFL_CELL_RELAY_MODE_UNSPECIFIED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:KRT IFL CELL RELAY MODE UNSPECIFIED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifl : &lt;agent&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_IFL_GENERATION" 
	id2="RPD_KRT_IFL_GENERATION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifl generation mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifl &lt;interface&gt; generation mismatch -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_KERNEL_BAD_ROUTE" 
	id2="RPD_KRT_KERNEL_BAD_ROUTE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:lost interface for route&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: lost &lt;interface&gt; &lt;dclass_counter1&gt; for route &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="RPD_KRT_NEXTHOP_OVERFLOW" 
	id2="RPD_KRT_NEXTHOP_OVERFLOW" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:number of next hops exceeded the maximum&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: number of next hops (&lt;dclass_counter1&gt;) exceeded the maximum allowed (&lt;dclass_counter2&gt;) -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_NOIFD" 
	id2="RPD_KRT_NOIFD" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No device for interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No device &lt;dclass_counter1&gt; for interface &lt;interface&gt;" />

<MESSAGE 
	id1="RPD_KRT_UNKNOWN_RTT" 
	id2="RPD_KRT_UNKNOWN_RTT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:received routing table message for unknown table&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: received routing table message for unknown table with kernel ID &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="RPD_KRT_VERSION" 
	id2="RPD_KRT_VERSION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Routing socket version mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Routing socket version mismatch (&lt;info&gt;) -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_VERSIONNONE" 
	id2="RPD_KRT_VERSIONNONE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Routing socket message type not supported by kernel&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Routing socket message type &lt;agent&gt;&apos;s version is not supported by kernel, &lt;info&gt; -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_KRT_VERSIONOLD" 
	id2="RPD_KRT_VERSIONOLD" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Routing socket message type version is older than expected&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Routing socket message type &lt;agent&gt;&apos;s version is older than expected (&lt;info&gt;) -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_INTF_BLOCKED" 
	id2="RPD_LDP_INTF_BLOCKED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Duplicate session ID detected&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Duplicate session ID detected from &lt;daddr&gt;, interface &lt;interface&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_INTF_UNBLOCKED" 
	id2="RPD_LDP_INTF_UNBLOCKED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDP interface now unblocked&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: LDP interface &lt;interface&gt; is now &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_NBRDOWN" 
	id2="RPD_LDP_NBRDOWN" 
	eventcategory="1603030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDP neighbor down&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: LDP neighbor &lt;daddr&gt; (&lt;interface&gt;) is &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_NBRUP" 
	id2="RPD_LDP_NBRUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDP neighbor up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: LDP neighbor &lt;daddr&gt; (&lt;interface&gt;) is &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_SESSIONDOWN" 
	id2="RPD_LDP_SESSIONDOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDP session down&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: LDP session &lt;daddr&gt; is down, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LDP_SESSIONUP" 
	id2="RPD_LDP_SESSIONUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LDP session up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: LDP session &lt;daddr&gt; is up" />

<MESSAGE 
	id1="RPD_LOCK_FLOCKED" 
	id2="RPD_LOCK_FLOCKED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to obtain a lock&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to obtain a lock on &lt;agent&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_LOCK_LOCKED" 
	id2="RPD_LOCK_LOCKED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to obtain service lock&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to obtain a lock on &lt;agent&gt;, &lt;result&gt;" />

<MESSAGE 
	id1="RPD_MPLS_LSP_CHANGE" 
	id2="RPD_MPLS_LSP_CHANGE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MPLS LSP CHANGE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MPLS LSP &lt;interface&gt; &lt;result&gt; Route &lt;info&gt;" />

<MESSAGE 
	id1="RPD_MPLS_LSP_DOWN" 
	id2="RPD_MPLS_LSP_DOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MPLS LSP DOWN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MPLS LSP &lt;interface&gt; &lt;result&gt; " />

<MESSAGE 
	id1="RPD_MPLS_LSP_SWITCH" 
	id2="RPD_MPLS_LSP_SWITCH" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MPLS LSP SWITCH&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MPLS LSP &lt;interface&gt; &lt;result&gt;, Route &lt;info&gt; " />

<MESSAGE 
	id1="RPD_MPLS_LSP_UP" 
	id2="RPD_MPLS_LSP_UP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MPLS LSP UP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MPLS LSP &lt;interface&gt; &lt;result&gt; Route &lt;info&gt; " />

<MESSAGE 
	id1="RPD_MSDP_PEER_DOWN" 
	id2="RPD_MSDP_PEER_DOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MSDP PEER DOWN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MSDP peer &lt;group&gt; &lt;result&gt;" />

<MESSAGE 
	id1="RPD_MSDP_PEER_UP" 
	id2="RPD_MSDP_PEER_UP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MSDP PEER UP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: MSDP peer &lt;group&gt; &lt;result&gt;" />

<MESSAGE 
	id1="RPD_OSPF_NBRDOWN" 
	id2="RPD_OSPF_NBRDOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:OSPF neighbor down&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: OSPF neighbor &lt;daddr&gt; (&lt;interface&gt;) &lt;disposition&gt; due to &lt;result&gt;" />

<MESSAGE 
	id1="RPD_OSPF_NBRUP" 
	id2="RPD_OSPF_NBRUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:OSPF neighbor up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: OSPF neighbor &lt;daddr&gt; (&lt;interface&gt;) &lt;disposition&gt; due to &lt;result&gt;" />

<MESSAGE 
	id1="RPD_OS_MEMHIGH" 
	id2="RPD_OS_MEMHIGH" 
	eventcategory="1603020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:OS MEMHIGH&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Using &lt;dclass_counter1&gt; KB of memory, &lt;info&gt;" />

<MESSAGE 
	id1="RPD_PIM_NBRDOWN" 
	id2="RPD_PIM_NBRDOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PIM neighbor down&gt;&lt;@result:timeout&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PIM neighbor &lt;daddr&gt; timeout interface &lt;interface&gt;" />

<MESSAGE 
	id1="RPD_PIM_NBRUP" 
	id2="RPD_PIM_NBRUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:PIM neighbor up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: PIM new neighbor &lt;daddr&gt; interface &lt;interface&gt;" />

<MESSAGE 
	id1="RPD_RDISC_CKSUM" 
	id2="RPD_RDISC_CKSUM" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Bad checksum for router solicitation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Bad checksum for router solicitation from &lt;saddr&gt; to &lt;daddr&gt;" />

<MESSAGE 
	id1="RPD_RDISC_NOMULTI" 
	id2="RPD_RDISC_NOMULTI" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Ignoring interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Ignoring interface &lt;dclass_counter1&gt; on &lt;interface&gt; -- &lt;result&gt;" />

<MESSAGE 
	id1="RPD_RDISC_NORECVIF" 
	id2="RPD_RDISC_NORECVIF" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to locate interface for router&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to locate interface for router solicitation from &lt;saddr&gt; to &lt;daddr&gt;" />

<MESSAGE 
	id1="RPD_RDISC_SOLICITADDR" 
	id2="RPD_RDISC_SOLICITADDR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Expected multicast for router solicitation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Expected multicast (&lt;dclass_counter1&gt;) for router solicitation from &lt;saddr&gt; to &lt;daddr&gt;" />

<MESSAGE 
	id1="RPD_RDISC_SOLICITICMP" 
	id2="RPD_RDISC_SOLICITICMP" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Nonzero ICMP code for router solicitation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Nonzero ICMP code (&lt;resultcode&gt;) for router solicitation from &lt;saddr&gt; to &lt;daddr&gt;" />

<MESSAGE 
	id1="RPD_RDISC_SOLICITLEN" 
	id2="RPD_RDISC_SOLICITLEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Insufficient length for router solicitation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Insufficient length (&lt;dclass_counter1&gt;) for router solicitation from &lt;saddr&gt; to &lt;daddr&gt;" />

<MESSAGE 
	id1="RPD_RIP_AUTH" 
	id2="RPD_RIP_AUTH" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RIP update with invalid authentication&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Update with invalid authentication from &lt;saddr&gt; (&lt;interface&gt;)" />

<MESSAGE 
	id1="RPD_RIP_JOIN_BROADCAST" 
	id2="RPD_RIP_JOIN_BROADCAST" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RIP - unable to get broadcast address&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to get broadcast address &lt;interface&gt;; &lt;result&gt;" />

<MESSAGE 
	id1="RPD_RIP_JOIN_MULTICAST" 
	id2="RPD_RIP_JOIN_MULTICAST" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RIP - Unable to join multicast group&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to join multicast group &lt;interface&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RPD_RT_IFUP" 
	id2="RPD_RT_IFUP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RIP interface up&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: UP route for interface &lt;interface&gt; index &lt;dclass_counter1&gt; &lt;saddr&gt;/&lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="RPD_SCHED_CALLBACK_LONGRUNTIME" 
	id2="RPD_SCHED_CALLBACK_LONGRUNTIME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:excessive runtime time during action of module&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: excessive runtime time during action of module" />

<MESSAGE 
	id1="RPD_SCHED_CUMULATIVE_LONGRUNTIME" 
	id2="RPD_SCHED_CUMULATIVE_LONGRUNTIME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:excessive runtime after action of module&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: excessive runtime (&lt;result&gt;) after action of module" />

<MESSAGE 
	id1="RPD_SCHED_MODULE_LONGRUNTIME" 
	id2="RPD_SCHED_MODULE_LONGRUNTIME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:excessive runtime time during action of module&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: excessive runtime time during action of module" />

<MESSAGE 
	id1="RPD_SCHED_TASK_LONGRUNTIME" 
	id2="RPD_SCHED_TASK_LONGRUNTIME" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:task extended runtime&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; ran for &lt;dclass_counter1&gt;(&lt;dclass_counter2&gt;)" />

<MESSAGE 
	id1="RPD_SIGNAL_TERMINATE" 
	id2="RPD_SIGNAL_TERMINATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:termination signal received for service&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; termination signal received" />

<MESSAGE 
	id1="RPD_START" 
	id2="RPD_START" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:version built&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Start &lt;dclass_counter1&gt; version version built &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="RPD_SYSTEM" 
	id2="RPD_SYSTEM" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:system command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: detail: &lt;action&gt;" />

<MESSAGE 
	id1="RPD_TASK_BEGIN" 
	id2="RPD_TASK_BEGIN" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Commencing routing updates&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Commencing routing updates, version &lt;dclass_counter1&gt;, built &lt;dclass_counter2&gt; by builder" />

<MESSAGE 
	id1="RPD_TASK_CHILDKILLED" 
	id2="RPD_TASK_CHILDKILLED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:task killed by signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;dclass_counter2&gt; &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_CHILDSTOPPED" 
	id2="RPD_TASK_CHILDSTOPPED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:task stopped by signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;dclass_counter2&gt; &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_FORK" 
	id2="RPD_TASK_FORK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to fork task&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to fork task: &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_GETWD" 
	id2="RPD_TASK_GETWD" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD TASK GETWD&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: getwd: &lt;action&gt;" />

<MESSAGE 
	id1="RPD_TASK_NOREINIT" 
	id2="RPD_TASK_NOREINIT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Reinitialization not possible&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reinitialization not possible" />

<MESSAGE 
	id1="RPD_TASK_PIDCLOSED" 
	id2="RPD_TASK_PIDCLOSED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to close and remove task&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to close and remove &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_PIDFLOCK" 
	id2="RPD_TASK_PIDFLOCK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RPD TASK PIDFLOCK&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: flock(&lt;agent&gt;, &lt;action&gt;): &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_PIDWRITE" 
	id2="RPD_TASK_PIDWRITE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to write&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to write &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="RPD_TASK_REINIT" 
	id2="RPD_TASK_REINIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Reinitializing&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reinitializing" />

<MESSAGE 
	id1="RPD_TASK_SIGNALIGNORE" 
	id2="RPD_TASK_SIGNALIGNORE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ignoring task signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: sigaction(&lt;result&gt;): &lt;resultcode&gt;" />

<MESSAGE 
	id1="RT_COS" 
	id2="RT_COS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:COS IPC op failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: COS IPC op &lt;dclass_counter1&gt; (&lt;agent&gt;) failed, err &lt;resultcode&gt; (&lt;result&gt;)" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CREATE:02"
	id2="RT_FLOW_SESSION_CREATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Create&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; {destination-port=&quot;&lt;dport&gt;&quot; connection-tag=&lt;fld20&gt;|destination-port=&quot;&lt;dport&gt;&quot;} service-name=&quot;&lt;fld5&gt;&quot; nat-source-address=&quot;&lt;stransaddr&gt;&quot; nat-source-port=&quot;&lt;stransport&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; {nat-destination-port=&quot;&lt;dtransport&gt;&quot; nat-connection-tag=&lt;fld6&gt; src-nat-rule-type=&lt;fld20&gt; |nat-destination-port=&quot;&lt;dtransport&gt;&quot;} src-nat-rule-name=&quot;&lt;fld10&gt;&quot; {dst-nat-rule-type=&lt;fld21&gt; dst-nat-rule-name=&quot;&lt;fld11&gt;&quot;|dst-nat-rule-name=&quot;&lt;fld11&gt;&quot;} protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;fld13&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;fld15&gt;&quot; {packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; encrypted=&lt;fld8&gt; |packet-incoming-interface=&quot;&lt;dinterface&gt;&quot;}]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CREATE"
	id2="RT_FLOW_SESSION_CREATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Create&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; {destination-port=&quot;&lt;dport&gt;&quot; service-name=&quot;&lt;service&gt;&quot; nat-source-address=&quot;&lt;stransaddr&gt;&quot; nat-source-port=&quot;&lt;stransport&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; src-nat-rule-type=&quot;&lt;fld20&gt;&quot; src-nat-rule-name=&quot;&lt;rulename&gt;&quot; dst-nat-rule-type=&quot;&lt;fld10&gt;&quot; dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot; | destination-port=&quot;&lt;dport&gt;&quot;} protocol-id=&quot;&lt;protocol&gt;&quot; { policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;fld50&gt;&quot; packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; application=&quot;&lt;application&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; encrypted=&quot;&lt;fld8&gt;&quot;| policy-name=&quot;&lt;policyname&gt;&quot;}]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CREATE:01"
	id2="RT_FLOW_SESSION_CREATE"
	eventcategory="1801020000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Create&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:session created&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" {&lt;process&gt;: &lt;event_type&gt;: session created | &lt;event_type&gt;: session created} &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;fld20&gt; &lt;hostip&gt;/&lt;network_port&gt;-&gt;&lt;dtransaddr&gt;/&lt;dtransport&gt; { &lt;rulename&gt; &lt;rule_template&gt; &lt;fld12&gt; &lt;fld13&gt; &lt;fld14&gt; &lt;policyname&gt; &lt;src_zone&gt; &lt;dst_zone&gt; &lt;sessionid&gt; &lt;username&gt;(&lt;fld10&gt;) &lt;interface&gt; &lt;protocol&gt; &lt;fld15&gt; UNKNOWN UNKNOWN | &lt;rulename&gt; &lt;rule_template&gt; &lt;fld12&gt; &lt;fld13&gt; &lt;fld14&gt; &lt;policyname&gt; &lt;src_zone&gt; &lt;dst_zone&gt; &lt;sessionid&gt; &lt;username&gt;(&lt;fld10&gt;) &lt;interface&gt; &lt;fld15&gt; | &lt;info&gt; }" />

<MESSAGE 
	id1="RT_FLOW_SESSION_DENY:02"
	id2="RT_FLOW_SESSION_DENY"
	eventcategory="1803010000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Deny&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; {destination-port=&quot;&lt;dport&gt;&quot; connection-tag=&lt;fld20&gt;|destination-port=&quot;&lt;dport&gt;&quot;} service-name=&quot;&lt;fld5&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; icmp-type=&quot;&lt;obj_type&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot; {packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; encrypted=&quot;&lt;fld16&gt;&quot; reason=&quot;&lt;result&gt;&quot; src-vrf-grp=&quot;&lt;fld99&gt;&quot; dst-vrf-grp=&quot;&lt;fld98&gt;&quot;|packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; encrypted=&lt;fld16&gt; reason=&quot;&lt;result&gt;&quot;|packet-incoming-interface=&quot;&lt;dinterface&gt;&quot;}]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_DENY"
	id2="RT_FLOW_SESSION_DENY"
	eventcategory="1803010000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Deny&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; icmp-type=&quot;&lt;obj_type&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot;]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_DENY:03"
	id2="RT_FLOW_SESSION_DENY"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Deny&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:session denied&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" {&lt;process&gt;: &lt;event_type&gt;: session denied | &lt;event_type&gt;: session denied} &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;fld20&gt; &lt;fld1&gt; &lt;result&gt; &lt;src_zone&gt; &lt;dst_zone&gt; HTTP &lt;info&gt;" />

<MESSAGE 
	id1="RT_FLOW_SESSION_DENY:01"
	id2="RT_FLOW_SESSION_DENY"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Deny&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:session denied&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" {&lt;process&gt;: &lt;event_type&gt;: session denied | &lt;event_type&gt;: session denied} &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;fld20&gt; &lt;fld1&gt; &lt;result&gt; &lt;src_zone&gt; &lt;dst_zone&gt;" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CLOSE:01"
	id2="RT_FLOW_SESSION_CLOSE"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@dclass_counter1_string:No.of packets from client&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; reason=&quot;&lt;result&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; {destination-port=&quot;&lt;dport&gt;&quot; connection-tag=&lt;fld20&gt;|destination-port=&quot;&lt;dport&gt;&quot;} service-name=&quot;&lt;service&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; {nat-destination-port=&quot;&lt;dtransport&gt;&quot; nat-connection-tag=&lt;fld6&gt; src-nat-rule-type=&lt;fld20&gt; |nat-destination-port=&quot;&lt;dtransport&gt;&quot;} src-nat-rule-name=&quot;&lt;rulename&gt;&quot; {dst-nat-rule-type=&lt;fld7&gt; dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot;|dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot;} protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; packets-from-client=&quot;&lt;packets&gt;&quot; bytes-from-client=&quot;&lt;rbytes&gt;&quot; packets-from-server=&quot;&lt;dclass_counter1&gt;&quot; bytes-from-server=&quot;&lt;sbytes&gt;&quot; {elapsed-time=&quot;&lt;duration&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;fld15&gt;&quot; packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; encrypted=&lt;fld16&gt; |elapsed-time=&quot;&lt;duration&gt;&quot;}]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CLOSE"
	id2="RT_FLOW_SESSION_CLOSE"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; reason=&quot;&lt;result&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; inbound-packets=&quot;&lt;packets&gt;&quot; inbound-bytes=&quot;&lt;rbytes&gt;&quot; outbound-packets=&quot;&lt;dclass_counter1&gt;&quot; outbound-bytes=&quot;&lt;sbytes&gt;&quot; elapsed-time=&quot;&lt;duration&gt;&quot;]" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CLOSE:02"
	id2="RT_FLOW_SESSION_CLOSE"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:session closed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" {&lt;process&gt;: &lt;event_type&gt;: session closed | &lt;event_type&gt;: session closed} &lt;result&gt;: &lt;saddr&gt;/&lt;sport&gt;-&gt;&lt;daddr&gt;/&lt;dport&gt; &lt;fld20&gt; &lt;hostip&gt;/&lt;network_port&gt;-&gt;&lt;dtransaddr&gt;/&lt;dtransport&gt; &lt;info&gt;" />

<MESSAGE 
	id1="RT_FLOW_SESSION_CLOSE:03"
	id2="RT_FLOW_SESSION_CLOSE"
	eventcategory="1801030000"
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_activity:Stop&gt;&lt;@dclass_counter1_string:No.of packets from client&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; reason=&quot;&lt;result&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; {destination-port=&quot;&lt;dport&gt;&quot; connection-tag=&lt;fld20&gt;|destination-port=&quot;&lt;dport&gt;&quot;} service-name=&quot;&lt;service&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; {nat-destination-port=&quot;&lt;dtransport&gt;&quot; nat-connection-tag=&lt;fld6&gt; src-nat-rule-type=&lt;fld20&gt; |nat-destination-port=&quot;&lt;dtransport&gt;&quot;} src-nat-rule-name=&quot;&lt;rulename&gt;&quot; {dst-nat-rule-type=&lt;fld7&gt; dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot;|dst-nat-rule-name=&quot;&lt;rule_template&gt;&quot;} protocol-id=&quot;&lt;protocol&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; packets-from-client=&quot;&lt;packets&gt;&quot; bytes-from-client=&quot;&lt;rbytes&gt;&quot; packets-from-server=&quot;&lt;dclass_counter1&gt;&quot; bytes-from-server=&quot;&lt;sbytes&gt;&quot; { elapsed-time=&quot;&lt;duration&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;fld15&gt;&quot; packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; encrypted=&lt;fld16&gt; | elapsed-time=&quot;&lt;duration&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot; packet-incoming-interface=&quot;&lt;dinterface&gt;&quot; |elapsed-time=&quot;&lt;duration&gt;&quot;}] session closed &lt;fld60&gt;: &lt;fld51&gt;/&lt;fld52&gt;-&gt;&lt;fld53&gt;/&lt;fld54&gt; &lt;fld55&gt; &lt;fld56&gt;/&lt;fld57&gt;-&gt;&lt;fld58&gt;/&lt;fld59&gt; &lt;info&gt;" />

<MESSAGE 
	id1="RT_SCREEN_IP" 
	id2="RT_SCREEN_IP" 
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Fragmented traffic&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: Fragmented traffic! source:&lt;saddr&gt;, destination: &lt;daddr&gt;, protocol-id: &lt;protocol&gt;, zone name: &lt;zone&gt;, interface name: &lt;interface&gt;" />

<MESSAGE
	id1="RT_SCREEN_IP:01"
	id2="RT_SCREEN_IP"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; attack-name=&quot;&lt;threat_name&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot; action=&quot;&lt;action&gt;&quot;]" />
 
<MESSAGE
	id1="RT_SCREEN_TCP"
	id2="RT_SCREEN_TCP"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; attack-name=&quot;&lt;threat_name&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot; action=&quot;&lt;action&gt;&quot;]" />
 
<MESSAGE
	id1="RT_SCREEN_SESSION_LIMIT"
	id2="RT_SCREEN_SESSION_LIMIT"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; attack-name=&quot;&lt;threat_name&gt;&quot; message=&quot;&lt;info&gt;&quot; ip-address=&quot;&lt;hostip&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot; action=&quot;&lt;action&gt;&quot;]" />
  
<MESSAGE
	id1="RT_SCREEN_UDP"
	id2="RT_SCREEN_UDP"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; attack-name=&quot;&lt;threat_name&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot; action=&quot;&lt;action&gt;&quot;]" />

<MESSAGE 
	id1="SERVICED_CLIENT_CONNECT" 
	id2="SERVICED_CLIENT_CONNECT" 
	eventcategory="1801030000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:attempt to connect to interface failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: attempt to connect to interface failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_CLIENT_DISCONNECTED" 
	id2="SERVICED_CLIENT_DISCONNECTED" 
	eventcategory="1801030000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unexpected termination of connection&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: unexpected termination of connection to interface" />

<MESSAGE 
	id1="SERVICED_CLIENT_ERROR" 
	id2="SERVICED_CLIENT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:client interface connection failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: client interface connection failure: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_COMMAND_FAILED" 
	id2="SERVICED_COMMAND_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:remote command execution failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: remote command execution failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_COMMIT_FAILED" 
	id2="SERVICED_COMMIT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:client commit configuration failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: client failed to commit configuration with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_CONFIGURATION_FAILED" 
	id2="SERVICED_CONFIGURATION_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:configuration process failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: configuration process failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_CONFIG_ERROR" 
	id2="SERVICED_CONFIG_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SERVICED CONFIG ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_CONFIG_FILE" 
	id2="SERVICED_CONFIG_FILE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:service failed to read path&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;dclass_counter2&gt; failed to read path with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_CONNECTION_ERROR" 
	id2="SERVICED_CONNECTION_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SERVICED CONNECTION ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_DISABLED_GGSN" 
	id2="SERVICED_DISABLED_GGSN" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:GGSN services disabled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: GGSN services disabled: object: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_DUPLICATE" 
	id2="SERVICED_DUPLICATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Another copy of this program is running&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Another copy of this program is running" />

<MESSAGE 
	id1="SERVICED_EVENT_FAILED" 
	id2="SERVICED_EVENT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:event function failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: event function &lt;dclass_counter2&gt; failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_INIT_FAILED" 
	id2="SERVICED_INIT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:service initialization failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: initialization failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_MALLOC_FAILURE" 
	id2="SERVICED_MALLOC_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:memory allocation failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: failed to allocate [&lt;dclass_counter2&gt;] object [&lt;dclass_counter1&gt; bytes &lt;bytes&gt;]: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_NETWORK_FAILURE" 
	id2="SERVICED_NETWORK_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:NETWORK FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;dclass_counter2&gt; had error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_NOT_ROOT" 
	id2="SERVICED_NOT_ROOT" 
	eventcategory="1401050200" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SERVICED must be run as root&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Must be run as root" />

<MESSAGE 
	id1="SERVICED_PID_FILE_LOCK" 
	id2="SERVICED_PID_FILE_LOCK" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to lock PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to lock PID file: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_PID_FILE_UPDATE" 
	id2="SERVICED_PID_FILE_UPDATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to update process PID file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to update process PID file: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_RTSOCK_SEQUENCE" 
	id2="SERVICED_RTSOCK_SEQUENCE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:routing socket sequence error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: routing socket sequence error, &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_SIGNAL_HANDLER" 
	id2="SERVICED_SIGNAL_HANDLER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:set up of signal name handler failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: set up of signal name handler failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_SOCKET_CREATE" 
	id2="SERVICED_SOCKET_CREATE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:socket create failed with error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: socket create failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_SOCKET_IO" 
	id2="SERVICED_SOCKET_IO" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:socket function failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: socket function &lt;dclass_counter2&gt; failed with error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_SOCKET_OPTION" 
	id2="SERVICED_SOCKET_OPTION" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unable to set socket option&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: unable to set socket option &lt;dclass_counter2&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_STDLIB_FAILURE" 
	id2="SERVICED_STDLIB_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:STDLIB FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;dclass_counter2&gt; had error: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_USAGE" 
	id2="SERVICED_USAGE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Incorrect service usage&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Incorrect usage: &lt;result&gt;" />

<MESSAGE 
	id1="SERVICED_WORK_INCONSISTENCY" 
	id2="SERVICED_WORK_INCONSISTENCY" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:object has unexpected value&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: object has unexpected value &lt;result&gt;" />

<MESSAGE 
	id1="SSL_PROXY_SSL_SESSION_ALLOW"
	id2="SSL_PROXY_SSL_SESSION_ALLOW"
	eventcategory="1801030000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; logical-system-name=&quot;&lt;hostname&gt;&quot; session-id=&quot;&lt;sessionid&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; profile-name=&quot;&lt;rulename&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; source-interface-name=&quot;&lt;sinterface&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; destination-interface-name=&quot;&lt;dinterface&gt;&quot; message=&quot;&lt;info&gt;&quot;]" />

<MESSAGE 
	id1="SSL_PROXY_SSL_SESSION_DROP"
	id2="SSL_PROXY_SSL_SESSION_DROP"
	eventcategory="1801030000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; logical-system-name=&quot;&lt;hostname&gt;&quot; session-id=&quot;&lt;sessionid&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; profile-name=&quot;&lt;rulename&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; source-interface-name=&quot;&lt;sinterface&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; destination-interface-name=&quot;&lt;dinterface&gt;&quot; message=&quot;&lt;info&gt;&quot;]" />

<MESSAGE 
	id1="SSL_PROXY_SESSION_IGNORE"
	id2="SSL_PROXY_SESSION_IGNORE"
	eventcategory="1801030000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; logical-system-name=&quot;&lt;hostname&gt;&quot; session-id=&quot;&lt;sessionid&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; profile-name=&quot;&lt;rulename&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; source-interface-name=&quot;&lt;sinterface&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; destination-interface-name=&quot;&lt;dinterface&gt;&quot; message=&quot;&lt;info&gt;&quot;]" />

<MESSAGE 
	id1="SNMP_NS_LOG_INFO" 
	id2="SNMP_NS_LOG_INFO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:AgentX subagent connected&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: NET-SNMP version &lt;version&gt; AgentX subagent connected" />

<MESSAGE 
	id1="SNMP_SUBAGENT_IPC_REG_ROWS" 
	id2="SNMP_SUBAGENT_IPC_REG_ROWS" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ns_subagent registering rows&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ns_subagent_register_mibs: registering &lt;dclass_counter1&gt; rows" />

<MESSAGE 
	id1="SNMPD_ACCESS_GROUP_ERROR" 
	id2="SNMPD_ACCESS_GROUP_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD ACCESS GROUP ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; in &lt;dclass_counter1&gt; access group &lt;group&gt;" />

<MESSAGE 
	id1="SNMPD_AUTH_FAILURE" 
	id2="SNMPD_AUTH_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD AUTH FAILURE&gt;&lt;@result:unauthorized SNMP community to unknown community name&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: unauthorized SNMP community from &lt;daddr&gt; to unknown community name (&lt;pool_name&gt;)" />

<MESSAGE 
	id1="SNMPD_AUTH_FAILURE:01" 
	id2="SNMPD_AUTH_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD AUTH FAILURE&gt;&lt;@result:failed input interface authorization to unknown&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: failed input interface authorization from &lt;daddr&gt; to unknown (&lt;pool_name&gt;)" />

<MESSAGE 
	id1="SNMPD_AUTH_FAILURE:02" 
	id2="SNMPD_AUTH_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD AUTH FAILURE&gt;&lt;@result:unauthorized SNMP community &gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: unauthorized SNMP community from &lt;daddr&gt; to &lt;saddr&gt; (&lt;pool_name&gt;)" />

<MESSAGE 
	id1="SNMPD_AUTH_PRIVILEGES_EXCEEDED" 
	id2="SNMPD_AUTH_PRIVILEGES_EXCEEDED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP request exceeded community privileges&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;saddr&gt;: request exceeded community privileges" />

<MESSAGE 
	id1="SNMPD_AUTH_RESTRICTED_ADDRESS" 
	id2="SNMPD_AUTH_RESTRICTED_ADDRESS" 
	eventcategory="1605020000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD AUTH RESTRICTED ADDRESS&gt;&lt;@result:request not allowed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: request from address &lt;daddr&gt; not allowed" />

<MESSAGE 
	id1="SNMPD_AUTH_WRONG_PDU_TYPE" 
	id2="SNMPD_AUTH_WRONG_PDU_TYPE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unauthorized SNMP PDU type&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;saddr&gt;: unauthorized SNMP PDU type: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_CONFIG_ERROR" 
	id2="SNMPD_CONFIG_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Configuration database has errors&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Configuration database has errors" />

<MESSAGE 
	id1="SNMPD_CONTEXT_ERROR" 
	id2="SNMPD_CONTEXT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD CONTEXT ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; in &lt;dclass_counter1&gt; context &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="SNMPD_ENGINE_FILE_FAILURE" 
	id2="SNMPD_ENGINE_FILE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD ENGINE FILE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;dclass_counter2&gt;: operation: &lt;dclass_counter1&gt; &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_ENGINE_PROCESS_ERROR" 
	id2="SNMPD_ENGINE_PROCESS_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description: from-path - SNMP undecodable/unmatched subagent response&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: from-path: undecodable/unmatched subagent response" />

<MESSAGE 
	id1="SNMPD_FILE_FAILURE" 
	id2="SNMPD_FILE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD FILE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: fopen &lt;dclass_counter2&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_GROUP_ERROR" 
	id2="SNMPD_GROUP_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD GROUP ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; in &lt;dclass_counter1&gt; group: &apos;&lt;group&gt;&apos; user &apos;&lt;username&gt;&apos; model &apos;&lt;version&gt;&apos;" />

<MESSAGE 
	id1="SNMPD_INIT_FAILED" 
	id2="SNMPD_INIT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:snmpd initialization failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: snmpd initialization failure: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_LIBJUNIPER_FAILURE" 
	id2="SNMPD_LIBJUNIPER_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LIBJUNIPER FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: system_default_inaddr: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_LOOPBACK_ADDR_ERROR" 
	id2="SNMPD_LOOPBACK_ADDR_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LOOPBACK ADDR ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; " />

<MESSAGE 
	id1="SNMPD_MEMORY_FREED" 
	id2="SNMPD_MEMORY_FREED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:duplicate memory free&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: called for freed - already freed" />

<MESSAGE 
	id1="SNMPD_RADIX_FAILURE" 
	id2="SNMPD_RADIX_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:radix_add failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: radix_add failed: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RECEIVE_FAILURE" 
	id2="SNMPD_RECEIVE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD RECEIVE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: receive &lt;dclass_counter1&gt; failure: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RMONFILE_FAILURE" 
	id2="SNMPD_RMONFILE_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMONFILE FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;dclass_counter2&gt;: operation: &lt;dclass_counter1&gt; &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RMON_COOKIE" 
	id2="SNMPD_RMON_COOKIE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Null cookie&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: Null cookie" />

<MESSAGE 
	id1="SNMPD_RMON_EVENTLOG" 
	id2="SNMPD_RMON_EVENTLOG" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:RMON EVENTLOG&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RMON_IOERROR" 
	id2="SNMPD_RMON_IOERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received io error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: Received io error, &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RMON_MIBERROR" 
	id2="SNMPD_RMON_MIBERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:internal Get request error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: internal Get request error: description, &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_RTSLIB_ASYNC_EVENT" 
	id2="SNMPD_RTSLIB_ASYNC_EVENT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:sequence mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: sequence mismatch &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_SEND_FAILURE" 
	id2="SNMPD_SEND_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:send send-type (index1) failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: send send-type (index1) failure: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_SEND_FAILURE:01" 
	id2="SNMPD_SEND_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:send send-type (index1) failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: send to (&lt;saddr&gt;) failure: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_SOCKET_FAILURE" 
	id2="SNMPD_SOCKET_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD SOCKET FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: socket failure: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_SUBAGENT_NO_BUFFERS" 
	id2="SNMPD_SUBAGENT_NO_BUFFERS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:No buffers available for subagent&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: No buffers available for subagent (&lt;agent&gt;)" />

<MESSAGE 
	id1="SNMPD_SUBAGENT_SEND_FAILED" 
	id2="SNMPD_SUBAGENT_SEND_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Send to subagent failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Send to subagent failed (&lt;agent&gt;): &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_SYSLIB_FAILURE" 
	id2="SNMPD_SYSLIB_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:system function failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: system function &apos;&lt;dclass_counter1&gt;&apos; failed: &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_THROTTLE_QUEUE_DRAINED" 
	id2="SNMPD_THROTTLE_QUEUE_DRAINED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:cleared all throttled traps&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: cleared all throttled traps" />

<MESSAGE 
	id1="SNMPD_TRAP_COLD_START" 
	id2="SNMPD_TRAP_COLD_START" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP trap: cold start&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap: cold start" />

<MESSAGE 
	id1="SNMPD_TRAP_GEN_FAILURE" 
	id2="SNMPD_TRAP_GEN_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP trap error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: &lt;resultcode&gt; (&lt;result&gt;)" />

<MESSAGE 
	id1="SNMPD_TRAP_GEN_FAILURE2" 
	id2="SNMPD_TRAP_GEN_FAILURE2" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP trap error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: &lt;dclass_counter2&gt; &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_TRAP_INVALID_DATA" 
	id2="SNMPD_TRAP_INVALID_DATA" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP INVALID DATA&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: &lt;result&gt; (&lt;dclass_counter2&gt;) received" />

<MESSAGE 
	id1="SNMPD_TRAP_NOT_ENOUGH_VARBINDS" 
	id2="SNMPD_TRAP_NOT_ENOUGH_VARBINDS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: &lt;info&gt; (&lt;result&gt;)" />

<MESSAGE 
	id1="SNMPD_TRAP_QUEUED" 
	id2="SNMPD_TRAP_QUEUED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Adding trap to queue&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Adding trap to &lt;dclass_counter2&gt; to &lt;obj_name&gt; queue, &lt;dclass_counter1&gt; traps in queue" />

<MESSAGE 
	id1="SNMPD_TRAP_QUEUE_DRAINED" 
	id2="SNMPD_TRAP_QUEUE_DRAINED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:traps queued - sent successfully&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: traps queued to &lt;obj_name&gt; sent successfully" />

<MESSAGE 
	id1="SNMPD_TRAP_QUEUE_MAX_ATTEMPTS" 
	id2="SNMPD_TRAP_QUEUE_MAX_ATTEMPTS" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP QUEUE MAX_ATTEMPTS - deleting some traps&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: after &lt;dclass_counter1&gt; attempts, deleting &lt;dclass_counter2&gt; traps queued to &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMPD_TRAP_QUEUE_MAX_SIZE" 
	id2="SNMPD_TRAP_QUEUE_MAX_SIZE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP maximum queue size exceeded&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: maximum queue size exceeded (&lt;dclass_counter1&gt;), discarding trap to &lt;dclass_counter2&gt; from &lt;obj_name&gt; queue" />

<MESSAGE 
	id1="SNMPD_TRAP_THROTTLED" 
	id2="SNMPD_TRAP_THROTTLED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP traps throttled&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: traps throttled after &lt;dclass_counter1&gt; traps" />

<MESSAGE 
	id1="SNMPD_TRAP_TYPE_ERROR" 
	id2="SNMPD_TRAP_TYPE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:unknown SNMP trap type requested&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: unknown trap type requested (&lt;obj_type&gt; )" />

<MESSAGE 
	id1="SNMPD_TRAP_VARBIND_TYPE_ERROR" 
	id2="SNMPD_TRAP_VARBIND_TYPE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP VARBIND TYPE ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: expecting &lt;dclass_counter1&gt; varbind to be VT_NUMBER (&lt;resultcode&gt; )" />

<MESSAGE 
	id1="SNMPD_TRAP_VERSION_ERROR" 
	id2="SNMPD_TRAP_VERSION_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP ERROR - invalid version signature&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap error: invalid version signature (&lt;result&gt;)" />

<MESSAGE 
	id1="SNMPD_TRAP_WARM_START" 
	id2="SNMPD_TRAP_WARM_START" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD TRAP WARM START&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: SNMP trap: warm start" />

<MESSAGE 
	id1="SNMPD_USER_ERROR" 
	id2="SNMPD_USER_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD USER ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; in &lt;dclass_counter1&gt; user &apos;&lt;username&gt;&apos; &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="SNMPD_VIEW_DELETE" 
	id2="SNMPD_VIEW_DELETE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP deleting view&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: deleting view &lt;dclass_counter2&gt; &lt;result&gt;" />

<MESSAGE 
	id1="SNMPD_VIEW_INSTALL_DEFAULT" 
	id2="SNMPD_VIEW_INSTALL_DEFAULT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:installing default SNMP view&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: &lt;result&gt; installing default &lt;dclass_counter1&gt; view &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="SNMPD_VIEW_OID_PARSE" 
	id2="SNMPD_VIEW_OID_PARSE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:oid parsing failed for SNMP view&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: oid parsing failed for view &lt;dclass_counter2&gt; oid &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_GET_ERROR1" 
	id2="SNMP_GET_ERROR1" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP_GET_ERROR 1&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; &lt;dclass_counter1&gt; failed for &lt;dclass_counter2&gt; : &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_GET_ERROR2" 
	id2="SNMP_GET_ERROR2" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP GET ERROR 2&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; &lt;dclass_counter1&gt; failed for &lt;dclass_counter2&gt; : &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_GET_ERROR3" 
	id2="SNMP_GET_ERROR3" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP GET ERROR 3&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; &lt;dclass_counter1&gt; failed for &lt;dclass_counter2&gt; : &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_GET_ERROR4" 
	id2="SNMP_GET_ERROR4" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP GET ERROR 4&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt; &lt;dclass_counter1&gt; failed for &lt;dclass_counter2&gt; : &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_RTSLIB_FAILURE" 
	id2="SNMP_RTSLIB_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP RTSLIB FAILURE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;agent&gt;: rtslib-error: &lt;result&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_LINK_DOWN" 
	id2="SNMP_TRAP_LINK_DOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP LINK DOWN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifIndex &lt;dclass_counter1&gt;, ifAdminStatus &lt;resultcode&gt;, ifOperStatus &lt;result&gt;, ifName &lt;interface&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_LINK_UP" 
	id2="SNMP_TRAP_LINK_UP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP LINK UP&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: ifIndex &lt;dclass_counter1&gt;, ifAdminStatus &lt;resultcode&gt;, ifOperStatus &lt;result&gt;, ifName &lt;interface&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_PING_PROBE_FAILED" 
	id2="SNMP_TRAP_PING_PROBE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP PING PROBE FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pingCtlOwnerIndex = &lt;dclass_counter1&gt;, pingCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_PING_TEST_COMPLETED" 
	id2="SNMP_TRAP_PING_TEST_COMPLETED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP PING TEST COMPLETED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pingCtlOwnerIndex = &lt;dclass_counter1&gt;, pingCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_PING_TEST_FAILED" 
	id2="SNMP_TRAP_PING_TEST_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP PING TEST FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: pingCtlOwnerIndex = &lt;dclass_counter1&gt;, pingCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_TRACE_ROUTE_PATH_CHANGE" 
	id2="SNMP_TRAP_TRACE_ROUTE_PATH_CHANGE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP TRACE ROUTE PATH CHANGE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: traceRouteCtlOwnerIndex = &lt;dclass_counter1&gt;, traceRouteCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_TRACE_ROUTE_TEST_COMPLETED" 
	id2="SNMP_TRAP_TRACE_ROUTE_TEST_COMPLETED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP TRACE ROUTE TEST COMPLETED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: traceRouteCtlOwnerIndex = &lt;dclass_counter1&gt;, traceRouteCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMP_TRAP_TRACE_ROUTE_TEST_FAILED" 
	id2="SNMP_TRAP_TRACE_ROUTE_TEST_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP TRACE ROUTE TEST FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: traceRouteCtlOwnerIndex = &lt;dclass_counter1&gt;, traceRouteCtlTestName = &lt;obj_name&gt;" />

<MESSAGE 
	id1="SNMPD_AUTH_FAILURE:03" 
	id2="SNMPD_AUTH_FAILURE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMPD AUTH FAILURE&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld6)&gt;"
	content="&lt;process&gt; &lt;process_id&gt; &lt;event_type&gt; [junos@&lt;obj_name&gt; function-name=&quot;&lt;fld1&gt;&quot; message=&quot;&lt;info&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; index1=&quot;&lt;fld4&gt;&quot;]"/>

<MESSAGE 
	id1="SNMP_TRAP_LINK_DOWN:01" 
	id2="SNMP_TRAP_LINK_DOWN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP LINK DOWN&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld6)&gt;"
	 content="&lt;process&gt; &lt;process_id&gt; &lt;event_type&gt; [junos@&lt;obj_name&gt; snmp-interface-index=&quot;&lt;fld1&gt;&quot; admin-status=&quot;&lt;fld3&gt;&quot; operational-status=&quot;&lt;fld2&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot;]"/>

<MESSAGE 
	id1="SNMP_TRAP_LINK_UP:01" 
	id2="SNMP_TRAP_LINK_UP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:SNMP TRAP LINK UP&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld6)&gt;"
	content="&lt;process&gt; &lt;process_id&gt; &lt;event_type&gt; [junos@&lt;obj_name&gt; snmp-interface-index=&quot;&lt;fld1&gt;&quot; admin-status=&quot;&lt;fld3&gt;&quot; operational-status=&quot;&lt;event_state&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot;]"/>

<MESSAGE 
	id1="SSHD_LOGIN_FAILED"
	id2="SSHD_LOGIN_FAILED"
	eventcategory="1401030000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login Failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: Login failed for user &apos;&lt;username&gt;&apos; from host &apos;&lt;saddr&gt;&apos;" />

<MESSAGE
	id1="SSHD_LOGIN_FAILED:01"
	id2="SSHD_LOGIN_FAILED"
	eventcategory="1401030000"
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Login Failure&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;&lt;@process:*HDR(hfld33)&gt;"
	content="&lt;event_type&gt; [junos@&lt;obj_name&gt; username=&quot;&lt;username&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot;]"/>

<MESSAGE 
	id1="task_connect"
	id2="task_connect"
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:task connect failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: task &lt;agent&gt; addr &lt;daddr&gt;+&lt;dport&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="TASK_TASK_REINIT" 
	id2="TASK_TASK_REINIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Reinitializing&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reinitializing" />

<MESSAGE 
	id1="TFTPD_AF_ERR" 
	id2="TFTPD_AF_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unexpected address family&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unexpected address family &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="TFTPD_BIND_ERR" 
	id2="TFTPD_BIND_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD BIND ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: bind: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_CONNECT_ERR" 
	id2="TFTPD_CONNECT_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD CONNECT ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: connect: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_CONNECT_INFO" 
	id2="TFTPD_CONNECT_INFO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD CONNECT INFO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: TFTP &lt;protocol&gt; from address &lt;daddr&gt; port &lt;dport&gt; file &lt;filename&gt;" />

<MESSAGE 
	id1="TFTPD_CREATE_ERR" 
	id2="TFTPD_CREATE_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD CREATE ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: check_space &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_FIO_ERR" 
	id2="TFTPD_FIO_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD FIO ERR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_FORK_ERR" 
	id2="TFTPD_FORK_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD FORK ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: fork: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_NAK_ERR" 
	id2="TFTPD_NAK_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD NAK ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: nak error &lt;resultcode&gt;, &lt;dclass_counter1&gt;" />

<MESSAGE 
	id1="TFTPD_OPEN_ERR" 
	id2="TFTPD_OPEN_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to open file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to open file &apos;&lt;filename&gt;&apos;, error: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_RECVCOMPLETE_INFO" 
	id2="TFTPD_RECVCOMPLETE_INFO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD RECVCOMPLETE INFO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Received &lt;dclass_counter1&gt; blocks of &lt;dclass_counter2&gt; size for file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="TFTPD_RECVFROM_ERR" 
	id2="TFTPD_RECVFROM_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD RECVFROM ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: recvfrom: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_RECV_ERR" 
	id2="TFTPD_RECV_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD RECV ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: recv: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_SENDCOMPLETE_INFO" 
	id2="TFTPD_SENDCOMPLETE_INFO" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD SENDCOMPLETE INFO&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Sent &lt;dclass_counter1&gt; blocks of &lt;dclass_counter2&gt; and &lt;info&gt; for file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="TFTPD_SEND_ERR" 
	id2="TFTPD_SEND_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD SEND ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: send: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_SOCKET_ERR" 
	id2="TFTPD_SOCKET_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD SOCKET ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: socket: &lt;result&gt;" />

<MESSAGE 
	id1="TFTPD_STATFS_ERR" 
	id2="TFTPD_STATFS_ERR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TFTPD STATFS ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: statfs &lt;agent&gt;, error: &lt;result&gt;" />

<MESSAGE 
	id1="TNP"
	id2="TNP"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:adding neighbor to interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: adding neighbor &lt;dclass_counter1&gt; to interface &lt;interface&gt;" />

<MESSAGE 
	id1="trace_on" 
	id2="trace_on" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:tracing to file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@filename:*RMQ(fld33)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: tracing to &lt;fld33&gt; started" />

<MESSAGE 
	id1="trace_rotate" 
	id2="trace_rotate" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:trace rotating file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: rotating &lt;filename&gt;" />

<MESSAGE 
	id1="transfer-file" 
	id2="transfer-file" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:transfered file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;: &lt;event_type&gt;: Transferred &lt;filename&gt;" />

<MESSAGE 
	id1="ttloop" 
	id2="ttloop" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ttloop - peer died&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;:  peer died: &lt;result&gt;: &lt;resultcode&gt;" />

<MESSAGE 
	id1="UI_AUTH_EVENT" 
	id2="UI_AUTH_EVENT" 
	eventcategory="1302000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Authenticated user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Authenticated user &apos;&lt;username&gt;&apos; at permission level &apos;&lt;privilege&gt;&apos;" />

<MESSAGE 
	id1="UI_AUTH_INVALID_CHALLENGE" 
	id2="UI_AUTH_INVALID_CHALLENGE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Received invalid authentication challenge for user response&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Received invalid authentication challenge for user &apos;&lt;username&gt;&apos;: response" />

<MESSAGE 
	id1="UI_BOOTTIME_FAILED" 
	id2="UI_BOOTTIME_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to fetch boot time&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to fetch boot time: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_NEW" 
	id2="UI_CFG_AUDIT_NEW" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user path unknown&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; &lt;dclass_counter2&gt; path unknown" />

<MESSAGE 
	id1="UI_CFG_AUDIT_NEW:01" 
	id2="UI_CFG_AUDIT_NEW" 
	eventcategory="1701010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description: user Inserted Security Policies in config&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; insert: [edit-config config &lt;filename&gt; security policies &lt;policyname&gt;] &lt;info&gt;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User deleted file&gt;&lt;@action:delete&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; delete: [&lt;filename&gt;]" />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER:01" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User rollback file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; rollback: &lt;filename&gt;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER:02" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User set&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; set: [&lt;action&gt;] { &quot;&lt;info&gt;&quot; | &lt;space&gt; }" />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER:03" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User config replace&gt;&lt;@action:replace&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="  &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; replace: [edit-config config &lt;filename&gt; applications &lt;info&gt;]" />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER:04" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1701070000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User deactivating group(s)&gt;&lt;@action:deactivate&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; deactivate: [groups &lt;info&gt;] " />

<MESSAGE 
	id1="UI_CFG_AUDIT_OTHER:05" 
	id2="UI_CFG_AUDIT_OTHER" 
	eventcategory="1701020000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User updates config file&gt;&lt;@action:update&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; update: &lt;filename&gt;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET:01" 
	id2="UI_CFG_AUDIT_SET" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User set command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; set: [&lt;action&gt;] { &quot;&lt;change_old&gt;&quot; | &lt;&lt;&lt;change_old&gt;&gt; } -&gt; &quot;&lt;change_new&gt;&quot;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET:02" 
	id2="UI_CFG_AUDIT_SET" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User set command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; set: [&lt;action&gt;] { &quot;&lt;change_old&gt; | &lt;&lt;&lt;change_old&gt;&gt; } -&gt; &quot;&lt;change_new&gt;&quot;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET" 
	id2="UI_CFG_AUDIT_SET" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User replace config application(s)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; replace: [edit-config config &lt;filename&gt; applications &lt;info&gt;] &lt;&lt;&lt;disposition&gt;&gt; -&gt; &quot;&lt;agent&gt;&quot;" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET_SECRET:01" 
	id2="UI_CFG_AUDIT_SET_SECRET" 
	eventcategory="1701020000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User set groups to secret&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; { set | replace }: [groups &lt;info&gt; secret]" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET_SECRET:02" 
	id2="UI_CFG_AUDIT_SET_SECRET" 
	eventcategory="1701020000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User set groups to secret&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; { set | replace }: [&lt;info&gt;]" />

<MESSAGE 
	id1="UI_CFG_AUDIT_SET_SECRET" 
	id2="UI_CFG_AUDIT_SET_SECRET" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:UI CFG AUDIT SET SECRET&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; &lt;dclass_counter2&gt; &lt;directory&gt;" />

<MESSAGE 
	id1="UI_CHILD_ARGS_EXCEEDED" 
	id2="UI_CHILD_ARGS_EXCEEDED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Too many arguments for child process&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Too many arguments for child process &apos;&lt;agent&gt;&apos;" />

<MESSAGE 
	id1="UI_CHILD_CHANGE_USER" 
	id2="UI_CHILD_CHANGE_USER" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to switch to local user&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to switch to local user: &lt;username&gt;" />

<MESSAGE 
	id1="UI_CHILD_EXEC" 
	id2="UI_CHILD_EXEC" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Child exec failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child exec failed for command &apos;&lt;action&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CHILD_EXITED" 
	id2="UI_CHILD_EXITED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Child exited&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child exited: PID &lt;child_pid&gt;, status &lt;result&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_CHILD_FOPEN" 
	id2="UI_CHILD_FOPEN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to append to log&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to append to log &apos;&lt;filename&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CHILD_PIPE_FAILED" 
	id2="UI_CHILD_PIPE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to create pipe for command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to create pipe for command &apos;&lt;action&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CHILD_SIGNALED" 
	id2="UI_CHILD_SIGNALED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;&lt;@event_description:Child received signal&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child received signal: PID &lt;child_pid&gt;, signal &lt;result&gt;: &lt;resultcode&gt;, command=&apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_CHILD_STOPPED" 
	id2="UI_CHILD_STOPPED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Child stopped&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Child stopped: PID &lt;child_pid&gt;, signal=&lt;resultcode&gt; command=&apos;&lt;action&gt;&apos;)" />

<MESSAGE 
	id1="UI_CHILD_START" 
	id2="UI_CHILD_START" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Starting child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Starting child &apos;&lt;agent&gt;&apos;" />

<MESSAGE 
	id1="UI_CHILD_STATUS" 
	id2="UI_CHILD_STATUS" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Cleanup child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Cleanup child &apos;&lt;agent&gt;&apos;, PID &lt;child_pid&gt;, status &lt;result&gt;" />

<MESSAGE 
	id1="UI_CHILD_WAITPID" 
	id2="UI_CHILD_WAITPID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:waitpid failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: waitpid failed: PID &lt;child_pid&gt;, rc &lt;dclass_counter2&gt;, status &lt;resultcode&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CLI_IDLE_TIMEOUT"
	id2="UI_CLI_IDLE_TIMEOUT"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Idle timeout for user exceeded&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;event_type&gt;: Idle timeout for user &apos;&lt;username&gt;&apos; exceeded and &lt;result&gt;" />

<MESSAGE 
	id1="UI_CMDLINE_READ_LINE" 
	id2="UI_CMDLINE_READ_LINE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:UI CMDLINE READ LINE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_CMDSET_EXEC_FAILED" 
	id2="UI_CMDSET_EXEC_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command execution failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command execution failed for &apos;&lt;agent&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CMDSET_FORK_FAILED" 
	id2="UI_CMDSET_FORK_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to fork command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to fork command &apos;&lt;agent&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CMDSET_PIPE_FAILED" 
	id2="UI_CMDSET_PIPE_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to create pipes for command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to create pipes for command &apos;&lt;action&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_CMDSET_STOPPED" 
	id2="UI_CMDSET_STOPPED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command stopped&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command stopped: PID &lt;child_pid&gt;, signal &apos;&lt;resultcode&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_CMDSET_WEXITED" 
	id2="UI_CMDSET_WEXITED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Command exited&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Command exited: PID &lt;child_pid&gt;, status &lt;resultcode&gt;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_CMD_AUTH_REGEX_INVALID" 
	id2="UI_CMD_AUTH_REGEX_INVALID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Invalid regexp command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Invalid &apos;&lt;action&gt;&apos; command authorization regular expression &apos;&lt;agent&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_COMMIT" 
	id2="UI_COMMIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User commit&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; { requested &apos;&lt;action&gt;&apos; operation (comment:&lt;info&gt;) | performed &lt;action&gt; }" />

<MESSAGE 
	id1="UI_COMMIT_AT" 
	id2="UI_COMMIT_AT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User commit&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; performed &lt;result&gt;" />

<MESSAGE 
	id1="UI_COMMIT_AT_COMPLETED" 
	id2="UI_COMMIT_AT_COMPLETED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User commit successful&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &apos;&lt;agent&gt;&apos; was successful" />

<MESSAGE 
	id1="UI_COMMIT_AT_FAILED" 
	id2="UI_COMMIT_AT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User commit failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;result&gt;, &lt;info&gt;" />

<MESSAGE 
	id1="UI_COMMIT_COMPRESS_FAILED" 
	id2="UI_COMMIT_COMPRESS_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to compress file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to compress file &lt;filename&gt;&apos;" />

<MESSAGE 
	id1="UI_COMMIT_CONFIRMED" 
	id2="UI_COMMIT_CONFIRMED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:UI COMMIT CONFIRMED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; performed &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_COMMIT_CONFIRMED_REMINDER" 
	id2="UI_COMMIT_CONFIRMED_REMINDER" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:COMMIT must be confirmed within # minutes&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &apos;&lt;action&gt;&apos; must be confirmed { within minutes &lt;dclass_counter1&gt; | within &lt;dclass_counter1&gt; minutes }" />

<MESSAGE 
	id1="UI_COMMIT_CONFIRMED_TIMED" 
	id2="UI_COMMIT_CONFIRMED_TIMED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user performed commit confirm&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { User | user } &apos;&lt;username&gt;&apos; performed &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_COMMIT_EMPTY_CONTAINER" 
	id2="UI_COMMIT_EMPTY_CONTAINER" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Skipped empty object&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Skipped empty object &lt;result&gt;" />

<MESSAGE 
	id1="UI_COMMIT_NOT_CONFIRMED" 
	id2="UI_COMMIT_NOT_CONFIRMED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:COMMIT NOT CONFIRMED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Commit was not confirmed; &lt;result&gt;" />

<MESSAGE 
	id1="UI_COMMIT_PROGRESS" 
	id2="UI_COMMIT_PROGRESS" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Commit operation in progress&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;:  { commit | Commit operation in progress }: &lt;action&gt;" />

<MESSAGE 
	id1="UI_COMMIT_QUIT" 
	id2="UI_COMMIT_QUIT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:COMMIT QUIT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; performed &lt;action&gt;" />

<MESSAGE 
	id1="UI_COMMIT_ROLLBACK_FAILED" 
	id2="UI_COMMIT_ROLLBACK_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Automatic rollback failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Automatic rollback failed" />

<MESSAGE 
	id1="UI_COMMIT_SYNC" 
	id2="UI_COMMIT_SYNC" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:COMMIT SYNC&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; performed &lt;action&gt;" />

<MESSAGE 
	id1="UI_COMMIT_SYNC_FORCE" 
	id2="UI_COMMIT_SYNC_FORCE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:All logins to local configuration database were terminated&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: All logins to local configuration database were terminated because &lt;result&gt;" />

<MESSAGE 
	id1="UI_CONFIGURATION_ERROR" 
	id2="UI_CONFIGURATION_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CONFIGURATION ERROR&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Process: &lt;agent&gt;, path: { [&lt;filename&gt;], | &lt;filename&gt;, } statement: &lt;info&gt;{ , error: &lt;result&gt; | &lt;space&gt;} " />

<MESSAGE 
	id1="UI_DAEMON_ACCEPT_FAILED" 
	id2="UI_DAEMON_ACCEPT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:socket connection accept failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { Network | Local } socket connection accept failed: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DAEMON_FORK_FAILED" 
	id2="UI_DAEMON_FORK_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to create session child&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to create session child: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DAEMON_SELECT_FAILED" 
	id2="UI_DAEMON_SELECT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DAEMON SELECT FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: select failed: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DAEMON_SOCKET_FAILED" 
	id2="UI_DAEMON_SOCKET_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:socket create failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { Network | Local } socket create failed: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DBASE_ACCESS_FAILED" 
	id2="UI_DBASE_ACCESS_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to reaccess database file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to reaccess database file &apos;&lt;filename&gt;&apos;, address &lt;interface&gt;, size &lt;dclass_counter1&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DBASE_CHECKOUT_FAILED" 
	id2="UI_DBASE_CHECKOUT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database is out of data&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database &apos;&lt;filename&gt;&apos; is out of data and needs to be rebuilt" />

<MESSAGE 
	id1="UI_DBASE_EXTEND_FAILED" 
	id2="UI_DBASE_EXTEND_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to extend database file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to extend database file &apos;&lt;filename&gt;&apos; to size &lt;dclass_counter1&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DBASE_LOGIN_EVENT" 
	id2="UI_DBASE_LOGIN_EVENT" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User entering configuration mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; entering configuration mode" />

<MESSAGE 
	id1="UI_DBASE_LOGOUT_EVENT" 
	id2="UI_DBASE_LOGOUT_EVENT" 
	eventcategory="1401070000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logoff&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User exiting configuration mode&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; &lt;event_description&gt;" />

<MESSAGE 
	id1="UI_DBASE_MISMATCH_EXTENT" 
	id2="UI_DBASE_MISMATCH_EXTENT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database header extent mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database header extent mismatch for file &apos;&lt;agent&gt;&apos;: expecting &lt;dclass_counter1&gt;, got &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="UI_DBASE_MISMATCH_MAJOR" 
	id2="UI_DBASE_MISMATCH_MAJOR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database header major version number mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database header major version number mismatch for file &apos;&lt;filename&gt;&apos;: expecting &lt;dclass_counter1&gt;, got &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="UI_DBASE_MISMATCH_MINOR" 
	id2="UI_DBASE_MISMATCH_MINOR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database header minor version number mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database header minor version number mismatch for file &apos;&lt;filename&gt;&apos;: expecting &lt;dclass_counter1&gt;, got &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="UI_DBASE_MISMATCH_SEQUENCE" 
	id2="UI_DBASE_MISMATCH_SEQUENCE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database header sequence numbers mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database header sequence numbers mismatch for file &apos;&lt;filename&gt;&apos;" />

<MESSAGE 
	id1="UI_DBASE_MISMATCH_SIZE" 
	id2="UI_DBASE_MISMATCH_SIZE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database header size mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database header size mismatch for file &apos;&lt;filename&gt;&apos;: expecting &lt;dclass_counter1&gt;, got &lt;dclass_counter2&gt;" />

<MESSAGE 
	id1="UI_DBASE_OPEN_FAILED" 
	id2="UI_DBASE_OPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Database open failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Database open failed for file &apos;&lt;filename&gt;&apos;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_DBASE_REBUILD_FAILED" 
	id2="UI_DBASE_REBUILD_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DBASE REBUILD FAILED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &lt;username&gt; Automatic rebuild of the database &apos;&lt;filename&gt;&apos; failed" />

<MESSAGE 
	id1="UI_DBASE_REBUILD_SCHEMA_FAILED" 
	id2="UI_DBASE_REBUILD_SCHEMA_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Automatic rebuild of the database failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Automatic rebuild of the database failed" />

<MESSAGE 
	id1="UI_DBASE_REBUILD_STARTED" 
	id2="UI_DBASE_REBUILD_STARTED" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:DBASE REBUILD STARTED&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: { User | Automatic } &lt;username&gt; rebuild/rollback of the database &apos;&lt;filename&gt;&apos; started" />

<MESSAGE 
	id1="UI_DBASE_RECREATE" 
	id2="UI_DBASE_RECREATE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user attempting database re-creation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; attempting database re-creation" />

<MESSAGE 
	id1="UI_DBASE_REOPEN_FAILED" 
	id2="UI_DBASE_REOPEN_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Reopen of the database failed&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Reopen of the database failed" />

<MESSAGE 
	id1="UI_DUPLICATE_UID" 
	id2="UI_DUPLICATE_UID" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Users have the same UID&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Users &lt;username&gt; have the same UID &lt;uid&gt;" />

<MESSAGE 
	id1="UI_JUNOSCRIPT_CMD" 
	id2="UI_JUNOSCRIPT_CMD" 
	eventcategory="1401050100" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User used JUNOScript client to run command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; used JUNOScript client to run command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_JUNOSCRIPT_ERROR" 
	id2="UI_JUNOSCRIPT_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:JUNOScript error&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: JUNOScript error: &lt;result&gt;" />

<MESSAGE 
	id1="UI_LOAD_EVENT" 
	id2="UI_LOAD_EVENT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; is performing a &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_LOAD_JUNOS_DEFAULT_FILE_EVENT" 
	id2="UI_LOAD_JUNOS_DEFAULT_FILE_EVENT" 
	eventcategory="1701040000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Loading default config from file&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Loading the default config from &lt;filename&gt;" />

<MESSAGE
    id1="UI_LOGIN_EVENT:01"
    id2="UI_LOGIN_EVENT"
    eventcategory="1401060000"
    functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Successful login&gt;&lt;@hostname:*HDR(hostip)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
    content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; login, class &apos;&lt;group&gt;&apos; [&lt;fld01&gt;], &lt;info&gt; &apos;&lt;saddr&gt; &lt;sport&gt; &lt;daddr&gt; &lt;dport&gt;&apos;, client-mode &apos;&lt;fld02&gt;&apos;" />

<MESSAGE 
	id1="UI_LOGIN_EVENT" 
	id2="UI_LOGIN_EVENT" 
	eventcategory="1401060000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logon&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Successful login&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; login, class &apos;&lt;group&gt;&apos; &lt;info&gt;" />

<MESSAGE 
	id1="UI_LOGOUT_EVENT" 
	id2="UI_LOGOUT_EVENT" 
	eventcategory="1401070000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logoff&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User logout&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; logout" />

<MESSAGE 
	id1="UI_LOST_CONN" 
	id2="UI_LOST_CONN" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Lost connection to daemon&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Lost connection to daemon &lt;agent&gt;" />

<MESSAGE 
	id1="UI_MASTERSHIP_EVENT" 
	id2="UI_MASTERSHIP_EVENT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:MASTERSHIP EVENT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: &lt;action&gt; by &apos;&lt;username&gt;&apos;" />

<MESSAGE 
	id1="UI_MGD_TERMINATE" 
	id2="UI_MGD_TERMINATE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Terminating operation&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Terminating operation: exit status &lt;resultcode&gt;" />

<MESSAGE 
	id1="UI_NETCONF_CMD" 
	id2="UI_NETCONF_CMD" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:User used NETCONF client to run command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; used NETCONF client to run command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="UI_READ_FAILED" 
	id2="UI_READ_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:read failed for peer&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: read failed for peer &lt;hostname&gt;: &lt;result&gt;" />

<MESSAGE 
	id1="UI_READ_TIMEOUT" 
	id2="UI_READ_TIMEOUT" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Timeout on read of peer&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Timeout on read of peer &lt;hostname&gt;" />

<MESSAGE 
	id1="UI_REBOOT_EVENT" 
	id2="UI_REBOOT_EVENT" 
	eventcategory="1606000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:System reboot or halt&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: System &lt;action&gt; by &apos;&lt;username&gt;&apos;" />

<MESSAGE 
	id1="UI_RESTART_EVENT" 
	id2="UI_RESTART_EVENT" 
	eventcategory="1605010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:user restarting daemon&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: user &apos;&lt;username&gt;&apos; restarting daemon &lt;service&gt;" />

<MESSAGE 
	id1="UI_SCHEMA_CHECKOUT_FAILED" 
	id2="UI_SCHEMA_CHECKOUT_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Schema is out of date&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Schema is out of date and &lt;result&gt;" />

<MESSAGE 
	id1="UI_SCHEMA_MISMATCH_MAJOR" 
	id2="UI_SCHEMA_MISMATCH_MAJOR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Schema major version mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Schema major version mismatch for package &lt;filename&gt; &lt;result&gt;" />

<MESSAGE 
	id1="UI_SCHEMA_MISMATCH_MINOR" 
	id2="UI_SCHEMA_MISMATCH_MINOR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Schema minor version mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Schema minor version mismatch for package &lt;filename&gt; &lt;result&gt;" />

<MESSAGE 
	id1="UI_SCHEMA_MISMATCH_SEQUENCE" 
	id2="UI_SCHEMA_MISMATCH_SEQUENCE" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Schema header sequence numbers mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Schema header sequence numbers mismatch for package &lt;filename&gt;" />

<MESSAGE 
	id1="UI_SCHEMA_SEQUENCE_ERROR" 
	id2="UI_SCHEMA_SEQUENCE_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Schema sequence number mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Schema sequence number mismatch" />

<MESSAGE 
	id1="UI_SYNC_OTHER_RE" 
	id2="UI_SYNC_OTHER_RE" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Configuration synchronization with remote Routing Engine&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Configuration synchronization with remote Routing Engine &lt;result&gt;" />

<MESSAGE 
	id1="UI_TACPLUS_ERROR" 
	id2="UI_TACPLUS_ERROR" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TACACS+ failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: TACACS+ failure: &lt;result&gt;" />

<MESSAGE 
	id1="UI_VERSION_FAILED" 
	id2="UI_VERSION_FAILED" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to fetch system version&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to fetch system version: &lt;result&gt;" />

<MESSAGE 
	id1="UI_WRITE_RECONNECT" 
	id2="UI_WRITE_RECONNECT" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Re-establishing connection to peer&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Re-establishing connection to peer &lt;hostname&gt;" />

<MESSAGE 
	id1="VRRPD_NEWMASTER_TRAP" 
	id2="VRRPD_NEWMASTER_TRAP" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Interface new master for User&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Interface &lt;interface&gt; (local addr: &lt;saddr&gt;) is now master for &lt;username&gt;" />

<MESSAGE 
	id1="WEB_AUTH_FAIL" 
	id2="WEB_AUTH_FAIL" 
	eventcategory="1301000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to authenticate client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to authenticate &lt;obj_name&gt; (username &lt;c_username&gt;)" />

<MESSAGE 
	id1="WEB_AUTH_SUCCESS" 
	id2="WEB_AUTH_SUCCESS" 
	eventcategory="1302000000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Authenticated client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Authenticated &lt;agent&gt; client (username &lt;c_username&gt;)" />

<MESSAGE 
	id1="WEB_INTERFACE_UNAUTH" 
	id2="WEB_INTERFACE_UNAUTH" 
	eventcategory="1001030300" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:web request from unauthorized interface&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Web services request received from unauthorized interface &lt;interface&gt;" />

<MESSAGE 
	id1="WEB_READ" 
	id2="WEB_READ" 
	eventcategory="1801010000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Unable to read from client&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Unable to read from client: &lt;result&gt;" />

<MESSAGE 
	id1="WEBFILTER_REQUEST_NOT_CHECKED" 
	id2="WEBFILTER_REQUEST_NOT_CHECKED" 
	eventcategory="1204020100" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:failed to check web request&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;event_type&gt;: Error encountered: &lt;result&gt;, failed to check request &lt;url&gt;" />

<MESSAGE 
	id1="FLOW_REASSEMBLE_FAIL"
	id2="FLOW_REASSEMBLE_FAIL"
	eventcategory="1801010000" 
	functions="&lt;@ec_subject:NetworkComm&gt;&lt;@ec_outcome:Failure&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;obj_name&gt; source-address=&quot;&lt;saddr&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; assembly-id=&quot;&lt;fld1&gt;&quot;]" />

<MESSAGE 
	id1="eswd" 
	id2="eswd" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Bridge Address&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: Bridge Address: add &lt;macaddr&gt;" />

<MESSAGE 
	id1="eswd:01" 
	id2="eswd" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ESWD STP State Change Info&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;info&gt;: STP state for interface &lt;interface&gt;  context id &lt;id&gt; changed from &lt;fld3&gt;" />

<MESSAGE 
	id1="/usr/sbin/cron" 
	id2="/usr/sbin/cron" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:CRON command&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: (&lt;username&gt;) CMD ( &lt;action&gt;)" />

 
<MESSAGE 
	id1="chassism:02" 
	id2="chassism" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Link status change event&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;info&gt;: ifd &lt;interface&gt; &lt;action&gt;" />

<MESSAGE 
	id1="chassism:01" 
	id2="chassism" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:ifd process flaps&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;info&gt;: &lt;interface&gt;, &lt;action&gt;" />

<MESSAGE 
	id1="chassism" 
	id2="chassism" 
	eventcategory="1605010000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:IFCM &gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;process&gt;[&lt;process_id&gt;]: &lt;info&gt;: &lt;action&gt;" />

<MESSAGE
	id1="WEBFILTER_URL_PERMITTED"
	id2="WEBFILTER_URL_PERMITTED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&quot;&lt;directory&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot;] WebFilter: ACTION=&quot;&lt;action&gt;&quot; &lt;fld2&gt;-&gt;&lt;fld3&gt; CATEGORY=&quot;&lt;category&gt;&quot; REASON=&quot;&lt;fld4&gt;&quot; PROFILE=&quot;&lt;fld6&gt;&quot; URL=&lt;url&gt; OBJ=&lt;fld7&gt; USERNAME=&lt;fld8&gt; ROLES=&lt;fld9&gt;" />
<MESSAGE
	id1="WEBFILTER_URL_PERMITTED:01"
	id2="WEBFILTER_URL_PERMITTED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&quot;&lt;directory&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot;] WebFilter: ACTION=&quot;&lt;action&gt;&quot; &lt;fld2&gt;-&gt;&lt;fld3&gt; CATEGORY=&quot;&lt;category&gt;&quot; REASON=&quot;&lt;fld4&gt;&quot; PROFILE=&quot;&lt;fld6&gt;&quot; URL=&lt;url&gt; OBJ=&lt;fld7&gt;" />
<MESSAGE
	id1="WEBFILTER_URL_PERMITTED:03"
	id2="WEBFILTER_URL_PERMITTED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&quot;&lt;directory&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot;] WebFilter: ACTION=&quot;&lt;action&gt;&quot; &lt;fld2&gt;-&gt;&lt;fld3&gt; CATEGORY=&quot;&lt;category&gt;&quot; REASON=&lt;fld4&gt;" />
<MESSAGE
	id1="WEBFILTER_URL_PERMITTED:02"
	id2="WEBFILTER_URL_PERMITTED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&lt;url&gt;" />
<MESSAGE
	id1="WEBFILTER_URL_BLOCKED"
	id2="WEBFILTER_URL_BLOCKED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&quot;&lt;directory&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot;] WebFilter: ACTION=&quot;&lt;action&gt;&quot; &lt;fld2&gt;-&gt;&lt;fld3&gt; CATEGORY=&quot;&lt;category&gt;&quot; REASON=&quot;&lt;fld4&gt;&quot; PROFILE=&quot;&lt;fld6&gt;&quot; URL=&lt;url&gt; OBJ=&lt;fld7&gt; USERNAME=&lt;fld8&gt; ROLES=&lt;fld9&gt;" />
		
<MESSAGE
	id1="WEBFILTER_URL_BLOCKED:01"
	id2="WEBFILTER_URL_BLOCKED"
	eventcategory="1603000000"
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@event_time:*EVNTTIME($HDR,&apos;%W-%G-%FT%N:%U:%O&apos;,hfld32)&gt;"
	content=" &lt;event_type&gt; [junos@&lt;fld21&gt; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; name=&quot;&lt;info&gt;&quot; error-message=&quot;&lt;result&gt;&quot; profile-name=&quot;&lt;profile&gt;&quot; object-name=&quot;&lt;obj_name&gt;&quot; pathname=&quot;&lt;directory&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot;] WebFilter: ACTION=&quot;&lt;action&gt;&quot; &lt;fld2&gt;-&gt;&lt;fld3&gt; CATEGORY=&quot;&lt;category&gt;&quot; REASON=&quot;&lt;fld4&gt;&quot; PROFILE=&quot;&lt;fld6&gt;&quot; URL=&lt;url&gt;" />

<MESSAGE 
	id1="last:01"
	id2="last"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="message repeated &lt;dclass_counter1&gt; times" />

<MESSAGE 
	id1="SECINTEL_NETWORK_CONNECT_FAILED"
	id2="SECINTEL_NETWORK_CONNECT_FAILED"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hostip)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: &lt;id&gt;: &lt;&lt;&lt;fld12&gt;&gt; Access url &lt;url&gt; on port &lt;network_port&gt; failed&lt;&lt;&lt;result&gt;&gt;." />

<MESSAGE 
	id1="AAMWD_NETWORK_CONNECT_FAILED"
	id2="AAMWD_NETWORK_CONNECT_FAILED"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: &lt;id&gt;: &lt;&lt;&lt;fld12&gt;&gt; Access host &lt;hostname&gt; on ip &lt;hostip&gt; port &lt;network_port&gt; &lt;result&gt;." />

<MESSAGE 
	id1="PKID_UNABLE_TO_GET_CRL"
	id2="PKID_UNABLE_TO_GET_CRL"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hostip)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: &lt;id&gt;: Failed to retrieve CRL from received file for &lt;node&gt;" />

<MESSAGE 
	id1="SECINTEL_ERROR_OTHERS"
	id2="SECINTEL_ERROR_OTHERS"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hostip)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: &lt;id&gt;: &lt;&lt;&lt;fld12&gt;&gt; &lt;result&gt;" />

<MESSAGE 
	id1="JSRPD_HA_CONTROL_LINK_UP"
	id2="JSRPD_HA_CONTROL_LINK_UP"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hostip)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: &lt;id&gt;: HA control link monitor status is marked up" />

<MESSAGE 
	id1="LACPD_TIMEOUT"
	id2="LACPD_TIMEOUT"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hostip)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]: LACPD_TIMEOUT: &lt;sinterface&gt;: &lt;event_description&gt;" />

<MESSAGE 
	id1="Failed"
	id2="Failed"
	eventcategory="1803000000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;process&gt;[&lt;process_id&gt;]: Failed to resolve {ipv4|ipv6} addresses for domain name &lt;sdomain&gt;" />

<MESSAGE 
	id1="cli"
	id2="cli"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;fld12&gt;" />

<MESSAGE 
	id1="pfed"
	id2="pfed"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;fld12&gt;" />

		
<MESSAGE 
	id1="idpinfo"
	id2="idpinfo"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;fld12&gt;" />

	
<MESSAGE 
	id1="kmd"
	id2="kmd"
	eventcategory="1605020000"
	functions="&lt;@event_type:VPN&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;fld12&gt;" />

		
<MESSAGE 
	id1="node:01"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; Next-hop resolution requests from interface &lt;interface&gt; throttled" />

<MESSAGE 
	id1="node:02"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;process&gt;: Trying peer connection, status &lt;resultcode&gt;, attempt &lt;fld1&gt;" />

<MESSAGE 
	id1="node:03"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;process&gt;: trying master connection, status &lt;resultcode&gt;, attempt &lt;fld1&gt;" />

<MESSAGE 
	id1="node:04"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;fld1&gt; key &lt;fld2&gt; &lt;fld3&gt; port priority &lt;fld6&gt; &lt;fld4&gt; port &lt;portname&gt; &lt;fld5&gt; state &lt;resultcode&gt;" />

 <MESSAGE 
	id1="node:05"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt;   {partner|actor} sys priority &lt;fld4&gt; {actor|partner} sys &lt;interface&gt;" /> 
  
  <MESSAGE 
	id1="node:06"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt;  {dst mac &lt;dinterface&gt;|src mac &lt;sinterface&gt; ether type &lt;fld1&gt;}" />

 <MESSAGE 
	id1="node:07"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;process&gt;: interface &lt;interface&gt; trigger reth_scan" />

<MESSAGE 
	id1="node:08"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;process&gt;: &lt;info&gt;" />

<MESSAGE 
	id1="node:09"
	id2="node"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;node&gt; &lt;fld1&gt;" />

<MESSAGE 
	id1="(FPC:01"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; kernel: &lt;event_type&gt;: deleting active remote neighbor entry &lt;fld2&gt; from interface &lt;interface&gt;." />

<MESSAGE 
	id1="(FPC:02"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; kernel: &lt;event_type&gt; deleting nb &lt;fld2&gt; on ifd &lt;interface&gt; for cid &lt;fld3&gt; from active neighbor table" />

 <MESSAGE 
	id1="(FPC:03"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; kernel: &lt;event_type&gt;: { MDOWN | MUP } received for interface &lt;interface&gt;, member of &lt;fld4&gt;" /> 
 
<MESSAGE 
	id1="(FPC:04"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; kernel: &lt;event_type&gt;: ifd=&lt;interface&gt;, ifd flags=&lt;fld2&gt;" />

<MESSAGE 
	id1="(FPC:05"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; kernel: rdp keepalive expired, connection dropped - src &lt;fld3&gt;:&lt;fld2&gt; dest &lt;fld4&gt;:&lt;fld5&gt;" />

<MESSAGE 
	id1="(FPC"
	id2="(FPC"
	eventcategory="1605000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;fld1&gt;) &lt;node&gt; &lt;fld10&gt;" /> 

<MESSAGE
	id1="tnp.bootpd"
	id2="tnp.bootpd"
	eventcategory="1605020000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;process&gt;[&lt;process_id&gt;]:&lt;fld1&gt;"/>
	 

<MESSAGE 
	id1="Failed:01"
	id2="Failed"
	eventcategory="1803000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;hostname&gt; &lt;process&gt;[&lt;process_id&gt;]: &lt;fld1&gt;" />

<MESSAGE 
	id1="Failed:02"
	id2="Failed"
	eventcategory="1803000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hfld1)&gt;"
	content="{&lt;fld1&gt; to create a route if table for Multiservice |&lt;fld10&gt;}" />

<MESSAGE
	id1="AAMW_ACTION_LOG"
	id2="AAMW_ACTION_LOG"
	eventcategory="1605020000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; hostname=&quot;&lt;hostname&gt;&quot; file-category=&quot;&lt;fld9&gt;&quot; verdict-number=&quot;&lt;fld10&gt;&quot; action=&quot;&lt;action&gt;&quot; list-hit=&quot;&lt;fld19&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; application=&quot;&lt;fld6&gt;&quot; nested-application=&quot;&lt;fld7&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; url=&quot;&lt;url&gt;&quot;] &lt;fld27&gt;"/>

<MESSAGE
	id1="AAMW_HOST_INFECTED_EVENT_LOG"
	id2="AAMW_HOST_INFECTED_EVENT_LOG"
	eventcategory="1003010000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; timestamp=&quot;&lt;fld30&gt;&quot; tenant-id=&quot;&lt;fld1&gt;&quot; client-ip-str=&quot;&lt;hostip&gt;&quot; hostname=&quot;&lt;hostname&gt;&quot; status=&quot;&lt;fld13&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; verdict-number=&quot;&lt;fld15&gt;&quot; state=&quot;&lt;fld16&gt;&quot; reason=&quot;&lt;result&gt;&quot; message=&quot;&lt;info&gt;&quot; &lt;fld3&gt;"/>

<MESSAGE
	id1="AAMW_MALWARE_EVENT_LOG"
	id2="AAMW_MALWARE_EVENT_LOG"
	eventcategory="1003010000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; timestamp=&quot;&lt;fld30&gt;&quot; tenant-id=&quot;&lt;fld1&gt;&quot; sample-sha256=&quot;&lt;checksum&gt;&quot; client-ip-str=&quot;&lt;hostip&gt;&quot; verdict-number=&quot;&lt;fld26&gt;&quot; malware-info=&quot;&lt;threat_name&gt;&quot; username=&quot;&lt;username&gt;&quot; hostname=&quot;&lt;hostname&gt;&quot; &lt;fld3&gt;"/>

<MESSAGE
	id1="IDP_ATTACK_LOG_EVENT"
	id2="IDP_ATTACK_LOG_EVENT"
	eventcategory="1001020300"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; epoch-time=&quot;&lt;fld1&gt;&quot; message-type=&quot;&lt;info&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-name=&quot;&lt;protocol&gt;&quot; service-name=&quot;&lt;service&gt;&quot; application-name=&quot;&lt;application&gt;&quot; rule-name=&quot;&lt;fld5&gt;&quot; rulebase-name=&quot;&lt;rulename&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; export-id=&quot;&lt;fld6&gt;&quot; repeat-count=&quot;&lt;fld7&gt;&quot; action=&quot;&lt;action&gt;&quot; threat-severity=&quot;&lt;severity&gt;&quot; attack-name=&quot;&lt;threat_name&gt;&quot; nat-source-address=&quot;&lt;hostip&gt;&quot; nat-source-port=&quot;&lt;network_port&gt;&quot; nat-destination-address=&quot;&lt;dtransaddr&gt;&quot; nat-destination-port=&quot;&lt;dtransport&gt;&quot; elapsed-time=&lt;fld8&gt; inbound-bytes=&quot;&lt;rbytes&gt;&quot; outbound-bytes=&quot;&lt;sbytes&gt;&quot; inbound-packets=&quot;&lt;packets&gt;&quot; outbound-packets=&quot;&lt;dclass_counter1&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; source-interface-name=&quot;&lt;sinterface&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot; destination-interface-name=&quot;&lt;dinterface&gt;&quot; packet-log-id=&quot;&lt;fld9&gt;&quot; alert=&quot;&lt;fld19&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;fld15&gt;&quot; message=&quot;&lt;fld28&gt;&quot; &lt;fld3&gt;"/>

<MESSAGE
	id1="RT_SCREEN_ICMP"
	id2="RT_SCREEN_ICMP"
	eventcategory="1001020300"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; attack-name=&quot;&lt;threat_name&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; interface-name=&quot;&lt;interface&gt;&quot; action=&quot;&lt;action&gt;&quot;] &lt;fld23&gt;"/>

<MESSAGE
	id1="SECINTEL_ACTION_LOG"
	id2="SECINTEL_ACTION_LOG"
	eventcategory="1803000000" 
	functions="&lt;@event_time:*EVNTTIME($HDR,'%W-%G-%FT%N:%U:%O',hfld32)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhostname)&gt;"
	content="&lt;event_type&gt;[junos@&lt;fld32&gt; category=&quot;&lt;fld1&gt;&quot; sub-category=&quot;&lt;fld2&gt;&quot; action=&quot;&lt;action&gt;&quot; action-detail=&quot;&lt;fld4&gt;&quot; http-host=&quot;&lt;fld17&gt;&quot; threat-severity=&quot;&lt;severity&gt;&quot; source-address=&quot;&lt;saddr&gt;&quot; source-port=&quot;&lt;sport&gt;&quot; destination-address=&quot;&lt;daddr&gt;&quot; destination-port=&quot;&lt;dport&gt;&quot; protocol-id=&quot;&lt;protocol&gt;&quot; application=&quot;&lt;fld5&gt;&quot; nested-application=&quot;&lt;fld6&gt;&quot; feed-name=&quot;&lt;fld18&gt;&quot; policy-name=&quot;&lt;policyname&gt;&quot; profile-name=&quot;&lt;rulename&gt;&quot; username=&quot;&lt;username&gt;&quot; roles=&quot;&lt;user_role&gt;&quot; session-id-32=&quot;&lt;sessionid&gt;&quot; source-zone-name=&quot;&lt;src_zone&gt;&quot; destination-zone-name=&quot;&lt;dst_zone&gt;&quot;]&lt;fld10&gt;"/>

<MESSAGE
	id1="qsfp"
	id2="qsfp"
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;hostname&gt; {&lt;fld2&gt; &lt;fld3&gt; &lt;process&gt;: qsfp-&lt;interface&gt; Chan# |&lt;fld2&gt; qsfp-&lt;interface&gt; Chan# }&lt;fld5&gt;:&lt;event_description&gt;"/>

<MESSAGE 
	id1="JUNOSROUTER_GENERIC:03" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1605000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:UI CMDLINE READ LINE&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;event_type&gt;: User &apos;&lt;username&gt;&apos;, command &apos;&lt;action&gt;&apos;" />

<MESSAGE 
	id1="JUNOSROUTER_GENERIC:04" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1401070000" 
	functions="&lt;@ec_theme:Authentication&gt;&lt;@ec_subject:User&gt;&lt;@ec_activity:Logoff&gt;&lt;@ec_outcome:Success&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:LOGOUT&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;event_type&gt;: User &apos;&lt;username&gt;&apos; &lt;fld1&gt;" />

<MESSAGE 
	id1="JUNOSROUTER_GENERIC:05" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1603000000" 
	functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:TACACS+ failure&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;event_type&gt;: TACACS+ failure: &lt;result&gt;" />

<MESSAGE  
	id1="JUNOSROUTER_GENERIC:06" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1603000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:peer NLRI mismatch&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content="&lt;event_type&gt;: mismatch NLRI with &lt;hostip&gt; (&lt;hostname&gt;): peer: &lt;daddr&gt; us: &lt;saddr&gt;" />

<MESSAGE 
	id1="JUNOSROUTER_GENERIC:07" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rpd proceeding&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;event_type&gt;: NOTIFICATION sent to &lt;daddr&gt; (&lt;dhost&gt;): code &lt;resultcode&gt; (&lt;action&gt;), Reason: &lt;result&gt; " />

<MESSAGE 
	id1="JUNOSROUTER_GENERIC:08" 
	id2="JUNOSROUTER_GENERIC" 
	eventcategory="1605000000" 
	functions="&lt;@:*SYSVAL($MSGID,$ID1)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:rpd proceeding&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	content=" &lt;event_type&gt;: NOTIFICATION received from {&lt;daddr&gt; (&lt;dhost&gt;): code &lt;resultcode&gt; (&lt;action&gt;), socket buffer sndcc: &lt;fld1&gt; rcvcc: &lt;fld2&gt; TCP state: &lt;event_state&gt;, snd_una: &lt;fld3&gt; snd_nxt: &lt;fld4&gt; snd_wnd: &lt;fld5&gt; rcv_nxt: &lt;fld6&gt; rcv_adv: &lt;fld7&gt;, hold timer &lt;fld8&gt;|&lt;daddr&gt; (&lt;dhost&gt;): code &lt;resultcode&gt; (&lt;action&gt;)} " />

<MESSAGE
	 id1="JUNOSROUTER_GENERIC:09"
	 id2="JUNOSROUTER_GENERIC"
	 eventcategory="1605000000"
	 functions="&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;"
	 content="&lt;event_type&gt;: [edit interfaces&lt;interface&gt;unit&lt;fld1&gt;family inet address&lt;hostip&gt;/&lt;network_port&gt;] :&lt;event_description&gt;:&lt;info&gt;"/>

 <MESSAGE
	id1="JUNOSROUTER_GENERIC:01"
	id2="JUNOSROUTER_GENERIC"
	eventcategory="1901000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Interface Monitor failed &gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;event_type&gt; Interface Monitor failed &lt;fld1&gt;"/>

 <MESSAGE
	id1="JUNOSROUTER_GENERIC:02"
	id2="JUNOSROUTER_GENERIC"
	eventcategory="1901000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@event_description:Interface Monitor failure recovered&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;event_type&gt; Interface Monitor failure recovered &lt;fld1&gt;"/>

<MESSAGE
	id1="JUNOSROUTER_GENERIC"
	id2="JUNOSROUTER_GENERIC"
	eventcategory="1901000000"
	functions="&lt;@event_time:*EVNTTIME($HDR,'%B %F %H:%U:%O',month,day,time)&gt;&lt;@msg:*PARMVAL($MSG)&gt;&lt;@hostname:*HDR(hhost)&gt;"
	content="&lt;event_type&gt; &lt;fld1&gt;"/>

</DEVICEMESSAGES>
